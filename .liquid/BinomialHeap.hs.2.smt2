(set-option :auto-config false)
(set-option :model true)
(set-option :model.partial false)

(set-option :smt.mbqi false)

(define-sort Str () Int)
(declare-fun strLen (Str) Int)
(declare-fun subString (Str Int Int) Str)
(declare-fun concatString (Str Str) Str)
(define-sort Elt () Int)
(define-sort LSet () (Array Elt Bool))
(define-fun smt_set_emp () LSet ((as const LSet) false))
(define-fun smt_set_mem ((x Elt) (s LSet)) Bool (select s x))
(define-fun smt_set_add ((s LSet) (x Elt)) LSet (store s x true))
(define-fun smt_set_cup ((s1 LSet) (s2 LSet)) LSet ((_ map or) s1 s2))
(define-fun smt_set_cap ((s1 LSet) (s2 LSet)) LSet ((_ map and) s1 s2))
(define-fun smt_set_com ((s LSet)) LSet ((_ map not) s))
(define-fun smt_set_dif ((s1 LSet) (s2 LSet)) LSet (smt_set_cap s1 (smt_set_com s2)))
(define-fun smt_set_sub ((s1 LSet) (s2 LSet)) Bool (= smt_set_emp (smt_set_dif s1 s2)))
(define-sort Map () (Array Elt Elt))
(define-fun smt_map_sel ((m Map) (k Elt)) Elt (select m k))
(define-fun smt_map_sto ((m Map) (k Elt) (v Elt)) Map (store m k v))
(define-fun smt_map_cup ((m1 Map) (m2 Map)) Map ((_ map (+ (Elt Elt) Elt)) m1 m2))
(define-fun smt_map_def ((v Elt)) Map ((as const (Map)) v))
(define-fun bool_to_int ((b Bool)) Int (ite b 1 0))
(define-fun Z3_OP_MUL ((x Int) (y Int)) Int (* x y))
(define-fun Z3_OP_DIV ((x Int) (y Int)) Int (div x y))
(declare-fun fix$36$$36$krep_a3AX () Int)
(declare-fun lq_tmp$36$x$35$$35$3822 () Int)
(declare-fun VV$35$$35$7672 () Bool)
(declare-fun GHC.Show.showParen () Int)
(declare-fun lq_tmp$36$x$35$$35$3132 () Int)
(declare-fun GHC.Base.id () Int)
(declare-fun cast_as_int () Int)
(declare-fun VV$35$$35$7254 () Int)
(declare-fun VV$35$$35$8433 () Int)
(declare-fun lq_tmp$36$x$35$$35$6195 () Int)
(declare-fun VV$35$$35$8048 () Int)
(declare-fun lq_tmp$36$x$35$$35$2980 () Int)
(declare-fun lq_tmp$36$x$35$$35$4007 () Int)
(declare-fun GHC.List.init () Int)
(declare-fun lq_tmp$36$x$35$$35$2661 () Int)
(declare-fun lq_karg$36$ds_d3EQ$35$$35$k_$35$$35$6419 () Int)
(declare-fun addrLen () Int)
(declare-fun VV$35$$35$8217 () Int)
(declare-fun VV$35$$35$8958 () Int)
(declare-fun VV$35$$35$10027 () Int)
(declare-fun lq_tmp$36$x$35$$35$2090 () Int)
(declare-fun papp5 () Int)
(declare-fun GHC.List.iterate () Int)
(declare-fun x_Tuple21 () Int)
(declare-fun lq_karg$36$y$35$$35$a2MD$35$$35$k_$35$$35$6419 () Int)
(declare-fun lq_tmp$36$x$35$$35$4465 () Int)
(declare-fun GHC.Classes.$61$$61$ () Int)
(declare-fun GHC.Types.C$35$ () Int)
(declare-fun GHC.List.drop () Int)
(declare-fun VV$35$$35$7365 () Bool)
(declare-fun lq_anf$36$$35$$35$7205759403792808032$35$$35$d3KM () Int)
(declare-fun lq_tmp$36$x$35$$35$4048 () Int)
(declare-fun lq_tmp$36$x$35$$35$6754 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792807917$35$$35$d3IV () Int)
(declare-fun lq_tmp$36$x$35$$35$3641 () Int)
(declare-fun VV$35$$35$10152 () Int)
(declare-fun fix$36$$36$cshowsPrec$35$$35$a3zD () Int)
(declare-fun VV$35$$35$8258 () Int)
(declare-fun lq_tmp$36$x$35$$35$3874 () Int)
(declare-fun lq_tmp$36$x$35$$35$3658 () Int)
(declare-fun lq_tmp$36$x$35$$35$2310 () Int)
(declare-fun VV$35$$35$F$35$$35$23 () Int)
(declare-fun lq_tmp$36$x$35$$35$2031 () Int)
(declare-fun lq_tmp$36$x$35$$35$3065 () Int)
(declare-fun Data.Foldable.length () Int)
(declare-fun x_Tuple33 () Int)
(declare-fun GHC.Types.$36$tcInt () Int)
(declare-fun GHC.Types.LT () Int)
(declare-fun VV$35$$35$7462 () Int)
(declare-fun VV$35$$35$8263 () Int)
(declare-fun VV$35$$35$7495 () Int)
(declare-fun lq_tmp$36$x$35$$35$3560 () Int)
(declare-fun VV$35$$35$9781 () Int)
(declare-fun GHC.List.replicate () Int)
(declare-fun lq_tmp$36$x$35$$35$4774 () Int)
(declare-fun GHC.List.zipWith () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792808008$35$$35$d3Ko$35$$35$k_$35$$35$6415 () Int)
(declare-fun VV$35$$35$9583 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792807982$35$$35$d3JY () Int)
(declare-fun lq_tmp$36$x$35$$35$5836 () Int)
(declare-fun lq_tmp$36$x$35$$35$2637 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792807969$35$$35$d3JL () Int)
(declare-fun VV$35$$35$9017 () Int)
(declare-fun VV$35$$35$8492 () Int)
(declare-fun GHC.Classes.$62$$61$ () Int)
(declare-fun VV$35$$35$8233 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808009$35$$35$d3Kp () Bool)
(declare-fun Data.Heap.Binominal.isOrdered () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808003$35$$35$d3Kj () Int)
(declare-fun GHC.Types.$36$tc$91$$93$ () Int)
(declare-fun lq_tmp$36$x$35$$35$5585 () Int)
(declare-fun x$35$$35$a2FG () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808007$35$$35$d3Kn () Int)
(declare-fun GHC.Num.fromInteger () Int)
(declare-fun VV$35$$35$8486 () Int)
(declare-fun VV$35$$35$9957 () Int)
(declare-fun VV$35$$35$7050 () Int)
(declare-fun papp3 () Int)
(declare-fun lq_tmp$36$x$35$$35$5550 () Int)
(declare-fun fix$36$$36$krep_a3B5 () Int)
(declare-fun GHC.List.span () Int)
(declare-fun lq_tmp$36$x$35$$35$4562 () Int)
(declare-fun lq_tmp$36$x$35$$35$4999 () Int)
(declare-fun lq_tmp$36$x$35$$35$6913 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808044$35$$35$d3KY () Int)
(declare-fun lit$36$$39$Node () Str)
(declare-fun GHC.Classes.$62$ () Int)
(declare-fun ds_d3EP () Int)
(declare-fun Data.Heap.Binominal.$36$fShowHeap () Int)
(declare-fun VV$35$$35$F$35$$35$37 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808005$35$$35$d3Kl () Int)
(declare-fun GHC.Types.False () Bool)
(declare-fun Control.Applicative.WrapMonad () Int)
(declare-fun VV$35$$35$7151 () Int)
(declare-fun lq_tmp$36$x$35$$35$4832 () Int)
(declare-fun GHC.List.scanr1 () Int)
(declare-fun VV$35$$35$8354 () Int)
(declare-fun VV$35$$35$8947 () Int)
(declare-fun lq_tmp$36$x$35$$35$1756 () Int)
(declare-fun r1$35$$35$a2jP () Int)
(declare-fun VV$35$$35$7959 () Int)
(declare-fun t$35$$35$a2JW () Int)
(declare-fun lq_tmp$36$x$35$$35$5819 () Int)
(declare-fun Data.Heap.Binominal.empty () Int)
(declare-fun VV$35$$35$7085 () Int)
(declare-fun lq_tmp$36$x$35$$35$2019 () Int)
(declare-fun r2$35$$35$a2jT () Int)
(declare-fun GHC.Types.$58$ () Int)
(declare-fun VV$35$$35$8317 () Int)
(declare-fun lq_tmp$36$x$35$$35$3922 () Int)
(declare-fun GHC.List.scanl () Int)
(declare-fun lq_tmp$36$x$35$$35$6141 () Int)
(declare-fun Data.OldList.unfoldr () Int)
(declare-fun GHC.Tuple.$40$$44$$44$$41$ () Int)
(declare-fun papp4 () Int)
(declare-fun GHC.Types.Module () Int)
(declare-fun VV$35$$35$10158 () Int)
(declare-fun GHC.List.zip () Int)
(declare-fun fix$36$$36$krep_a3B2 () Int)
(declare-fun lq_tmp$36$x$35$$35$4464 () Int)
(declare-fun fix$36$$36$dOrd_a3xa () Int)
(declare-fun lq_tmp$36$x$35$$35$2118 () Int)
(declare-fun VV$35$$35$7309 () Int)
(declare-fun VV$35$$35$8072 () Int)
(declare-fun VV$35$$35$F$35$$35$29 () Int)
(declare-fun lq_karg$36$ds_d3EP$35$$35$k_$35$$35$6419 () Int)
(declare-fun GHC.Tuple.$40$$41$ () Int)
(declare-fun lq_tmp$36$x$35$$35$3212 () Int)
(declare-fun GHC.Types.I$35$ () Int)
(declare-fun VV$35$$35$8577 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808037$35$$35$d3KR () Int)
(declare-fun GHC.Num.$36$fNumInt () Int)
(declare-fun GHC.CString.unpackCString$35$ () Int)
(declare-fun VV$35$$35$7468 () Int)
(declare-fun VV$35$$35$F$35$$35$30 () Int)
(declare-fun GHC.Types.KindRepFun () Int)
(declare-fun VV$35$$35$9567 () Int)
(declare-fun lit$36$Node$32$ () Str)
(declare-fun lq_tmp$36$x$35$$35$4006 () Int)
(declare-fun lq_tmp$36$x$35$$35$6199 () Int)
(declare-fun lq_tmp$36$x$35$$35$3590 () Int)
(declare-fun VV$35$$35$7986 () Int)
(declare-fun VV$35$$35$9274 () Int)
(declare-fun VV$35$$35$8066 () Int)
(declare-fun GHC.Types.KindRepTYPE () Int)
(declare-fun GHC.List.dropWhile () Int)
(declare-fun lq_tmp$36$x$35$$35$3400 () Int)
(declare-fun lq_tmp$36$x$35$$35$3026 () Int)
(declare-fun lq_tmp$36$x$35$$35$6256 () Int)
(declare-fun Data.Heap.Binominal.merge$39$ () Int)
(declare-fun VV$35$$35$9537 () Int)
(declare-fun GHC.Real.C$58$Fractional () Int)
(declare-fun lq_karg$36$ds_d3EQ$35$$35$k_$35$$35$6415 () Int)
(declare-fun autolen () Int)
(declare-fun lq_tmp$36$x$35$$35$3488 () Int)
(declare-fun Data.Foldable.null () Int)
(declare-fun lq_tmp$36$x$35$$35$6081 () Int)
(declare-fun GHC.Integer.Type.$36$WJn$35$ () Int)
(declare-fun GHC.Real.$94$ () Int)
(declare-fun lq_karg$36$y$35$$35$a2MD$35$$35$k_$35$$35$6415 () Int)
(declare-fun lq_tmp$36$x$35$$35$1817 () Int)
(declare-fun head () Int)
(declare-fun lq_tmp$36$x$35$$35$1871 () Int)
(declare-fun lq_tmp$36$x$35$$35$2317 () Int)
(declare-fun lq_tmp$36$x$35$$35$4254 () Int)
(declare-fun Data.Heap.Binominal.$36$fShowTree () Int)
(declare-fun VV$35$$35$10138 () Int)
(declare-fun VV$35$$35$7675 () Bool)
(declare-fun VV$35$$35$10046 () Int)
(declare-fun lq_tmp$36$x$35$$35$6930 () Int)
(declare-fun lq_tmp$36$x$35$$35$2723 () Int)
(declare-fun VV$35$$35$8298 () Int)
(declare-fun lq_tmp$36$x$35$$35$2644 () Int)
(declare-fun fix$36$$36$cshowsPrec$35$$35$a3yS () Int)
(declare-fun lq_tmp$36$x$35$$35$3153 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792807995$35$$35$d3Kb () Int)
(declare-fun VV$35$$35$9222 () Int)
(declare-fun VV$35$$35$8571 () Int)
(declare-fun ds_d3EQ () Int)
(declare-fun GHC.Types.$36$WKindRepTYPE () Int)
(declare-fun VV$35$$35$F$35$$35$36 () Int)
(declare-fun VV$35$$35$8452 () Int)
(declare-fun Data.Heap.Binominal.fromList () Int)
(declare-fun GHC.Show.showsPrec () Int)
(declare-fun GHC.Integer.Type.Jn$35$ () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792808008$35$$35$d3Ko$35$$35$k_$35$$35$6419 () Int)
(declare-fun GHC.Show.$36$dmshowList () Int)
(declare-fun y$35$$35$a2MD () Int)
(declare-fun GHC.Classes.compare () Int)
(declare-fun lq_tmp$36$x$35$$35$4697 () Int)
(declare-fun lq_tmp$36$x$35$$35$2745 () Int)
(declare-fun VV$35$$35$8311 () Int)
(declare-fun lq_tmp$36$x$35$$35$3429 () Int)
(declare-fun VV$35$$35$8029 () Int)
(declare-fun lq_tmp$36$x$35$$35$4660 () Int)
(declare-fun Data.Heap.Binominal.Heap () Int)
(declare-fun lq_tmp$36$x$35$$35$3942 () Int)
(declare-fun x$35$$35$a2FF () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808014$35$$35$d3Ku () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808010$35$$35$d3Kq () Int)
(declare-fun VV$35$$35$9578 () Int)
(declare-fun lq_tmp$36$x$35$$35$6659 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792807980$35$$35$d3JW () Int)
(declare-fun papp2 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808016$35$$35$d3Kw () Int)
(declare-fun lq_tmp$36$x$35$$35$6705 () Int)
(declare-fun VV$35$$35$7334 () Int)
(declare-fun lq_tmp$36$x$35$$35$2097 () Int)
(declare-fun lit$36$Tree () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792808012$35$$35$d3Ks () Int)
(declare-fun VV$35$$35$7730 () Int)
(declare-fun fix$36$$36$krep_a3B4 () Int)
(declare-fun lq_tmp$36$x$35$$35$3384 () Int)
(declare-fun lq_tmp$36$x$35$$35$5631 () Int)
(declare-fun lq_tmp$36$x$35$$35$2931 () Int)
(declare-fun GHC.Stack.Types.EmptyCallStack () Int)
(declare-fun GHC.Types.krep$36$$42$Arr$42$ () Int)
(declare-fun ds_d3ED () Int)
(declare-fun lq_karg$36$xys$35$$35$a2ME$35$$35$k_$35$$35$6419 () Int)
(declare-fun lq_karg$36$VV$35$$35$6243$35$$35$k_$35$$35$6237 () Int)
(declare-fun VV$35$$35$9241 () Int)
(declare-fun GHC.List.reverse () Int)
(declare-fun lq_tmp$36$x$35$$35$2627 () Int)
(declare-fun GHC.Integer.Type.$36$WJp$35$ () Int)
(declare-fun lq_tmp$36$x$35$$35$3156 () Int)
(declare-fun ds_d3H1 () Int)
(declare-fun lq_tmp$36$x$35$$35$1990 () Int)
(declare-fun lq_tmp$36$x$35$$35$5712 () Int)
(declare-fun lq_tmp$36$x$35$$35$5433 () Int)
(declare-fun lit$36$main () Str)
(declare-fun VV$35$$35$F$35$$35$33 () Int)
(declare-fun Control.Exception.Base.patError () Int)
(declare-fun GHC.List.filter () Int)
(declare-fun fix$36$$36$dOrd_a3xB () Int)
(declare-fun lq_tmp$36$x$35$$35$6421 () Int)
(declare-fun Data.Heap.Binominal.toList () Int)
(declare-fun fromJust () Int)
(declare-fun GHC.Types.KindRepTyConApp () Int)
(declare-fun VV$35$$35$9142 () Int)
(declare-fun VV$35$$35$8053 () Int)
(declare-fun fix$36$$36$dOrd_a3yK () Int)
(declare-fun GHC.List.cycle () Int)
(declare-fun GHC.List.$33$$33$ () Int)
(declare-fun lit$36$$39$Heap () Str)
(declare-fun GHC.List.tail () Int)
(declare-fun VV$35$$35$10007 () Int)
(declare-fun lq_tmp$36$x$35$$35$2300 () Int)
(declare-fun lq_tmp$36$x$35$$35$4063 () Int)
(declare-fun lq_tmp$36$x$35$$35$5994 () Int)
(declare-fun papp7 () Int)
(declare-fun GHC.Classes.$47$$61$ () Int)
(declare-fun VV$35$$35$8999 () Int)
(declare-fun lq_tmp$36$x$35$$35$2598 () Int)
(declare-fun lq_karg$36$lq_tmp$36$x$35$$35$6421$35$$35$k_$35$$35$6419 () Int)
(declare-fun lq_tmp$36$x$35$$35$6132 () Int)
(declare-fun lq_tmp$36$x$35$$35$4802 () Int)
(declare-fun VV$35$$35$8247 () Int)
(declare-fun fix$36$$36$dOrd_a3yd () Int)
(declare-fun GHC.List.break () Int)
(declare-fun GHC.Types.True () Bool)
(declare-fun fix$36$$36$cshow$35$$35$a3zm () Int)
(declare-fun lq_tmp$36$x$35$$35$1816 () Int)
(declare-fun Data.Functor.Const.Const () Int)
(declare-fun VV$35$$35$8203 () Int)
(declare-fun VV$35$$35$10132 () Int)
(declare-fun VV$35$$35$10033 () Int)
(declare-fun lq_tmp$36$x$35$$35$2114 () Int)
(declare-fun lq_tmp$36$x$35$$35$1788 () Int)
(declare-fun Data.Foldable.foldl$39$ () Int)
(declare-fun lq_tmp$36$x$35$$35$6077 () Int)
(declare-fun VV$35$$35$F$35$$35$25 () Int)
(declare-fun VV$35$$35$8292 () Int)
(declare-fun GHC.Types.$91$$93$ () Int)
(declare-fun lq_karg$36$ds_d3EP$35$$35$k_$35$$35$6415 () Int)
(declare-fun GHC.List.splitAt () Int)
(declare-fun lq_tmp$36$x$35$$35$2051 () Int)
(declare-fun VV$35$$35$9109 () Int)
(declare-fun lq_tmp$36$x$35$$35$4615 () Int)
(declare-fun lq_karg$36$t$35$$35$a2JW$35$$35$k_$35$$35$6484 () Int)
(declare-fun lq_tmp$36$x$35$$35$2941 () Int)
(declare-fun lq_tmp$36$x$35$$35$3591 () Int)
(declare-fun GHC.Base.$43$$43$ () Int)
(declare-fun lq_tmp$36$x$35$$35$5290 () Int)
(declare-fun GHC.Show.$36$dmshow () Int)
(declare-fun lit$36$Heap () Str)
(declare-fun lq_tmp$36$x$35$$35$5218 () Int)
(declare-fun GHC.Real.$58$$37$ () Int)
(declare-fun fix$36$$36$c$61$$61$$35$$35$a3A5 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792807985$35$$35$d3K1 () Int)
(declare-fun GHC.Tuple.$40$$44$$41$ () Int)
(declare-fun VV$35$$35$7970 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792807968$35$$35$d3JK () Int)
(declare-fun VV$35$$35$8427 () Int)
(declare-fun Data.Heap.Binominal.root () Int)
(declare-fun lq_tmp$36$x$35$$35$3027 () Int)
(declare-fun fix$36$$36$c$47$$61$$35$$35$a3Ag () Int)
(declare-fun Data.Heap.Binominal.valid () Int)
(declare-fun lq_tmp$36$x$35$$35$2735 () Int)
(declare-fun VV$35$$35$7975 () Int)
(declare-fun Data.Heap.Binominal.deleteMin () Int)
(declare-fun VV$35$$35$8400 () Int)
(declare-fun fldList () Int)
(declare-fun GHC.Classes.$38$$38$ () Int)
(declare-fun VV$35$$35$9115 () Int)
(declare-fun VV$35$$35$9216 () Int)
(declare-fun VV$35$$35$9148 () Int)
(declare-fun VV$35$$35$9775 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808000$35$$35$d3Kg () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808008$35$$35$d3Ko () Int)
(declare-fun lq_tmp$36$x$35$$35$2889 () Int)
(declare-fun lq_tmp$36$x$35$$35$6728 () Int)
(declare-fun lq_tmp$36$x$35$$35$4016 () Int)
(declare-fun VV$35$$35$7319 () Bool)
(declare-fun VV$35$$35$8972 () Int)
(declare-fun lit$36$Data.Heap.Binominal () Str)
(declare-fun lq_karg$36$VV$35$$35$6240$35$$35$k_$35$$35$6241 () Int)
(declare-fun lq_tmp$36$x$35$$35$6959 () Int)
(declare-fun Data.Foldable.$36$fFoldable$91$$93$ () Int)
(declare-fun lq_tmp$36$x$35$$35$5886 () Int)
(declare-fun lq_tmp$36$x$35$$35$3189 () Int)
(declare-fun GHC.Types.GT () Int)
(declare-fun GHC.Classes.C$58$IP () Int)
(declare-fun VV$35$$35$7245 () Int)
(declare-fun Data.Heap.Binominal.null () Int)
(declare-fun GHC.Classes.$124$$124$ () Int)
(declare-fun lq_tmp$36$x$35$$35$2801 () Int)
(declare-fun VV$35$$35$9599 () Int)
(declare-fun GHC.Classes.$36$fEq$91$$93$ () Int)
(declare-fun lq_karg$36$VV$35$$35$6414$35$$35$k_$35$$35$6415 () Int)
(declare-fun ds_d3HK () Int)
(declare-fun Data.Either.Left () Int)
(declare-fun GHC.List.last () Int)
(declare-fun VV$35$$35$9476 () Int)
(declare-fun lq_tmp$36$x$35$$35$2818 () Int)
(declare-fun GHC.Classes.$36$fOrdInt () Int)
(declare-fun lq_tmp$36$x$35$$35$3190 () Int)
(declare-fun lq_karg$36$VV$35$$35$6236$35$$35$k_$35$$35$6237 () Int)
(declare-fun lq_karg$36$VV$35$$35$6418$35$$35$k_$35$$35$6419 () Int)
(declare-fun lq_tmp$36$x$35$$35$2988 () Int)
(declare-fun GHC.Integer.Type.S$35$ () Int)
(declare-fun GHC.List.scanl1 () Int)
(declare-fun VV$35$$35$8105 () Int)
(declare-fun Data.Either.Right () Int)
(declare-fun fix$36$$36$dOrd_a3vm () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792807943$35$$35$d3Jl () Int)
(declare-fun lq_tmp$36$x$35$$35$6745 () Int)
(declare-fun lq_tmp$36$x$35$$35$2578 () Int)
(declare-fun VV$35$$35$9079 () Int)
(declare-fun VV$35$$35$7686 () Int)
(declare-fun VV$35$$35$7550 () Int)
(declare-fun lq_tmp$36$x$35$$35$2794 () Int)
(declare-fun Data.Heap.Binominal.Node () Int)
(declare-fun GHC.Num.$45$ () Int)
(declare-fun lq_tmp$36$x$35$$35$2121 () Int)
(declare-fun len () Int)
(declare-fun papp6 () Int)
(declare-fun GHC.Base.. () Int)
(declare-fun Data.Heap.Binominal.merge () Int)
(declare-fun x_Tuple22 () Int)
(declare-fun Data.Heap.Binominal.insert$39$ () Int)
(declare-fun VV$35$$35$7109 () Int)
(declare-fun Data.Heap.Binominal.link () Int)
(declare-fun VV$35$$35$F$35$$35$32 () Int)
(declare-fun lq_karg$36$VV$35$$35$6483$35$$35$k_$35$$35$6484 () Int)
(declare-fun lq_karg$36$xys$35$$35$a2ME$35$$35$k_$35$$35$6415 () Int)
(declare-fun VV$35$$35$7306 () Bool)
(declare-fun lq_tmp$36$x$35$$35$6939 () Int)
(declare-fun ds_d3Gz () Int)
(declare-fun ds_d3Fc () Int)
(declare-fun VV$35$$35$9434 () Int)
(declare-fun VV$35$$35$F$35$$35$26 () Int)
(declare-fun lq_tmp$36$x$35$$35$5563 () Int)
(declare-fun lq_tmp$36$x$35$$35$2825 () Int)
(declare-fun lit$36$$47$Users$47$palmerpa$47$cis673$45$proj$47$BinomialHeap.hs$58$179$58$5$45$36$124$Just$32$$40$t$39$$44$$32$ts$39$$41$ () Str)
(declare-fun VV$35$$35$9470 () Int)
(declare-fun GHC.Types.KindRepTypeLitS () Int)
(declare-fun lq_tmp$36$x$35$$35$2528 () Int)
(declare-fun lq_tmp$36$x$35$$35$6685 () Int)
(declare-fun GHC.Real.$36$W$58$$37$ () Int)
(declare-fun lq_karg$36$VV$35$$35$6243$35$$35$k_$35$$35$6244 () Int)
(declare-fun Control.Applicative.WrapArrow () Int)
(declare-fun VV$35$$35$7692 () Int)
(declare-fun lq_tmp$36$x$35$$35$2755 () Int)
(declare-fun VV$35$$35$7814 () Int)
(declare-fun VV$35$$35$8525 () Int)
(declare-fun fix$36$$36$cshowList$35$$35$a3zt () Int)
(declare-fun lq_tmp$36$x$35$$35$3125 () Int)
(declare-fun isJust () Int)
(declare-fun lq_tmp$36$x$35$$35$5365 () Int)
(declare-fun lq_tmp$36$x$35$$35$5264 () Int)
(declare-fun GHC.Base.flip () Int)
(declare-fun lq_tmp$36$x$35$$35$4032 () Int)
(declare-fun ds_d3F3 () Int)
(declare-fun lq_tmp$36$x$35$$35$4823 () Int)
(declare-fun lq_tmp$36$x$35$$35$4801 () Int)
(declare-fun GHC.List.takeWhile () Int)
(declare-fun GHC.Types.TrNameD () Int)
(declare-fun lq_tmp$36$x$35$$35$5660 () Int)
(declare-fun VV$35$$35$7296 () Int)
(declare-fun VV$35$$35$7544 () Int)
(declare-fun VV$35$$35$7423 () Int)
(declare-fun lq_tmp$36$x$35$$35$1815 () Int)
(declare-fun VV$35$$35$8983 () Int)
(declare-fun VV$35$$35$7662 () Int)
(declare-fun GHC.Types.KindRepVar () Int)
(declare-fun VV$35$$35$7020 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792808009$35$$35$d3Kp$35$$35$k_$35$$35$6419 () Bool)
(declare-fun lq_anf$36$$35$$35$7205759403792807981$35$$35$d3JX () Int)
(declare-fun fix$36$$36$dOrd_a3xi () Int)
(declare-fun GHC.Types.KindRepTypeLitD () Int)
(declare-fun lq_tmp$36$x$35$$35$6150 () Int)
(declare-fun lq_karg$36$lq_tmp$36$x$35$$35$6239$35$$35$k_$35$$35$6241 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792807916$35$$35$d3IU () Int)
(declare-fun x_Tuple31 () Int)
(declare-fun lq_tmp$36$x$35$$35$2822 () Int)
(declare-fun GHC.Integer.Type.Jp$35$ () Int)
(declare-fun ds_d3HJ () Int)
(declare-fun lit$36$$47$Users$47$palmerpa$47$cis673$45$proj$47$BinomialHeap.hs$58$$40$192$44$1$41$$45$$40$197$44$63$41$$124$function$32$merge$39$ () Str)
(declare-fun lq_tmp$36$x$35$$35$3191 () Int)
(declare-fun VV$35$$35$9994 () Int)
(declare-fun lq_tmp$36$x$35$$35$6576 () Int)
(declare-fun lq_tmp$36$x$35$$35$3504 () Int)
(declare-fun GHC.IO.Exception.IOError () Int)
(declare-fun lq_tmp$36$x$35$$35$5852 () Int)
(declare-fun VV$35$$35$9235 () Int)
(declare-fun GHC.List.take () Int)
(declare-fun fix$36$$36$dOrd_a3ul () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792808007$35$$35$d3Kn$35$$35$k_$35$$35$6419 () Int)
(declare-fun VV$35$$35$8519 () Int)
(declare-fun GHC.Stack.Types.PushCallStack () Int)
(declare-fun lq_tmp$36$x$35$$35$5968 () Int)
(declare-fun t$35$$35$a2JX () Int)
(declare-fun lq_tmp$36$x$35$$35$2668 () Int)
(declare-fun GHC.Show.$36$fShowInt () Int)
(declare-fun VV$35$$35$8544 () Int)
(declare-fun lq_karg$36$ds_d3ED$35$$35$k_$35$$35$6415 () Int)
(declare-fun lq_tmp$36$x$35$$35$2213 () Int)
(declare-fun VV$35$$35$9268 () Int)
(declare-fun GHC.Classes.$60$$61$ () Int)
(declare-fun GHC.Types.TrNameS () Int)
(declare-fun Data.Heap.Binominal.$36$fEqHeap () Int)
(declare-fun lq_tmp$36$x$35$$35$2080 () Int)
(declare-fun GHC.Enum.C$58$Bounded () Int)
(declare-fun lq_tmp$36$x$35$$35$6774 () Int)
(declare-fun VV$35$$35$8360 () Int)
(declare-fun ds_d3FD () Int)
(declare-fun VV$35$$35$9927 () Int)
(declare-fun GHC.Base.map () Int)
(declare-fun lq_tmp$36$x$35$$35$5492 () Int)
(declare-fun GHC.Show.C$58$Show () Int)
(declare-fun lq_tmp$36$x$35$$35$1795 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792807983$35$$35$d3JZ () Int)
(declare-fun GHC.Base.$36$ () Int)
(declare-fun lq_tmp$36$x$35$$35$6504 () Int)
(declare-fun papp1 () Int)
(declare-fun GHC.Classes.max () Int)
(declare-fun lq_tmp$36$x$35$$35$2041 () Int)
(declare-fun GHC.Show.showSpace () Int)
(declare-fun lq_tmp$36$x$35$$35$2588 () Int)
(declare-fun VV$35$$35$8228 () Int)
(declare-fun Data.Heap.Binominal.insert () Int)
(declare-fun VV$35$$35$10119 () Int)
(declare-fun VV$35$$35$8181 () Int)
(declare-fun VV$35$$35$7708 () Int)
(declare-fun lq_tmp$36$x$35$$35$5309 () Int)
(declare-fun lq_tmp$36$x$35$$35$2566 () Int)
(declare-fun t$35$$35$a2FI () Int)
(declare-fun GHC.Classes.$60$ () Int)
(declare-fun tail () Int)
(declare-fun ds_d3ER () Int)
(declare-fun VV$35$$35$F$35$$35$35 () Int)
(declare-fun lq_tmp$36$x$35$$35$2948 () Int)
(declare-fun VV$35$$35$9023 () Int)
(declare-fun VV$35$$35$7384 () Bool)
(declare-fun VV$35$$35$7186 () Int)
(declare-fun lq_tmp$36$x$35$$35$3576 () Int)
(declare-fun lq_tmp$36$x$35$$35$6562 () Int)
(declare-fun lq_tmp$36$x$35$$35$2665 () Int)
(declare-fun GHC.Types.TyCon () Int)
(declare-fun GHC.Show.$36$fShow$91$$93$ () Int)
(declare-fun lq_tmp$36$x$35$$35$3149 () Int)
(declare-fun GHC.Stack.Types.FreezeCallStack () Int)
(declare-fun lq_tmp$36$x$35$$35$5785 () Int)
(declare-fun lq_tmp$36$x$35$$35$4065 () Int)
(declare-fun Data.Heap.Binominal.singleton () Int)
(declare-fun GHC.Num.$42$ () Int)
(declare-fun fix$36$$36$dOrd_a3wX () Int)
(declare-fun lq_tmp$36$x$35$$35$3986 () Int)
(declare-fun lq_tmp$36$x$35$$35$2512 () Int)
(declare-fun fix$36$$36$cshow$35$$35$a3zO () Int)
(declare-fun lq_tmp$36$x$35$$35$3025 () Int)
(declare-fun ds_d3Hl () Int)
(declare-fun GHC.Classes.$36$dm$47$$61$ () Int)
(declare-fun lq_tmp$36$x$35$$35$5265 () Int)
(declare-fun VV$35$$35$7325 () Int)
(declare-fun lq_tmp$36$x$35$$35$6516 () Int)
(declare-fun VV$35$$35$9921 () Int)
(declare-fun lq_tmp$36$x$35$$35$3887 () Int)
(declare-fun fix$36$$36$dOrd_a3vQ () Int)
(declare-fun lq_tmp$36$x$35$$35$4800 () Int)
(declare-fun fix$36$$36$cshowList$35$$35$a3zU () Int)
(declare-fun Data.Foldable.concatMap () Int)
(declare-fun lq_tmp$36$x$35$$35$1814 () Int)
(declare-fun VV$35$$35$9183 () Int)
(declare-fun VV$35$$35$7602 () Int)
(declare-fun VV$35$$35$10013 () Int)
(declare-fun GHC.Maybe.Nothing () Int)
(declare-fun VV$35$$35$10082 () Int)
(declare-fun VV$35$$35$F$35$$35$27 () Int)
(declare-fun Data.Heap.Binominal.deleteMin$39$ () Int)
(declare-fun VV$35$$35$7396 () Int)
(declare-fun GHC.Types.EQ () Int)
(declare-fun lq_tmp$36$x$35$$35$5876 () Int)
(declare-fun lq_tmp$36$x$35$$35$4008 () Int)
(declare-fun GHC.List.scanr () Int)
(declare-fun VV$35$$35$8042 () Int)
(declare-fun lq_tmp$36$x$35$$35$4775 () Int)
(declare-fun VV$35$$35$9153 () Int)
(declare-fun GHC.Num.negate () Int)
(declare-fun r$35$$35$a2jM () Int)
(declare-fun VV$35$$35$7221 () Int)
(declare-fun GHC.Real.fromIntegral () Int)
(declare-fun lq_tmp$36$x$35$$35$1778 () Int)
(declare-fun fix$36$$36$dOrd_a3yC () Int)
(declare-fun GHC.Maybe.Just () Int)
(declare-fun VV$35$$35$9531 () Int)
(declare-fun fix$36$$36$dOrd_a3xZ () Int)
(declare-fun lq_tmp$36$x$35$$35$6412 () Int)
(declare-fun ds_d3F7 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792807970$35$$35$d3JM () Int)
(declare-fun GHC.Base.$36$fFunctorMaybe () Int)
(declare-fun lq_tmp$36$x$35$$35$5985 () Int)
(declare-fun lq_tmp$36$x$35$$35$6676 () Int)
(declare-fun lq_tmp$36$x$35$$35$4713 () Int)
(declare-fun GHC.Classes.min () Int)
(declare-fun lq_tmp$36$x$35$$35$4599 () Int)
(declare-fun lq_tmp$36$x$35$$35$2993 () Int)
(declare-fun GHC.List.head () Int)
(declare-fun lq_tmp$36$x$35$$35$4926 () Int)
(declare-fun VV$35$$35$10052 () Int)
(declare-fun lq_tmp$36$x$35$$35$2784 () Int)
(declare-fun Data.Heap.Binominal.deleteMin2 () Int)
(declare-fun VV$35$$35$7405 () Int)
(declare-fun GHC.Types.$36$WKindRepVar () Int)
(declare-fun VV$35$$35$8446 () Int)
(declare-fun fix$36$$36$dOrd_a3ys () Int)
(declare-fun VV$35$$35$8538 () Int)
(declare-fun x_Tuple32 () Int)
(declare-fun lq_tmp$36$x$35$$35$4511 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792808023$35$$35$d3KD () Int)
(declare-fun Control.Applicative.ZipList () Int)
(declare-fun VV$35$$35$8394 () Int)
(declare-fun lq_tmp$36$x$35$$35$5765 () Int)
(declare-fun ds_d3Ga () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792807918$35$$35$d3IW () Int)
(declare-fun VV$35$$35$F$35$$35$34 () Int)
(declare-fun VV$35$$35$7273 () Int)
(declare-fun GHC.Classes.C$58$Eq () Int)
(declare-fun GHC.List.repeat () Int)
(declare-fun xys$35$$35$a2ME () Int)
(declare-fun Data.Heap.Binominal.minimum () Int)
(declare-fun Data.Heap.Binominal.heapSort () Int)
(declare-fun lq_tmp$36$x$35$$35$3115 () Int)
(declare-fun lq_karg$36$ds_d3ED$35$$35$k_$35$$35$6419 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792808007$35$$35$d3Kn$35$$35$k_$35$$35$6415 () Int)
(declare-fun GHC.Classes.not () Int)
(declare-fun lq_tmp$36$x$35$$35$1861 () Int)
(declare-fun Data.Heap.Binominal.rank () Int)
(declare-fun VV$35$$35$10101 () Int)
(declare-fun GHC.Show.showString () Int)
(declare-fun GHC.Num.$43$ () Int)
(declare-fun Data.Tuple.fst () Int)
(declare-fun GHC.Types.KindRepApp () Int)
(declare-fun lq_tmp$36$x$35$$35$4064 () Int)
(declare-fun Data.Functor.$60$$36$$62$ () Int)
(declare-fun VV$35$$35$9976 () Int)
(declare-fun VV$35$$35$9495 () Int)
(declare-fun lq_tmp$36$x$35$$35$4659 () Int)
(declare-fun GHC.Real.C$58$Integral () Int)
(declare-fun fix$36$$36$dOrd_a3wr () Int)
(declare-fun GHC.Err.error () Int)
(declare-fun snd () Int)
(declare-fun lq_tmp$36$x$35$$35$4561 () Int)
(declare-fun fst () Int)
(declare-fun VV$35$$35$9189 () Int)
(declare-fun lq_tmp$36$x$35$$35$1878 () Int)
(declare-fun VV$35$$35$8274 () Int)
(declare-fun lq_tmp$36$x$35$$35$3858 () Int)
(declare-fun VV$35$$35$8988 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792808009$35$$35$d3Kp$35$$35$k_$35$$35$6415 () Bool)
(declare-fun lq_tmp$36$x$35$$35$3674 () Int)
(declare-fun Data.Heap.Binominal.toList$39$ () Int)
(declare-fun VV$35$$35$9594 () Int)
(declare-fun lq_tmp$36$x$35$$35$3533 () Int)
(declare-fun lq_tmp$36$x$35$$35$6239 () Int)
(declare-fun Data.Tuple.snd () Int)
(declare-fun lit$36$Heap$32$ () Str)
(declare-fun apply$35$$35$13 (Int (_ BitVec 32)) Bool)
(declare-fun apply$35$$35$9 (Int Str) Bool)
(declare-fun apply$35$$35$6 (Int Bool) Str)
(declare-fun apply$35$$35$11 (Int Str) (_ BitVec 32))
(declare-fun apply$35$$35$15 (Int (_ BitVec 32)) (_ BitVec 32))
(declare-fun apply$35$$35$0 (Int Int) Int)
(declare-fun apply$35$$35$8 (Int Str) Int)
(declare-fun apply$35$$35$1 (Int Int) Bool)
(declare-fun apply$35$$35$7 (Int Bool) (_ BitVec 32))
(declare-fun apply$35$$35$14 (Int (_ BitVec 32)) Str)
(declare-fun apply$35$$35$10 (Int Str) Str)
(declare-fun apply$35$$35$5 (Int Bool) Bool)
(declare-fun apply$35$$35$2 (Int Int) Str)
(declare-fun apply$35$$35$12 (Int (_ BitVec 32)) Int)
(declare-fun apply$35$$35$3 (Int Int) (_ BitVec 32))
(declare-fun apply$35$$35$4 (Int Bool) Int)
(declare-fun coerce$35$$35$13 ((_ BitVec 32)) Bool)
(declare-fun coerce$35$$35$9 (Str) Bool)
(declare-fun coerce$35$$35$6 (Bool) Str)
(declare-fun coerce$35$$35$11 (Str) (_ BitVec 32))
(declare-fun coerce$35$$35$15 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun coerce$35$$35$0 (Int) Int)
(declare-fun coerce$35$$35$8 (Str) Int)
(declare-fun coerce$35$$35$1 (Int) Bool)
(declare-fun coerce$35$$35$7 (Bool) (_ BitVec 32))
(declare-fun coerce$35$$35$14 ((_ BitVec 32)) Str)
(declare-fun coerce$35$$35$10 (Str) Str)
(declare-fun coerce$35$$35$5 (Bool) Bool)
(declare-fun coerce$35$$35$2 (Int) Str)
(declare-fun coerce$35$$35$12 ((_ BitVec 32)) Int)
(declare-fun coerce$35$$35$3 (Int) (_ BitVec 32))
(declare-fun coerce$35$$35$4 (Bool) Int)
(declare-fun smt_lambda$35$$35$13 ((_ BitVec 32) Bool) Int)
(declare-fun smt_lambda$35$$35$9 (Str Bool) Int)
(declare-fun smt_lambda$35$$35$6 (Bool Str) Int)
(declare-fun smt_lambda$35$$35$11 (Str (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$15 ((_ BitVec 32) (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$0 (Int Int) Int)
(declare-fun smt_lambda$35$$35$8 (Str Int) Int)
(declare-fun smt_lambda$35$$35$1 (Int Bool) Int)
(declare-fun smt_lambda$35$$35$7 (Bool (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$14 ((_ BitVec 32) Str) Int)
(declare-fun smt_lambda$35$$35$10 (Str Str) Int)
(declare-fun smt_lambda$35$$35$5 (Bool Bool) Int)
(declare-fun smt_lambda$35$$35$2 (Int Str) Int)
(declare-fun smt_lambda$35$$35$12 ((_ BitVec 32) Int) Int)
(declare-fun smt_lambda$35$$35$3 (Int (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$4 (Bool Int) Int)
(declare-fun lam_arg$35$$35$1$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$2$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$3$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$4$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$5$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$6$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$7$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$1$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$2$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$3$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$4$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$5$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$6$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$7$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$1$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$2$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$3$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$4$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$5$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$6$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$7$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$1$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$2$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$3$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$4$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$5$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$6$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$7$35$$35$4 () Bool)

(assert (distinct lit$36$Heap$32$ lit$36$$47$Users$47$palmerpa$47$cis673$45$proj$47$BinomialHeap.hs$58$$40$192$44$1$41$$45$$40$197$44$63$41$$124$function$32$merge$39$ lit$36$$47$Users$47$palmerpa$47$cis673$45$proj$47$BinomialHeap.hs$58$179$58$5$45$36$124$Just$32$$40$t$39$$44$$32$ts$39$$41$ lit$36$Data.Heap.Binominal lit$36$Heap lit$36$$39$Heap lit$36$main lit$36$Tree lit$36$Node$32$ lit$36$$39$Node))

(assert (distinct GHC.Types.True GHC.Types.False))
(assert (distinct GHC.Types.EQ GHC.Types.GT GHC.Types.LT))
(assert (= (strLen lit$36$$39$Node) 5))
(assert (= (strLen lit$36$Node$32$) 5))
(assert (= (strLen lit$36$Tree) 4))
(assert (= (strLen lit$36$main) 4))
(assert (= (strLen lit$36$$39$Heap) 5))
(assert (= (strLen lit$36$Heap) 4))
(assert (= (strLen lit$36$Data.Heap.Binominal) 19))
(assert (= (strLen lit$36$$47$Users$47$palmerpa$47$cis673$45$proj$47$BinomialHeap.hs$58$179$58$5$45$36$124$Just$32$$40$t$39$$44$$32$ts$39$$41$) 67))
(assert (= (strLen lit$36$$47$Users$47$palmerpa$47$cis673$45$proj$47$BinomialHeap.hs$58$$40$192$44$1$41$$45$$40$197$44$63$41$$124$function$32$merge$39$) 76))
(assert (= (strLen lit$36$Heap$32$) 5))
(push 1)
(assert (and (and (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$23) 0) (= VV$35$$35$F$35$$35$23 lq_anf$36$$35$$35$7205759403792808012$35$$35$d3Ks) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$23) 0)) (not GHC.Types.False) GHC.Types.True (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808012$35$$35$d3Ks) 0)))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$23) 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$23) 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$23) 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (exists ((lq_karg$36$t$35$$35$a2JW$35$$35$k_$35$$35$6484 Int) (lq_karg$36$VV$35$$35$6483$35$$35$k_$35$$35$6484 Int)) (and (and (= lq_karg$36$t$35$$35$a2JW$35$$35$k_$35$$35$6484 t$35$$35$a2JW) (= lq_karg$36$VV$35$$35$6483$35$$35$k_$35$$35$6484 VV$35$$35$F$35$$35$25)) (exists ((VV$35$$35$F$35$$35$27 Int) (VV$35$$35$7334 Int)) (and (= VV$35$$35$7334 t$35$$35$a2JW) (and (= lq_karg$36$t$35$$35$a2JW$35$$35$k_$35$$35$6484 t$35$$35$a2JW) (= lq_karg$36$VV$35$$35$6483$35$$35$k_$35$$35$6484 VV$35$$35$F$35$$35$27)))))) (and (>= (apply$35$$35$0 (as len Int) VV$35$$35$7325) 0) (= VV$35$$35$7325 lq_anf$36$$35$$35$7205759403792808012$35$$35$d3Ks) (>= (apply$35$$35$0 (as len Int) VV$35$$35$7325) 0)) (not GHC.Types.False) GHC.Types.True (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808012$35$$35$d3Ks) 0)))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (and (>= (apply$35$$35$0 (as len Int) VV$35$$35$7325) 0) (= VV$35$$35$7325 lq_anf$36$$35$$35$7205759403792808012$35$$35$d3Ks) (>= (apply$35$$35$0 (as len Int) VV$35$$35$7325) 0)) (not GHC.Types.False) GHC.Types.True (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808012$35$$35$d3Ks) 0)))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$26 lq_tmp$36$x$35$$35$6504)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$26 lq_tmp$36$x$35$$35$6504)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$26 lq_tmp$36$x$35$$35$6504)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$26 lq_tmp$36$x$35$$35$6504)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$26 lq_tmp$36$x$35$$35$6504)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$26 lq_tmp$36$x$35$$35$6504))))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (and (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808007$35$$35$d3Kn) 0) (>= (apply$35$$35$0 (as len Int) ds_d3ED) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808007$35$$35$d3Kn) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808007$35$$35$d3Kn) 0)) (>= (apply$35$$35$0 (as len Int) ds_d3EQ) 0) (and (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808007$35$$35$d3Kn) 0) (= lq_anf$36$$35$$35$7205759403792808007$35$$35$d3Kn ds_d3ED) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808007$35$$35$d3Kn) 0) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792808007$35$$35$d3Kn) ds_d3EQ) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792808007$35$$35$d3Kn) ds_d3EP) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808007$35$$35$d3Kn) (+ 1 (apply$35$$35$0 (as len Int) ds_d3EQ))) (= lq_anf$36$$35$$35$7205759403792808007$35$$35$d3Kn (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) ds_d3EP) ds_d3EQ)) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792808007$35$$35$d3Kn) ds_d3EQ) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792808007$35$$35$d3Kn) ds_d3EP) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808007$35$$35$d3Kn) (+ 1 (apply$35$$35$0 (as len Int) ds_d3EQ))) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808007$35$$35$d3Kn) 0)) (and (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808008$35$$35$d3Ko) 0) (= lq_anf$36$$35$$35$7205759403792808008$35$$35$d3Ko ds_d3EQ) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808008$35$$35$d3Ko) 0)) (and (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808008$35$$35$d3Ko) 0) (= lq_anf$36$$35$$35$7205759403792808008$35$$35$d3Ko ds_d3EQ) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808008$35$$35$d3Ko) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808008$35$$35$d3Ko) 0)) (>= (apply$35$$35$0 (as len Int) xys$35$$35$a2ME) 0) (and (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808008$35$$35$d3Ko) 0) (= lq_anf$36$$35$$35$7205759403792808008$35$$35$d3Ko ds_d3EQ) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808008$35$$35$d3Ko) 0) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792808008$35$$35$d3Ko) xys$35$$35$a2ME) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792808008$35$$35$d3Ko) y$35$$35$a2MD) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808008$35$$35$d3Ko) (+ 1 (apply$35$$35$0 (as len Int) xys$35$$35$a2ME))) (= lq_anf$36$$35$$35$7205759403792808008$35$$35$d3Ko (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) y$35$$35$a2MD) xys$35$$35$a2ME)) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792808008$35$$35$d3Ko) xys$35$$35$a2ME) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792808008$35$$35$d3Ko) y$35$$35$a2MD) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808008$35$$35$d3Ko) (+ 1 (apply$35$$35$0 (as len Int) xys$35$$35$a2ME))) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808008$35$$35$d3Ko) 0)) (and (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$30) xys$35$$35$a2ME) (= (apply$35$$35$0 (as head Int) VV$35$$35$F$35$$35$30) y$35$$35$a2MD) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$30) (+ 1 (apply$35$$35$0 (as len Int) xys$35$$35$a2ME))) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$30) 0) (= VV$35$$35$F$35$$35$30 lq_anf$36$$35$$35$7205759403792808010$35$$35$d3Kq) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$30) 0)) (= lq_anf$36$$35$$35$7205759403792808009$35$$35$d3Kp (<= ds_d3EP y$35$$35$a2MD)) (>= (apply$35$$35$0 (as len Int) ds_d3ED) 0) (not GHC.Types.False) (and (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808007$35$$35$d3Kn) 0) (= lq_anf$36$$35$$35$7205759403792808007$35$$35$d3Kn ds_d3ED) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808007$35$$35$d3Kn) 0)) (and (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792808010$35$$35$d3Kq) xys$35$$35$a2ME) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792808010$35$$35$d3Kq) y$35$$35$a2MD) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808010$35$$35$d3Kq) (+ 1 (apply$35$$35$0 (as len Int) xys$35$$35$a2ME))) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808010$35$$35$d3Kq) 0)) GHC.Types.True (and (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808007$35$$35$d3Kn) 0) (= lq_anf$36$$35$$35$7205759403792808007$35$$35$d3Kn ds_d3ED) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808007$35$$35$d3Kn) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808007$35$$35$d3Kn) 0))))
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$30) 0)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (and (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808007$35$$35$d3Kn) 0) (>= (apply$35$$35$0 (as len Int) ds_d3ED) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808007$35$$35$d3Kn) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808007$35$$35$d3Kn) 0)) (>= (apply$35$$35$0 (as len Int) ds_d3EQ) 0) (and (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808007$35$$35$d3Kn) 0) (= lq_anf$36$$35$$35$7205759403792808007$35$$35$d3Kn ds_d3ED) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808007$35$$35$d3Kn) 0) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792808007$35$$35$d3Kn) ds_d3EQ) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792808007$35$$35$d3Kn) ds_d3EP) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808007$35$$35$d3Kn) (+ 1 (apply$35$$35$0 (as len Int) ds_d3EQ))) (= lq_anf$36$$35$$35$7205759403792808007$35$$35$d3Kn (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) ds_d3EP) ds_d3EQ)) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792808007$35$$35$d3Kn) ds_d3EQ) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792808007$35$$35$d3Kn) ds_d3EP) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808007$35$$35$d3Kn) (+ 1 (apply$35$$35$0 (as len Int) ds_d3EQ))) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808007$35$$35$d3Kn) 0)) (and (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808008$35$$35$d3Ko) 0) (= lq_anf$36$$35$$35$7205759403792808008$35$$35$d3Ko ds_d3EQ) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808008$35$$35$d3Ko) 0)) (and (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808008$35$$35$d3Ko) 0) (= lq_anf$36$$35$$35$7205759403792808008$35$$35$d3Ko ds_d3EQ) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808008$35$$35$d3Ko) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808008$35$$35$d3Ko) 0)) (>= (apply$35$$35$0 (as len Int) xys$35$$35$a2ME) 0) (and (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$29) xys$35$$35$a2ME) (= (apply$35$$35$0 (as head Int) VV$35$$35$F$35$$35$29) y$35$$35$a2MD) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$29) (+ 1 (apply$35$$35$0 (as len Int) xys$35$$35$a2ME))) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$29) 0) (= VV$35$$35$F$35$$35$29 lq_anf$36$$35$$35$7205759403792808010$35$$35$d3Kq) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$29) 0)) (and (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808008$35$$35$d3Ko) 0) (= lq_anf$36$$35$$35$7205759403792808008$35$$35$d3Ko ds_d3EQ) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808008$35$$35$d3Ko) 0) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792808008$35$$35$d3Ko) xys$35$$35$a2ME) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792808008$35$$35$d3Ko) y$35$$35$a2MD) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808008$35$$35$d3Ko) (+ 1 (apply$35$$35$0 (as len Int) xys$35$$35$a2ME))) (= lq_anf$36$$35$$35$7205759403792808008$35$$35$d3Ko (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) y$35$$35$a2MD) xys$35$$35$a2ME)) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792808008$35$$35$d3Ko) xys$35$$35$a2ME) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792808008$35$$35$d3Ko) y$35$$35$a2MD) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808008$35$$35$d3Ko) (+ 1 (apply$35$$35$0 (as len Int) xys$35$$35$a2ME))) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808008$35$$35$d3Ko) 0)) (= lq_anf$36$$35$$35$7205759403792808009$35$$35$d3Kp (<= ds_d3EP y$35$$35$a2MD)) (>= (apply$35$$35$0 (as len Int) ds_d3ED) 0) (not GHC.Types.False) (and (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808007$35$$35$d3Kn) 0) (= lq_anf$36$$35$$35$7205759403792808007$35$$35$d3Kn ds_d3ED) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808007$35$$35$d3Kn) 0)) (and (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792808010$35$$35$d3Kq) xys$35$$35$a2ME) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792808010$35$$35$d3Kq) y$35$$35$a2MD) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808010$35$$35$d3Kq) (+ 1 (apply$35$$35$0 (as len Int) xys$35$$35$a2ME))) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808010$35$$35$d3Kq) 0)) GHC.Types.True (and (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808007$35$$35$d3Kn) 0) (= lq_anf$36$$35$$35$7205759403792808007$35$$35$d3Kn ds_d3ED) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808007$35$$35$d3Kn) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792808007$35$$35$d3Kn) 0))))
(push 1)
(assert (not (and (< (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$29) (apply$35$$35$0 (as len Int) ds_d3ED)) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$29) 0))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(exit)
