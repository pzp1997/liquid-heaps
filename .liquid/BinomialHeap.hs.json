{"status":"safe","types":{"268":{"25":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Tree a) -> x3:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == size x2 + sumSizeList x3}","ident":"Data.Heap.Binominal.insert'","row":268,"col":25},"59":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts2'}","ident":"ts2'","row":268,"col":59},"39":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1}","ident":"t1","row":268,"col":39},"46":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList ts1' + sumSizeList ts2'}","ident":"lq_anf$##7205759403792805238","row":268,"col":46},"33":{"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t1 + size t2}","ident":"lq_anf$##7205759403792805237","row":268,"col":33},"42":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2}","ident":"t2","row":268,"col":42},"54":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts1'}","ident":"ts1'","row":268,"col":54}},"84":{"30":{"ann":"a","ident":"x","row":84,"col":30},"1":{"ann":"forall a .\nx1:a -> x2:{VV : a | x1 <= VV} -> x3:(Data.Heap.Binominal.Tree {VV : a | x2 <= VV}) -> {VV : (Data.Heap.Binominal.Tree {VV : a | x1 <= VV}) | size VV == size x3}","ident":"Data.Heap.Binominal.boundedTreeTransitivityLemma","row":84,"col":1},"34":{"ann":"(Data.Heap.Binominal.Tree {VV : a | y <= VV})","ident":"tree","row":84,"col":34},"32":{"ann":"{VV : a | x <= VV}","ident":"y","row":84,"col":32}},"235":{"7":{"ann":"{VV : a | VV == root t}","ident":"x","row":235,"col":7},"16":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":235,"col":16},"11":{"ann":"{VV : a | VV == root t}","ident":"_","row":235,"col":11}},"263":{"17":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts1}","ident":"ts1","row":263,"col":17},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:[(Data.Heap.Binominal.Tree a)] -> x3:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList x2 + sumSizeList x3}","ident":"Data.Heap.Binominal.merge'","row":263,"col":1},"8":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"ts1","row":263,"col":8}},"78":{"1":{"ann":"forall a .\nx1:(Data.Heap.Binominal.Tree a) -> {VV : (Data.Heap.Binominal.Tree {VV : a | root x1 <= VV}) | size VV == size x1}","ident":"Data.Heap.Binominal.treeIsBoundedByItsRootLemma","row":78,"col":1}},"241":{"48":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t' <= VV}) | size v == size t'\n                                                           && v == tBounded'}","ident":"tBounded'","row":241,"col":48},"43":{"ann":"{VV : a | VV == root t\n          && VV == x}","ident":"x","row":241,"col":43},"14":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x <= VV}) | size v == size tBounded'}","ident":"_","row":241,"col":14},"45":{"ann":"{VV : a | VV == root t'\n          && VV == x'}","ident":"x'","row":241,"col":45},"9":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x <= VV}) | size v == size tBounded'}","ident":"hd","row":241,"col":9}},"43":{"1":{"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {VV : GHC.Types.Int | VV == sumSizeList x1\n                                                           && VV >= 0\n                                                           && len x1 <= VV}","ident":"Data.Heap.Binominal.sumSizeList","row":43,"col":1},"18":{"ann":"{v : GHC.Prim.Int# | v == 0}","ident":"lq_anf$##7205759403792805188","row":43,"col":18}},"227":{"36":{"ann":"((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | root (fst x9) <= VV})])","ident":"lq_anf$##7205759403792805291","row":227,"col":36},"63":{"ann":"{v : (Data.Heap.Binominal.Heap a) | 0 < len (unheap v)\n                                    && heapSize v >= 0\n                                    && v == h}","ident":"h","row":227,"col":63},"47":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | 0 < len v\n                                      && sumSizeList v == heapSize h}","ident":"lq_anf$##7205759403792805290","row":227,"col":47}},"129":{"28":{"ann":"{VV : a | VV == x}","ident":"x","row":129,"col":28},"30":{"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | len v == 0\n                                            && sumSizeList v == 0}","ident":"_","row":129,"col":30},"1":{"ann":"forall a .\na -> {v : (Data.Heap.Binominal.Heap a) | heapSize v == 1}","ident":"Data.Heap.Binominal.singleton","row":129,"col":1},"26":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805260","row":129,"col":26},"20":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"lq_anf$##7205759403792805266","row":129,"col":20},"11":{"ann":"a","ident":"x","row":129,"col":11},"33":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805263","row":129,"col":33},"21":{"ann":"{v : (Data.Heap.Binominal.Tree a) | root v == x}","ident":"lq_anf$##7205759403792805264","row":129,"col":21}},"112":{"25":{"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t2BoundedByX2}","ident":"_","row":112,"col":25},"57":{"ann":"a","ident":"ds_d2Xu","row":112,"col":57},"60":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2BoundedByX2}","ident":"t2BoundedByX2","row":112,"col":60},"9":{"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t2BoundedByX2}","ident":"t2BoundedByX1","row":112,"col":9},"54":{"ann":"a","ident":"ds_d2Xq","row":112,"col":54}},"211":{"29":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == acc}","ident":"acc","row":211,"col":29},"1":{"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> x2:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList x1 + sumSizeList x2}","ident":"Data.Heap.Binominal.reverseHeapListAux","row":211,"col":1},"23":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"acc","row":211,"col":23}},"148":{"44":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts'}","ident":"ts'","row":148,"col":44},"40":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t'}","ident":"t'","row":148,"col":40},"38":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":148,"col":38},"24":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Tree a) -> x3:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == size x2 + sumSizeList x3}","ident":"Data.Heap.Binominal.insert'","row":148,"col":24},"32":{"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t + size t'}","ident":"lq_anf$##7205759403792805216","row":148,"col":32}},"49":{"22":{"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {VV : GHC.Types.Int | VV == sumSizeList x1\n                                                           && VV >= 0\n                                                           && len x1 <= VV}","ident":"Data.Heap.Binominal.sumSizeList","row":49,"col":22},"1":{"ann":"forall a .\nx1:(Data.Heap.Binominal.Heap a) -> {VV : GHC.Types.Int | VV == heapSize x1\n                                                         && VV >= 0\n                                                         && len (unheap x1) <= VV}","ident":"Data.Heap.Binominal.heapSize","row":49,"col":1},"34":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts}","ident":"ts","row":49,"col":34}},"115":{"25":{"ann":"(Data.Heap.Binominal.Tree a)","ident":"_","row":115,"col":25},"53":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1}","ident":"lq_anf$##7205759403792805196","row":115,"col":53},"9":{"ann":"(Data.Heap.Binominal.Tree a)","ident":"t1BoundedByX1","row":115,"col":9}},"234":{"19":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:{v : [(Data.Heap.Binominal.Tree a)] | 0 < len v} -> {v : ((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | root (fst v) <= VV})]) | size (fst v) + sumSizeList (snd v) == sumSizeList x2}","ident":"Data.Heap.Binominal.deleteMin'","row":234,"col":19},"12":{"ann":"{VV : [(Data.Heap.Binominal.Tree {VV : a | root t' <= VV})] | len VV >= 0}","ident":"ts'","row":234,"col":12},"30":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0}","ident":"ds_d2Z0","row":234,"col":30},"8":{"ann":"(Data.Heap.Binominal.Tree a)","ident":"t'","row":234,"col":8}},"216":{"1":{"ann":"forall a .\nx1:{VV : (Data.Heap.Binominal.Heap a) | 0 < len (unheap VV)} -> {v : [(Data.Heap.Binominal.Tree a)] | 0 < len v\n                                                                                                      && sumSizeList v == heapSize x1}","ident":"Data.Heap.Binominal.unheapNonempty","row":216,"col":1},"34":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts}","ident":"lq_anf$##7205759403792805276","row":216,"col":34}},"101":{"1":{"ann":"forall a b .\nx1:a -> (Data.Heap.Binominal.Tree {VV : a | x1 <= VV}) -> b -> b","ident":"Data.Heap.Binominal.assertBoundedTree","row":101,"col":1},"23":{"ann":"a","ident":"x","row":101,"col":23}},"239":{"6":{"ann":"{VV : a | VV == root t\n          && VV == x}","ident":"x","row":239,"col":6},"10":{"ann":"{VV : a | VV == root t'\n          && VV == x'}","ident":"x'","row":239,"col":10}},"145":{"17":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":145,"col":17},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Tree a) -> x3:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == size x2 + sumSizeList x3}","ident":"Data.Heap.Binominal.insert'","row":145,"col":1},"16":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v == 0\n                                      && sumSizeList v == 0}","ident":"lq_anf$##7205759403792805211","row":145,"col":16},"9":{"ann":"(Data.Heap.Binominal.Tree a)","ident":"t","row":145,"col":9}},"246":{"13":{"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | root t' <= VV})] | len v >= 0\n                                                             && sumSizeList v >= 0\n                                                             && v == ts'}","ident":"ts'","row":246,"col":13},"6":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t'}","ident":"t'","row":246,"col":6},"10":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x' <= VV}) | size v == size tBounded\n                                                      && v == hd}","ident":"hd","row":246,"col":10}},"44":{"43":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && v == xs}","ident":"xs","row":44,"col":43},"31":{"ann":"{v : GHC.Types.Int | v == sumSizeList xs\n                     && v >= 0\n                     && len xs <= v}","ident":"lq_anf$##7205759403792805190","row":44,"col":31},"22":{"ann":"{v : GHC.Types.Int | 1 <= v\n                     && v == 1 + sumSizeList (subtrees x)\n                     && v == size x}","ident":"lq_anf$##7205759403792805189","row":44,"col":22},"27":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == x}","ident":"x","row":44,"col":27}},"220":{"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:{VV : (Data.Heap.Binominal.Heap a) | 0 < len (unheap VV)} -> {v : (Data.Heap.Binominal.Heap a) | 1 + heapSize v == heapSize x2}","ident":"Data.Heap.Binominal.deleteMin","row":220,"col":1},"11":{"ann":"{VV : (Data.Heap.Binominal.Heap a) | 0 < len (unheap VV)}","ident":"h","row":220,"col":11}},"264":{"17":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0}","ident":"ds_d2XV","row":264,"col":17}},"88":{"36":{"ann":"{VV : a | x <= VV}","ident":"y","row":88,"col":36},"1":{"ann":"forall a .\nx1:a -> x2:{VV : a | x1 <= VV} -> x3:[(Data.Heap.Binominal.Tree {VV : a | x2 <= VV})] -> {v : [(Data.Heap.Binominal.Tree {VV : a | x1 <= VV})] | sumSizeList v == sumSizeList x3}","ident":"Data.Heap.Binominal.boundedTreeListTransitivityLemma","row":88,"col":1},"34":{"ann":"a","ident":"x","row":88,"col":34},"38":{"ann":"[(Data.Heap.Binominal.Tree {VV : a | y <= VV})]","ident":"ts","row":88,"col":38}},"113":{"14":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805206","row":113,"col":14},"17":{"ann":"a","ident":"ds_d2Xq","row":113,"col":17},"35":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0}","ident":"ds_d2Xr","row":113,"col":35},"40":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805209","row":113,"col":40},"20":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | head v == t2BoundedByX1}","ident":"lq_anf$##7205759403792805208","row":113,"col":20},"41":{"ann":"{v : GHC.Types.Int | 1 <= v}","ident":"ds_d2Xs","row":113,"col":41},"11":{"ann":"{v : GHC.Types.Int | v >= 0}","ident":"ds_d2Xp","row":113,"col":11},"47":{"ann":"{v : GHC.Types.Int | 1 <= v}","ident":"ds_d2Xw","row":113,"col":47},"21":{"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t2BoundedByX2\n                                    && v == t2BoundedByX1}","ident":"t2BoundedByX1","row":113,"col":21},"10":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805207","row":113,"col":10}},"232":{"22":{"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | len v == 0\n                                            && sumSizeList v == 0}","ident":"_","row":232,"col":22},"19":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":232,"col":19},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:{v : [(Data.Heap.Binominal.Tree a)] | 0 < len v} -> {v : ((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | root (fst v) <= VV})]) | size (fst v) + sumSizeList (snd v) == sumSizeList x2}","ident":"Data.Heap.Binominal.deleteMin'","row":232,"col":1},"18":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v == 0\n                                      && sumSizeList v == 0}","ident":"lq_anf$##7205759403792805253","row":232,"col":18}},"284":{"22":{"ann":"(a, (Data.Heap.Binominal.Heap {VV : a | fst x4 <= VV}))","ident":"_","row":284,"col":22},"16":{"ann":"(Data.Heap.Binominal.Heap a)","ident":"h'","row":284,"col":16},"8":{"ann":"a","ident":"minElt","row":284,"col":8},"33":{"ann":"{v : (Data.Heap.Binominal.Heap a) | heapSize v >= 0}","ident":"ds_d2ZP","row":284,"col":33}},"116":{"25":{"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t1BoundedByX1}","ident":"_","row":116,"col":25},"57":{"ann":"a","ident":"ds_d2Xq","row":116,"col":57},"60":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1BoundedByX1}","ident":"t1BoundedByX1","row":116,"col":60},"9":{"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t1BoundedByX1}","ident":"t1BoundedByX2","row":116,"col":9},"54":{"ann":"a","ident":"ds_d2Xu","row":116,"col":54}},"237":{"7":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t <= VV}) | size v == size t}","ident":"tBounded","row":237,"col":7},"18":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t <= VV}) | size v == size t}","ident":"_","row":237,"col":18},"46":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":237,"col":46}},"221":{"31":{"ann":"((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | root (fst x9) <= VV})])","ident":"lq_anf$##7205759403792805285","row":221,"col":31},"58":{"ann":"{v : (Data.Heap.Binominal.Heap a) | 0 < len (unheap v)\n                                    && heapSize v >= 0\n                                    && v == h}","ident":"h","row":221,"col":58},"42":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | 0 < len v\n                                      && sumSizeList v == heapSize h}","ident":"lq_anf$##7205759403792805284","row":221,"col":42}},"1":{"1":{"ann":"GHC.Types.Module","ident":"Data.Heap.Binominal.$trModule","row":1,"col":1}},"238":{"7":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t' <= VV}) | size v == size t'}","ident":"tBounded'","row":238,"col":7},"19":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t' <= VV}) | size v == size t'}","ident":"_","row":238,"col":19},"47":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t'}","ident":"t'","row":238,"col":47}},"141":{"36":{"ann":"{v : (Data.Heap.Binominal.Tree a) | root v == x}","ident":"lq_anf$##7205759403792805223","row":141,"col":36},"49":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805222","row":141,"col":49},"22":{"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {v : (Data.Heap.Binominal.Heap a) | unheap v == x1\n                                                                         && heapSize v == sumSizeList x1}","ident":"Data.Heap.Binominal.Heap","row":141,"col":22},"44":{"ann":"{VV : a | VV == x}","ident":"x","row":141,"col":44},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\na -> x3:(Data.Heap.Binominal.Heap a) -> {v : (Data.Heap.Binominal.Heap a) | 1 + heapSize x3 == heapSize v}","ident":"Data.Heap.Binominal.insert","row":141,"col":1},"52":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts}","ident":"ts","row":141,"col":52},"46":{"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | len v == 0\n                                            && sumSizeList v == 0}","ident":"_","row":141,"col":46},"27":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"lq_anf$##7205759403792805224","row":141,"col":27},"8":{"ann":"a","ident":"x","row":141,"col":8},"42":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805219","row":141,"col":42}},"242":{"14":{"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | x <= VV})] | sumSizeList v == sumSizeList ts'}","ident":"_","row":242,"col":14},"49":{"ann":"{VV : a | VV == root t'\n          && VV == x'}","ident":"x'","row":242,"col":49},"52":{"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | root t' <= VV})] | len v >= 0\n                                                             && sumSizeList v >= 0\n                                                             && v == ts'}","ident":"ts'","row":242,"col":52},"47":{"ann":"{VV : a | VV == root t\n          && VV == x}","ident":"x","row":242,"col":47},"9":{"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | x <= VV})] | sumSizeList v == sumSizeList ts'}","ident":"tl","row":242,"col":9}},"105":{"1":{"ann":"forall a b .\nx1:a -> [(Data.Heap.Binominal.Tree {VV : a | x1 <= VV})] -> b -> b","ident":"Data.Heap.Binominal.assertBoundedTreeList","row":105,"col":1},"27":{"ann":"a","ident":"x","row":105,"col":27}},"158":{"15":{"ann":"forall a . {v : (Data.Heap.Binominal.Heap a) | heapSize v == 0}","ident":"_","row":158,"col":15},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:[a] -> {v : (Data.Heap.Binominal.Heap a) | heapSize v == len x2}","ident":"Data.Heap.Binominal.fromList","row":158,"col":1}},"236":{"7":{"ann":"{VV : a | VV == root t'}","ident":"x'","row":236,"col":7},"12":{"ann":"{VV : a | VV == root t'}","ident":"_","row":236,"col":12},"17":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t'}","ident":"t'","row":236,"col":17}},"285":{"12":{"ann":"{v : [a] | len v == heapSize h'}","ident":"lq_anf$##7205759403792805299","row":285,"col":12},"3":{"ann":"{VV : a | VV == minElt}","ident":"minElt","row":285,"col":3},"21":{"ann":"{v : (Data.Heap.Binominal.Heap a) | heapSize v >= 0\n                                    && v == h'}","ident":"h'","row":285,"col":21}},"153":{"1":{"ann":"forall a .\nx1:[a] -> {VV : GHC.Types.Int | VV == len x1\n                                && VV >= 0}","ident":"Data.Heap.Binominal.len","row":153,"col":1},"10":{"ann":"{v : GHC.Prim.Int# | v == 0}","ident":"lq_anf$##7205759403792805268","row":153,"col":10}},"117":{"14":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805201","row":117,"col":14},"17":{"ann":"a","ident":"ds_d2Xu","row":117,"col":17},"35":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0}","ident":"ds_d2Xv","row":117,"col":35},"40":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805204","row":117,"col":40},"20":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | head v == t1BoundedByX2}","ident":"lq_anf$##7205759403792805203","row":117,"col":20},"41":{"ann":"{v : GHC.Types.Int | 1 <= v}","ident":"ds_d2Xs","row":117,"col":41},"11":{"ann":"{v : GHC.Types.Int | v >= 0}","ident":"ds_d2Xt","row":117,"col":11},"47":{"ann":"{v : GHC.Types.Int | 1 <= v}","ident":"ds_d2Xw","row":117,"col":47},"21":{"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t1BoundedByX1\n                                    && v == t1BoundedByX2}","ident":"t1BoundedByX2","row":117,"col":21},"10":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805202","row":117,"col":10}},"266":{"15":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == rank t2}","ident":"lq_anf$##7205759403792805230","row":266,"col":15},"37":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts1'}","ident":"ts1'","row":266,"col":37},"25":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1}","ident":"t1","row":266,"col":25},"30":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"lq_anf$##7205759403792805240","row":266,"col":30},"20":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2}","ident":"t2","row":266,"col":20},"5":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == rank t1}","ident":"lq_anf$##7205759403792805229","row":266,"col":5},"42":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0}","ident":"ds_d2XV","row":266,"col":42},"10":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1}","ident":"t1","row":266,"col":10}},"121":{"14":{"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | len v == 0\n                                            && sumSizeList v == 0}","ident":"_","row":121,"col":14},"1":{"ann":"forall a . {v : (Data.Heap.Binominal.Heap a) | heapSize v == 0}","ident":"Data.Heap.Binominal.empty","row":121,"col":1}},"147":{"28":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0}","ident":"ds_d2Xz","row":147,"col":28},"14":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == rank t'}","ident":"lq_anf$##7205759403792805213","row":147,"col":14},"19":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t'}","ident":"t'","row":147,"col":19},"5":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == rank t}","ident":"lq_anf$##7205759403792805212","row":147,"col":5},"24":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":147,"col":24},"10":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":147,"col":10}},"222":{"16":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList ts1}","ident":"lq_anf$##7205759403792805288","row":222,"col":16},"8":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"lq_anf$##7205759403792805289","row":222,"col":8},"33":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts1}","ident":"ts1","row":222,"col":33},"38":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts2}","ident":"ts2","row":222,"col":38}},"159":{"28":{"ann":"{v : (Data.Heap.Binominal.Heap a) | heapSize v == len xs}","ident":"lq_anf$##7205759403792805258","row":159,"col":28},"19":{"ann":"{v : (GHC.Classes.Ord a) | v == $dOrd_a2Ko}","ident":"$dOrd_a2Ko","row":159,"col":19},"26":{"ann":"{VV : a | VV == x}","ident":"x","row":159,"col":26},"38":{"ann":"{v : [a] | len v >= 0\n           && sumSizeList v >= 0\n           && v == xs}","ident":"xs","row":159,"col":38}},"243":{"12":{"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | x <= VV})] | sumSizeList v == sumSizeList ts'\n                                                       && len v >= 0\n                                                       && sumSizeList v >= 0\n                                                       && v == tl}","ident":"tl","row":243,"col":12},"6":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":243,"col":6},"9":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x <= VV}) | size v == size tBounded'\n                                                     && v == hd}","ident":"hd","row":243,"col":9}},"207":{"44":{"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | len v == 0\n                                            && sumSizeList v == 0}","ident":"_","row":207,"col":44},"17":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"xs","row":207,"col":17},"1":{"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList x1}","ident":"Data.Heap.Binominal.reverseHeapList","row":207,"col":1},"41":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == xs}","ident":"xs","row":207,"col":41}},"282":{"22":{"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | len v == 0\n                                            && sumSizeList v == 0}","ident":"_","row":282,"col":22},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Heap a) -> {v : [a] | len v == heapSize x2}","ident":"Data.Heap.Binominal.heapSort","row":282,"col":1}},"154":{"14":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805270","row":154,"col":14},"22":{"ann":"{v : [a] | sumSizeList v >= 0\n           && len v >= 0\n           && v == xs}","ident":"xs","row":154,"col":22},"18":{"ann":"{v : GHC.Types.Int | v == len xs\n                     && v >= 0}","ident":"lq_anf$##7205759403792805271","row":154,"col":18}},"109":{"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Tree a) -> x3:(Data.Heap.Binominal.Tree a) -> {v : (Data.Heap.Binominal.Tree a) | size v == size x2 + size x3}","ident":"Data.Heap.Binominal.link","row":109,"col":1},"59":{"ann":"(Data.Heap.Binominal.Tree a)","ident":"t2","row":109,"col":59},"6":{"ann":"(Data.Heap.Binominal.Tree a)","ident":"t1","row":109,"col":6}},"110":{"5":{"ann":"a","ident":"ds_d2Xq","row":110,"col":5},"11":{"ann":"a","ident":"ds_d2Xu","row":110,"col":11}},"228":{"25":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList ts1}","ident":"lq_anf$##7205759403792805294","row":228,"col":25},"12":{"ann":"(Data.Heap.Binominal.Heap a)","ident":"lq_anf$##7205759403792805296","row":228,"col":12},"17":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"lq_anf$##7205759403792805295","row":228,"col":17},"4":{"ann":"{VV : a | VV == minElt}","ident":"minElt","row":228,"col":4},"47":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts2}","ident":"ts2","row":228,"col":47},"42":{"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | minElt <= VV})] | len v >= 0\n                                                            && sumSizeList v >= 0\n                                                            && v == ts1}","ident":"ts1","row":228,"col":42}},"245":{"48":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t <= VV}) | size v == size t\n                                                          && v == tBounded}","ident":"tBounded","row":245,"col":48},"43":{"ann":"{VV : a | VV == root t'\n          && VV == x'}","ident":"x'","row":245,"col":43},"14":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x' <= VV}) | size v == size tBounded}","ident":"_","row":245,"col":14},"46":{"ann":"{VV : a | VV == root t\n          && VV == x}","ident":"x","row":245,"col":46},"9":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x' <= VV}) | size v == size tBounded}","ident":"hd","row":245,"col":9}},"201":{"37":{"ann":"forall a .\nx1:{v : (Data.Heap.Binominal.Heap a) | 0 < len (unheap v)} -> {v : [(Data.Heap.Binominal.Tree a)] | 0 < len v\n                                                                                                    && sumSizeList v == heapSize x1}","ident":"_","row":201,"col":37},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\n{VV : (Data.Heap.Binominal.Heap a) | 0 < len (unheap VV)} -> a","ident":"Data.Heap.Binominal.minimum","row":201,"col":1},"18":{"ann":"forall a b . x1:(a, b) -> {VV : a | VV == fst x1}","ident":"_","row":201,"col":18},"11":{"ann":"forall a .\nx1:(Data.Heap.Binominal.Tree a) -> {VV : a | VV == root x1}","ident":"_","row":201,"col":11},"24":{"ann":"x1:{v : [(Data.Heap.Binominal.Tree a)] | 0 < len v} -> {v : ((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | root (fst x15) <= VV})]) | size (fst v) + sumSizeList (snd v) == sumSizeList x1}","ident":"lq_anf$##7205759403792805280","row":201,"col":24}},"267":{"15":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == rank t1}","ident":"lq_anf$##7205759403792805234","row":267,"col":15},"37":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts1}","ident":"ts1","row":267,"col":37},"25":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2}","ident":"t2","row":267,"col":25},"30":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList ts1 + sumSizeList ts2'}","ident":"lq_anf$##7205759403792805239","row":267,"col":30},"20":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1}","ident":"t1","row":267,"col":20},"5":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == rank t2}","ident":"lq_anf$##7205759403792805233","row":267,"col":5},"41":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts2'}","ident":"ts2'","row":267,"col":41},"10":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2}","ident":"t2","row":267,"col":10}},"79":{"43":{"ann":"{v : GHC.Types.Int | 1 <= v}","ident":"ds_d2X2","row":79,"col":43},"14":{"ann":"{v : GHC.Types.Int | v >= 0}","ident":"ds_d2WZ","row":79,"col":14},"22":{"ann":"a","ident":"ds_d2X0","row":79,"col":22},"34":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0}","ident":"ds_d2X1","row":79,"col":34},"3":{"ann":"forall a .\nx1:{v : GHC.Types.Int | v >= 0} -> x2:a -> x3:[(Data.Heap.Binominal.Tree {VV : a | x2 <= VV})] -> x4:{v : GHC.Types.Int | 1 <= v\n                                                                                                                          && v == 1 + sumSizeList x3} -> {v : (Data.Heap.Binominal.Tree a) | size v == x4\n                                                                                                                                                                                             && subtrees v == x3\n                                                                                                                                                                                             && root v == x2\n                                                                                                                                                                                             && rank v == x1}","ident":"Data.Heap.Binominal.Node","row":79,"col":3}},"226":{"12":{"ann":"{VV : (Data.Heap.Binominal.Heap a) | 0 < len (unheap VV)}","ident":"h","row":226,"col":12},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:{VV : (Data.Heap.Binominal.Heap a) | 0 < len (unheap VV)} -> {v : (a, (Data.Heap.Binominal.Heap {VV : a | fst v <= VV})) | 1 + heapSize (snd v) == heapSize x2}","ident":"Data.Heap.Binominal.deleteMin2","row":226,"col":1}},"259":{"48":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts2}","ident":"ts2","row":259,"col":48},"31":{"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {v : (Data.Heap.Binominal.Heap a) | unheap v == x1\n                                                                         && heapSize v == sumSizeList x1}","ident":"Data.Heap.Binominal.Heap","row":259,"col":31},"36":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList ts1 + sumSizeList ts2}","ident":"lq_anf$##7205759403792805245","row":259,"col":36},"44":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts1}","ident":"ts1","row":259,"col":44},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Heap a) -> x3:(Data.Heap.Binominal.Heap a) -> {VV : (Data.Heap.Binominal.Heap a) | heapSize VV == heapSize x2 + heapSize x3}","ident":"Data.Heap.Binominal.merge","row":259,"col":1}},"97":{"1":{"ann":"forall a . {v : GHC.Types.Bool | v} -> a -> a","ident":"Data.Heap.Binominal.assert","row":97,"col":1},"10":{"ann":"a","ident":"x","row":97,"col":10}},"125":{"19":{"ann":"{v : (Data.Heap.Binominal.Heap a) | heapSize v >= 0\n                                    && v == h}","ident":"h","row":125,"col":19},"1":{"ann":"forall a .\nx1:(Data.Heap.Binominal.Heap a) -> {v : GHC.Types.Bool | v <=> heapSize x1 == 0}","ident":"Data.Heap.Binominal.null","row":125,"col":1},"24":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805194","row":125,"col":24},"6":{"ann":"(Data.Heap.Binominal.Heap a)","ident":"h","row":125,"col":6},"10":{"ann":"{v : GHC.Types.Int | v == heapSize h\n                     && v >= 0\n                     && len (unheap h) <= v}","ident":"lq_anf$##7205759403792805192","row":125,"col":10}},"111":{"25":{"ann":"(Data.Heap.Binominal.Tree a)","ident":"_","row":111,"col":25},"53":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2}","ident":"lq_anf$##7205759403792805197","row":111,"col":53},"9":{"ann":"(Data.Heap.Binominal.Tree a)","ident":"t2BoundedByX2","row":111,"col":9}},"212":{"56":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == x}","ident":"x","row":212,"col":56},"52":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == xs}","ident":"xs","row":212,"col":52},"58":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == acc}","ident":"acc","row":212,"col":58},"55":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | tail v == acc\n                                      && head v == x\n                                      && len v == 1 + len acc\n                                      && sumSizeList v == size x + sumSizeList acc}","ident":"lq_anf$##7205759403792805273","row":212,"col":55},"33":{"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> x2:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList x1 + sumSizeList x2}","ident":"Data.Heap.Binominal.reverseHeapListAux","row":212,"col":33}}},"sptypes":[{"start":{"line":1,"column":1},"ann":"GHC.Types.Module","ident":"Data.Heap.Binominal.$trModule","stop":{"line":1,"column":1}},{"start":{"line":43,"column":1},"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {VV : GHC.Types.Int | VV == sumSizeList x1\n                                                           && VV >= 0\n                                                           && len x1 <= VV}","ident":"Data.Heap.Binominal.sumSizeList","stop":{"line":43,"column":12}},{"start":{"line":43,"column":18},"ann":"{v : GHC.Prim.Int# | v == 0}","ident":"lq_anf$##7205759403792805188","stop":{"line":43,"column":19}},{"start":{"line":44,"column":22},"ann":"{v : GHC.Types.Int | 1 <= v\n                     && v == 1 + sumSizeList (subtrees x)\n                     && v == size x}","ident":"lq_anf$##7205759403792805189","stop":{"line":44,"column":28}},{"start":{"line":44,"column":27},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == x}","ident":"x","stop":{"line":44,"column":28}},{"start":{"line":44,"column":31},"ann":"{v : GHC.Types.Int | v == sumSizeList xs\n                     && v >= 0\n                     && len xs <= v}","ident":"lq_anf$##7205759403792805190","stop":{"line":44,"column":45}},{"start":{"line":44,"column":43},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && v == xs}","ident":"xs","stop":{"line":44,"column":45}},{"start":{"line":49,"column":1},"ann":"forall a .\nx1:(Data.Heap.Binominal.Heap a) -> {VV : GHC.Types.Int | VV == heapSize x1\n                                                         && VV >= 0\n                                                         && len (unheap x1) <= VV}","ident":"Data.Heap.Binominal.heapSize","stop":{"line":49,"column":9}},{"start":{"line":49,"column":22},"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {VV : GHC.Types.Int | VV == sumSizeList x1\n                                                           && VV >= 0\n                                                           && len x1 <= VV}","ident":"Data.Heap.Binominal.sumSizeList","stop":{"line":49,"column":36}},{"start":{"line":49,"column":34},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts}","ident":"ts","stop":{"line":49,"column":36}},{"start":{"line":78,"column":1},"ann":"forall a .\nx1:(Data.Heap.Binominal.Tree a) -> {VV : (Data.Heap.Binominal.Tree {VV : a | root x1 <= VV}) | size VV == size x1}","ident":"Data.Heap.Binominal.treeIsBoundedByItsRootLemma","stop":{"line":78,"column":28}},{"start":{"line":79,"column":3},"ann":"forall a .\nx1:{v : GHC.Types.Int | v >= 0} -> x2:a -> x3:[(Data.Heap.Binominal.Tree {VV : a | x2 <= VV})] -> x4:{v : GHC.Types.Int | 1 <= v\n                                                                                                                          && v == 1 + sumSizeList x3} -> {v : (Data.Heap.Binominal.Tree a) | size v == x4\n                                                                                                                                                                                             && subtrees v == x3\n                                                                                                                                                                                             && root v == x2\n                                                                                                                                                                                             && rank v == x1}","ident":"Data.Heap.Binominal.Node","stop":{"line":79,"column":46}},{"start":{"line":79,"column":14},"ann":"{v : GHC.Types.Int | v >= 0}","ident":"ds_d2WZ","stop":{"line":79,"column":15}},{"start":{"line":79,"column":22},"ann":"a","ident":"ds_d2X0","stop":{"line":79,"column":23}},{"start":{"line":79,"column":34},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0}","ident":"ds_d2X1","stop":{"line":79,"column":36}},{"start":{"line":79,"column":43},"ann":"{v : GHC.Types.Int | 1 <= v}","ident":"ds_d2X2","stop":{"line":79,"column":45}},{"start":{"line":84,"column":1},"ann":"forall a .\nx1:a -> x2:{VV : a | x1 <= VV} -> x3:(Data.Heap.Binominal.Tree {VV : a | x2 <= VV}) -> {VV : (Data.Heap.Binominal.Tree {VV : a | x1 <= VV}) | size VV == size x3}","ident":"Data.Heap.Binominal.boundedTreeTransitivityLemma","stop":{"line":84,"column":29}},{"start":{"line":84,"column":30},"ann":"a","ident":"x","stop":{"line":84,"column":31}},{"start":{"line":84,"column":32},"ann":"{VV : a | x <= VV}","ident":"y","stop":{"line":84,"column":33}},{"start":{"line":84,"column":34},"ann":"(Data.Heap.Binominal.Tree {VV : a | y <= VV})","ident":"tree","stop":{"line":84,"column":38}},{"start":{"line":88,"column":1},"ann":"forall a .\nx1:a -> x2:{VV : a | x1 <= VV} -> x3:[(Data.Heap.Binominal.Tree {VV : a | x2 <= VV})] -> {v : [(Data.Heap.Binominal.Tree {VV : a | x1 <= VV})] | sumSizeList v == sumSizeList x3}","ident":"Data.Heap.Binominal.boundedTreeListTransitivityLemma","stop":{"line":88,"column":33}},{"start":{"line":88,"column":34},"ann":"a","ident":"x","stop":{"line":88,"column":35}},{"start":{"line":88,"column":36},"ann":"{VV : a | x <= VV}","ident":"y","stop":{"line":88,"column":37}},{"start":{"line":88,"column":38},"ann":"[(Data.Heap.Binominal.Tree {VV : a | y <= VV})]","ident":"ts","stop":{"line":88,"column":40}},{"start":{"line":97,"column":1},"ann":"forall a . {v : GHC.Types.Bool | v} -> a -> a","ident":"Data.Heap.Binominal.assert","stop":{"line":97,"column":7}},{"start":{"line":97,"column":10},"ann":"a","ident":"x","stop":{"line":97,"column":11}},{"start":{"line":101,"column":1},"ann":"forall a b .\nx1:a -> (Data.Heap.Binominal.Tree {VV : a | x1 <= VV}) -> b -> b","ident":"Data.Heap.Binominal.assertBoundedTree","stop":{"line":101,"column":18}},{"start":{"line":101,"column":23},"ann":"a","ident":"x","stop":{"line":101,"column":24}},{"start":{"line":105,"column":1},"ann":"forall a b .\nx1:a -> [(Data.Heap.Binominal.Tree {VV : a | x1 <= VV})] -> b -> b","ident":"Data.Heap.Binominal.assertBoundedTreeList","stop":{"line":105,"column":22}},{"start":{"line":105,"column":27},"ann":"a","ident":"x","stop":{"line":105,"column":28}},{"start":{"line":109,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Tree a) -> x3:(Data.Heap.Binominal.Tree a) -> {v : (Data.Heap.Binominal.Tree a) | size v == size x2 + size x3}","ident":"Data.Heap.Binominal.link","stop":{"line":109,"column":5}},{"start":{"line":109,"column":6},"ann":"(Data.Heap.Binominal.Tree a)","ident":"t1","stop":{"line":109,"column":8}},{"start":{"line":109,"column":59},"ann":"(Data.Heap.Binominal.Tree a)","ident":"t2","stop":{"line":109,"column":61}},{"start":{"line":110,"column":5},"ann":"a","ident":"ds_d2Xq","stop":{"line":110,"column":7}},{"start":{"line":110,"column":11},"ann":"a","ident":"ds_d2Xu","stop":{"line":110,"column":13}},{"start":{"line":111,"column":9},"ann":"(Data.Heap.Binominal.Tree a)","ident":"t2BoundedByX2","stop":{"line":111,"column":22}},{"start":{"line":111,"column":25},"ann":"(Data.Heap.Binominal.Tree a)","ident":"_","stop":{"line":111,"column":55}},{"start":{"line":111,"column":53},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2}","ident":"lq_anf$##7205759403792805197","stop":{"line":111,"column":55}},{"start":{"line":112,"column":9},"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t2BoundedByX2}","ident":"t2BoundedByX1","stop":{"line":112,"column":22}},{"start":{"line":112,"column":25},"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t2BoundedByX2}","ident":"_","stop":{"line":112,"column":73}},{"start":{"line":112,"column":54},"ann":"a","ident":"ds_d2Xq","stop":{"line":112,"column":56}},{"start":{"line":112,"column":57},"ann":"a","ident":"ds_d2Xu","stop":{"line":112,"column":59}},{"start":{"line":112,"column":60},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2BoundedByX2}","ident":"t2BoundedByX2","stop":{"line":112,"column":73}},{"start":{"line":113,"column":10},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805207","stop":{"line":113,"column":16}},{"start":{"line":113,"column":11},"ann":"{v : GHC.Types.Int | v >= 0}","ident":"ds_d2Xp","stop":{"line":113,"column":13}},{"start":{"line":113,"column":14},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805206","stop":{"line":113,"column":15}},{"start":{"line":113,"column":17},"ann":"a","ident":"ds_d2Xq","stop":{"line":113,"column":19}},{"start":{"line":113,"column":20},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | head v == t2BoundedByX1}","ident":"lq_anf$##7205759403792805208","stop":{"line":113,"column":39}},{"start":{"line":113,"column":21},"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t2BoundedByX2\n                                    && v == t2BoundedByX1}","ident":"t2BoundedByX1","stop":{"line":113,"column":34}},{"start":{"line":113,"column":35},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0}","ident":"ds_d2Xr","stop":{"line":113,"column":38}},{"start":{"line":113,"column":40},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805209","stop":{"line":113,"column":51}},{"start":{"line":113,"column":41},"ann":"{v : GHC.Types.Int | 1 <= v}","ident":"ds_d2Xs","stop":{"line":113,"column":44}},{"start":{"line":113,"column":47},"ann":"{v : GHC.Types.Int | 1 <= v}","ident":"ds_d2Xw","stop":{"line":113,"column":50}},{"start":{"line":115,"column":9},"ann":"(Data.Heap.Binominal.Tree a)","ident":"t1BoundedByX1","stop":{"line":115,"column":22}},{"start":{"line":115,"column":25},"ann":"(Data.Heap.Binominal.Tree a)","ident":"_","stop":{"line":115,"column":55}},{"start":{"line":115,"column":53},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1}","ident":"lq_anf$##7205759403792805196","stop":{"line":115,"column":55}},{"start":{"line":116,"column":9},"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t1BoundedByX1}","ident":"t1BoundedByX2","stop":{"line":116,"column":22}},{"start":{"line":116,"column":25},"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t1BoundedByX1}","ident":"_","stop":{"line":116,"column":73}},{"start":{"line":116,"column":54},"ann":"a","ident":"ds_d2Xu","stop":{"line":116,"column":56}},{"start":{"line":116,"column":57},"ann":"a","ident":"ds_d2Xq","stop":{"line":116,"column":59}},{"start":{"line":116,"column":60},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1BoundedByX1}","ident":"t1BoundedByX1","stop":{"line":116,"column":73}},{"start":{"line":117,"column":10},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805202","stop":{"line":117,"column":16}},{"start":{"line":117,"column":11},"ann":"{v : GHC.Types.Int | v >= 0}","ident":"ds_d2Xt","stop":{"line":117,"column":13}},{"start":{"line":117,"column":14},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805201","stop":{"line":117,"column":15}},{"start":{"line":117,"column":17},"ann":"a","ident":"ds_d2Xu","stop":{"line":117,"column":19}},{"start":{"line":117,"column":20},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | head v == t1BoundedByX2}","ident":"lq_anf$##7205759403792805203","stop":{"line":117,"column":39}},{"start":{"line":117,"column":21},"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t1BoundedByX1\n                                    && v == t1BoundedByX2}","ident":"t1BoundedByX2","stop":{"line":117,"column":34}},{"start":{"line":117,"column":35},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0}","ident":"ds_d2Xv","stop":{"line":117,"column":38}},{"start":{"line":117,"column":40},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805204","stop":{"line":117,"column":51}},{"start":{"line":117,"column":41},"ann":"{v : GHC.Types.Int | 1 <= v}","ident":"ds_d2Xs","stop":{"line":117,"column":44}},{"start":{"line":117,"column":47},"ann":"{v : GHC.Types.Int | 1 <= v}","ident":"ds_d2Xw","stop":{"line":117,"column":50}},{"start":{"line":121,"column":1},"ann":"forall a . {v : (Data.Heap.Binominal.Heap a) | heapSize v == 0}","ident":"Data.Heap.Binominal.empty","stop":{"line":121,"column":6}},{"start":{"line":121,"column":14},"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | len v == 0\n                                            && sumSizeList v == 0}","ident":"_","stop":{"line":121,"column":16}},{"start":{"line":125,"column":1},"ann":"forall a .\nx1:(Data.Heap.Binominal.Heap a) -> {v : GHC.Types.Bool | v <=> heapSize x1 == 0}","ident":"Data.Heap.Binominal.null","stop":{"line":125,"column":5}},{"start":{"line":125,"column":6},"ann":"(Data.Heap.Binominal.Heap a)","ident":"h","stop":{"line":125,"column":7}},{"start":{"line":125,"column":10},"ann":"{v : GHC.Types.Int | v == heapSize h\n                     && v >= 0\n                     && len (unheap h) <= v}","ident":"lq_anf$##7205759403792805192","stop":{"line":125,"column":20}},{"start":{"line":125,"column":19},"ann":"{v : (Data.Heap.Binominal.Heap a) | heapSize v >= 0\n                                    && v == h}","ident":"h","stop":{"line":125,"column":20}},{"start":{"line":125,"column":24},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805194","stop":{"line":125,"column":25}},{"start":{"line":129,"column":1},"ann":"forall a .\na -> {v : (Data.Heap.Binominal.Heap a) | heapSize v == 1}","ident":"Data.Heap.Binominal.singleton","stop":{"line":129,"column":10}},{"start":{"line":129,"column":11},"ann":"a","ident":"x","stop":{"line":129,"column":12}},{"start":{"line":129,"column":20},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"lq_anf$##7205759403792805266","stop":{"line":129,"column":35}},{"start":{"line":129,"column":21},"ann":"{v : (Data.Heap.Binominal.Tree a) | root v == x}","ident":"lq_anf$##7205759403792805264","stop":{"line":129,"column":34}},{"start":{"line":129,"column":26},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805260","stop":{"line":129,"column":27}},{"start":{"line":129,"column":28},"ann":"{VV : a | VV == x}","ident":"x","stop":{"line":129,"column":29}},{"start":{"line":129,"column":30},"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | len v == 0\n                                            && sumSizeList v == 0}","ident":"_","stop":{"line":129,"column":32}},{"start":{"line":129,"column":33},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805263","stop":{"line":129,"column":34}},{"start":{"line":141,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\na -> x3:(Data.Heap.Binominal.Heap a) -> {v : (Data.Heap.Binominal.Heap a) | 1 + heapSize x3 == heapSize v}","ident":"Data.Heap.Binominal.insert","stop":{"line":141,"column":7}},{"start":{"line":141,"column":8},"ann":"a","ident":"x","stop":{"line":141,"column":9}},{"start":{"line":141,"column":22},"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {v : (Data.Heap.Binominal.Heap a) | unheap v == x1\n                                                                         && heapSize v == sumSizeList x1}","ident":"Data.Heap.Binominal.Heap","stop":{"line":141,"column":55}},{"start":{"line":141,"column":27},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"lq_anf$##7205759403792805224","stop":{"line":141,"column":55}},{"start":{"line":141,"column":36},"ann":"{v : (Data.Heap.Binominal.Tree a) | root v == x}","ident":"lq_anf$##7205759403792805223","stop":{"line":141,"column":51}},{"start":{"line":141,"column":42},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805219","stop":{"line":141,"column":43}},{"start":{"line":141,"column":44},"ann":"{VV : a | VV == x}","ident":"x","stop":{"line":141,"column":45}},{"start":{"line":141,"column":46},"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | len v == 0\n                                            && sumSizeList v == 0}","ident":"_","stop":{"line":141,"column":48}},{"start":{"line":141,"column":49},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805222","stop":{"line":141,"column":50}},{"start":{"line":141,"column":52},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts}","ident":"ts","stop":{"line":141,"column":54}},{"start":{"line":145,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Tree a) -> x3:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == size x2 + sumSizeList x3}","ident":"Data.Heap.Binominal.insert'","stop":{"line":145,"column":8}},{"start":{"line":145,"column":9},"ann":"(Data.Heap.Binominal.Tree a)","ident":"t","stop":{"line":145,"column":10}},{"start":{"line":145,"column":16},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v == 0\n                                      && sumSizeList v == 0}","ident":"lq_anf$##7205759403792805211","stop":{"line":145,"column":19}},{"start":{"line":145,"column":17},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":145,"column":18}},{"start":{"line":147,"column":5},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == rank t}","ident":"lq_anf$##7205759403792805212","stop":{"line":147,"column":11}},{"start":{"line":147,"column":10},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":147,"column":11}},{"start":{"line":147,"column":14},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == rank t'}","ident":"lq_anf$##7205759403792805213","stop":{"line":147,"column":21}},{"start":{"line":147,"column":19},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t'}","ident":"t'","stop":{"line":147,"column":21}},{"start":{"line":147,"column":24},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":147,"column":25}},{"start":{"line":147,"column":28},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0}","ident":"ds_d2Xz","stop":{"line":147,"column":30}},{"start":{"line":148,"column":24},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Tree a) -> x3:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == size x2 + sumSizeList x3}","ident":"Data.Heap.Binominal.insert'","stop":{"line":148,"column":47}},{"start":{"line":148,"column":32},"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t + size t'}","ident":"lq_anf$##7205759403792805216","stop":{"line":148,"column":43}},{"start":{"line":148,"column":38},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":148,"column":39}},{"start":{"line":148,"column":40},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t'}","ident":"t'","stop":{"line":148,"column":42}},{"start":{"line":148,"column":44},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts'}","ident":"ts'","stop":{"line":148,"column":47}},{"start":{"line":153,"column":1},"ann":"forall a .\nx1:[a] -> {VV : GHC.Types.Int | VV == len x1\n                                && VV >= 0}","ident":"Data.Heap.Binominal.len","stop":{"line":153,"column":4}},{"start":{"line":153,"column":10},"ann":"{v : GHC.Prim.Int# | v == 0}","ident":"lq_anf$##7205759403792805268","stop":{"line":153,"column":11}},{"start":{"line":154,"column":14},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805270","stop":{"line":154,"column":15}},{"start":{"line":154,"column":18},"ann":"{v : GHC.Types.Int | v == len xs\n                     && v >= 0}","ident":"lq_anf$##7205759403792805271","stop":{"line":154,"column":24}},{"start":{"line":154,"column":22},"ann":"{v : [a] | sumSizeList v >= 0\n           && len v >= 0\n           && v == xs}","ident":"xs","stop":{"line":154,"column":24}},{"start":{"line":158,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:[a] -> {v : (Data.Heap.Binominal.Heap a) | heapSize v == len x2}","ident":"Data.Heap.Binominal.fromList","stop":{"line":158,"column":9}},{"start":{"line":158,"column":15},"ann":"forall a . {v : (Data.Heap.Binominal.Heap a) | heapSize v == 0}","ident":"_","stop":{"line":158,"column":20}},{"start":{"line":159,"column":19},"ann":"{v : (GHC.Classes.Ord a) | v == $dOrd_a2Ko}","ident":"$dOrd_a2Ko","stop":{"line":159,"column":41}},{"start":{"line":159,"column":26},"ann":"{VV : a | VV == x}","ident":"x","stop":{"line":159,"column":27}},{"start":{"line":159,"column":28},"ann":"{v : (Data.Heap.Binominal.Heap a) | heapSize v == len xs}","ident":"lq_anf$##7205759403792805258","stop":{"line":159,"column":41}},{"start":{"line":159,"column":38},"ann":"{v : [a] | len v >= 0\n           && sumSizeList v >= 0\n           && v == xs}","ident":"xs","stop":{"line":159,"column":40}},{"start":{"line":201,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\n{VV : (Data.Heap.Binominal.Heap a) | 0 < len (unheap VV)} -> a","ident":"Data.Heap.Binominal.minimum","stop":{"line":201,"column":8}},{"start":{"line":201,"column":11},"ann":"forall a .\nx1:(Data.Heap.Binominal.Tree a) -> {VV : a | VV == root x1}","ident":"_","stop":{"line":201,"column":15}},{"start":{"line":201,"column":18},"ann":"forall a b . x1:(a, b) -> {VV : a | VV == fst x1}","ident":"_","stop":{"line":201,"column":21}},{"start":{"line":201,"column":24},"ann":"x1:{v : [(Data.Heap.Binominal.Tree a)] | 0 < len v} -> {v : ((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | root (fst x15) <= VV})]) | size (fst v) + sumSizeList (snd v) == sumSizeList x1}","ident":"lq_anf$##7205759403792805280","stop":{"line":201,"column":34}},{"start":{"line":201,"column":37},"ann":"forall a .\nx1:{v : (Data.Heap.Binominal.Heap a) | 0 < len (unheap v)} -> {v : [(Data.Heap.Binominal.Tree a)] | 0 < len v\n                                                                                                    && sumSizeList v == heapSize x1}","ident":"_","stop":{"line":201,"column":51}},{"start":{"line":207,"column":1},"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList x1}","ident":"Data.Heap.Binominal.reverseHeapList","stop":{"line":207,"column":16}},{"start":{"line":207,"column":17},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"xs","stop":{"line":207,"column":19}},{"start":{"line":207,"column":41},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == xs}","ident":"xs","stop":{"line":207,"column":43}},{"start":{"line":207,"column":44},"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | len v == 0\n                                            && sumSizeList v == 0}","ident":"_","stop":{"line":207,"column":46}},{"start":{"line":211,"column":1},"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> x2:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList x1 + sumSizeList x2}","ident":"Data.Heap.Binominal.reverseHeapListAux","stop":{"line":211,"column":19}},{"start":{"line":211,"column":23},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"acc","stop":{"line":211,"column":26}},{"start":{"line":211,"column":29},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == acc}","ident":"acc","stop":{"line":211,"column":32}},{"start":{"line":212,"column":33},"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> x2:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList x1 + sumSizeList x2}","ident":"Data.Heap.Binominal.reverseHeapListAux","stop":{"line":212,"column":62}},{"start":{"line":212,"column":52},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == xs}","ident":"xs","stop":{"line":212,"column":54}},{"start":{"line":212,"column":55},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | tail v == acc\n                                      && head v == x\n                                      && len v == 1 + len acc\n                                      && sumSizeList v == size x + sumSizeList acc}","ident":"lq_anf$##7205759403792805273","stop":{"line":212,"column":62}},{"start":{"line":212,"column":56},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == x}","ident":"x","stop":{"line":212,"column":57}},{"start":{"line":212,"column":58},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == acc}","ident":"acc","stop":{"line":212,"column":61}},{"start":{"line":216,"column":1},"ann":"forall a .\nx1:{VV : (Data.Heap.Binominal.Heap a) | 0 < len (unheap VV)} -> {v : [(Data.Heap.Binominal.Tree a)] | 0 < len v\n                                                                                                      && sumSizeList v == heapSize x1}","ident":"Data.Heap.Binominal.unheapNonempty","stop":{"line":216,"column":15}},{"start":{"line":216,"column":34},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts}","ident":"lq_anf$##7205759403792805276","stop":{"line":216,"column":36}},{"start":{"line":220,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:{VV : (Data.Heap.Binominal.Heap a) | 0 < len (unheap VV)} -> {v : (Data.Heap.Binominal.Heap a) | 1 + heapSize v == heapSize x2}","ident":"Data.Heap.Binominal.deleteMin","stop":{"line":220,"column":10}},{"start":{"line":220,"column":11},"ann":"{VV : (Data.Heap.Binominal.Heap a) | 0 < len (unheap VV)}","ident":"h","stop":{"line":220,"column":12}},{"start":{"line":221,"column":31},"ann":"((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | root (fst x9) <= VV})])","ident":"lq_anf$##7205759403792805285","stop":{"line":221,"column":60}},{"start":{"line":221,"column":42},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | 0 < len v\n                                      && sumSizeList v == heapSize h}","ident":"lq_anf$##7205759403792805284","stop":{"line":221,"column":60}},{"start":{"line":221,"column":58},"ann":"{v : (Data.Heap.Binominal.Heap a) | 0 < len (unheap v)\n                                    && heapSize v >= 0\n                                    && v == h}","ident":"h","stop":{"line":221,"column":59}},{"start":{"line":222,"column":8},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"lq_anf$##7205759403792805289","stop":{"line":222,"column":42}},{"start":{"line":222,"column":16},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList ts1}","ident":"lq_anf$##7205759403792805288","stop":{"line":222,"column":37}},{"start":{"line":222,"column":33},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts1}","ident":"ts1","stop":{"line":222,"column":36}},{"start":{"line":222,"column":38},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts2}","ident":"ts2","stop":{"line":222,"column":41}},{"start":{"line":226,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:{VV : (Data.Heap.Binominal.Heap a) | 0 < len (unheap VV)} -> {v : (a, (Data.Heap.Binominal.Heap {VV : a | fst v <= VV})) | 1 + heapSize (snd v) == heapSize x2}","ident":"Data.Heap.Binominal.deleteMin2","stop":{"line":226,"column":11}},{"start":{"line":226,"column":12},"ann":"{VV : (Data.Heap.Binominal.Heap a) | 0 < len (unheap VV)}","ident":"h","stop":{"line":226,"column":13}},{"start":{"line":227,"column":36},"ann":"((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | root (fst x9) <= VV})])","ident":"lq_anf$##7205759403792805291","stop":{"line":227,"column":65}},{"start":{"line":227,"column":47},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | 0 < len v\n                                      && sumSizeList v == heapSize h}","ident":"lq_anf$##7205759403792805290","stop":{"line":227,"column":65}},{"start":{"line":227,"column":63},"ann":"{v : (Data.Heap.Binominal.Heap a) | 0 < len (unheap v)\n                                    && heapSize v >= 0\n                                    && v == h}","ident":"h","stop":{"line":227,"column":64}},{"start":{"line":228,"column":4},"ann":"{VV : a | VV == minElt}","ident":"minElt","stop":{"line":228,"column":10}},{"start":{"line":228,"column":12},"ann":"(Data.Heap.Binominal.Heap a)","ident":"lq_anf$##7205759403792805296","stop":{"line":228,"column":51}},{"start":{"line":228,"column":17},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"lq_anf$##7205759403792805295","stop":{"line":228,"column":51}},{"start":{"line":228,"column":25},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList ts1}","ident":"lq_anf$##7205759403792805294","stop":{"line":228,"column":46}},{"start":{"line":228,"column":42},"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | minElt <= VV})] | len v >= 0\n                                                            && sumSizeList v >= 0\n                                                            && v == ts1}","ident":"ts1","stop":{"line":228,"column":45}},{"start":{"line":228,"column":47},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts2}","ident":"ts2","stop":{"line":228,"column":50}},{"start":{"line":232,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:{v : [(Data.Heap.Binominal.Tree a)] | 0 < len v} -> {v : ((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | root (fst v) <= VV})]) | size (fst v) + sumSizeList (snd v) == sumSizeList x2}","ident":"Data.Heap.Binominal.deleteMin'","stop":{"line":232,"column":11}},{"start":{"line":232,"column":18},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v == 0\n                                      && sumSizeList v == 0}","ident":"lq_anf$##7205759403792805253","stop":{"line":232,"column":25}},{"start":{"line":232,"column":19},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":232,"column":20}},{"start":{"line":232,"column":22},"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | len v == 0\n                                            && sumSizeList v == 0}","ident":"_","stop":{"line":232,"column":24}},{"start":{"line":234,"column":8},"ann":"(Data.Heap.Binominal.Tree a)","ident":"t'","stop":{"line":234,"column":10}},{"start":{"line":234,"column":12},"ann":"{VV : [(Data.Heap.Binominal.Tree {VV : a | root t' <= VV})] | len VV >= 0}","ident":"ts'","stop":{"line":234,"column":15}},{"start":{"line":234,"column":19},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:{v : [(Data.Heap.Binominal.Tree a)] | 0 < len v} -> {v : ((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | root (fst v) <= VV})]) | size (fst v) + sumSizeList (snd v) == sumSizeList x2}","ident":"Data.Heap.Binominal.deleteMin'","stop":{"line":234,"column":32}},{"start":{"line":234,"column":30},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0}","ident":"ds_d2Z0","stop":{"line":234,"column":32}},{"start":{"line":235,"column":7},"ann":"{VV : a | VV == root t}","ident":"x","stop":{"line":235,"column":8}},{"start":{"line":235,"column":11},"ann":"{VV : a | VV == root t}","ident":"_","stop":{"line":235,"column":17}},{"start":{"line":235,"column":16},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":235,"column":17}},{"start":{"line":236,"column":7},"ann":"{VV : a | VV == root t'}","ident":"x'","stop":{"line":236,"column":9}},{"start":{"line":236,"column":12},"ann":"{VV : a | VV == root t'}","ident":"_","stop":{"line":236,"column":19}},{"start":{"line":236,"column":17},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t'}","ident":"t'","stop":{"line":236,"column":19}},{"start":{"line":237,"column":7},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t <= VV}) | size v == size t}","ident":"tBounded","stop":{"line":237,"column":15}},{"start":{"line":237,"column":18},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t <= VV}) | size v == size t}","ident":"_","stop":{"line":237,"column":47}},{"start":{"line":237,"column":46},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":237,"column":47}},{"start":{"line":238,"column":7},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t' <= VV}) | size v == size t'}","ident":"tBounded'","stop":{"line":238,"column":16}},{"start":{"line":238,"column":19},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t' <= VV}) | size v == size t'}","ident":"_","stop":{"line":238,"column":49}},{"start":{"line":238,"column":47},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t'}","ident":"t'","stop":{"line":238,"column":49}},{"start":{"line":239,"column":6},"ann":"{VV : a | VV == root t\n          && VV == x}","ident":"x","stop":{"line":239,"column":7}},{"start":{"line":239,"column":10},"ann":"{VV : a | VV == root t'\n          && VV == x'}","ident":"x'","stop":{"line":239,"column":12}},{"start":{"line":241,"column":9},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x <= VV}) | size v == size tBounded'}","ident":"hd","stop":{"line":241,"column":11}},{"start":{"line":241,"column":14},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x <= VV}) | size v == size tBounded'}","ident":"_","stop":{"line":241,"column":57}},{"start":{"line":241,"column":43},"ann":"{VV : a | VV == root t\n          && VV == x}","ident":"x","stop":{"line":241,"column":44}},{"start":{"line":241,"column":45},"ann":"{VV : a | VV == root t'\n          && VV == x'}","ident":"x'","stop":{"line":241,"column":47}},{"start":{"line":241,"column":48},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t' <= VV}) | size v == size t'\n                                                           && v == tBounded'}","ident":"tBounded'","stop":{"line":241,"column":57}},{"start":{"line":242,"column":9},"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | x <= VV})] | sumSizeList v == sumSizeList ts'}","ident":"tl","stop":{"line":242,"column":11}},{"start":{"line":242,"column":14},"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | x <= VV})] | sumSizeList v == sumSizeList ts'}","ident":"_","stop":{"line":242,"column":55}},{"start":{"line":242,"column":47},"ann":"{VV : a | VV == root t\n          && VV == x}","ident":"x","stop":{"line":242,"column":48}},{"start":{"line":242,"column":49},"ann":"{VV : a | VV == root t'\n          && VV == x'}","ident":"x'","stop":{"line":242,"column":51}},{"start":{"line":242,"column":52},"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | root t' <= VV})] | len v >= 0\n                                                             && sumSizeList v >= 0\n                                                             && v == ts'}","ident":"ts'","stop":{"line":242,"column":55}},{"start":{"line":243,"column":6},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":243,"column":7}},{"start":{"line":243,"column":9},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x <= VV}) | size v == size tBounded'\n                                                     && v == hd}","ident":"hd","stop":{"line":243,"column":11}},{"start":{"line":243,"column":12},"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | x <= VV})] | sumSizeList v == sumSizeList ts'\n                                                       && len v >= 0\n                                                       && sumSizeList v >= 0\n                                                       && v == tl}","ident":"tl","stop":{"line":243,"column":14}},{"start":{"line":245,"column":9},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x' <= VV}) | size v == size tBounded}","ident":"hd","stop":{"line":245,"column":11}},{"start":{"line":245,"column":14},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x' <= VV}) | size v == size tBounded}","ident":"_","stop":{"line":245,"column":56}},{"start":{"line":245,"column":43},"ann":"{VV : a | VV == root t'\n          && VV == x'}","ident":"x'","stop":{"line":245,"column":45}},{"start":{"line":245,"column":46},"ann":"{VV : a | VV == root t\n          && VV == x}","ident":"x","stop":{"line":245,"column":47}},{"start":{"line":245,"column":48},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t <= VV}) | size v == size t\n                                                          && v == tBounded}","ident":"tBounded","stop":{"line":245,"column":56}},{"start":{"line":246,"column":6},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t'}","ident":"t'","stop":{"line":246,"column":8}},{"start":{"line":246,"column":10},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x' <= VV}) | size v == size tBounded\n                                                      && v == hd}","ident":"hd","stop":{"line":246,"column":12}},{"start":{"line":246,"column":13},"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | root t' <= VV})] | len v >= 0\n                                                             && sumSizeList v >= 0\n                                                             && v == ts'}","ident":"ts'","stop":{"line":246,"column":16}},{"start":{"line":259,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Heap a) -> x3:(Data.Heap.Binominal.Heap a) -> {VV : (Data.Heap.Binominal.Heap a) | heapSize VV == heapSize x2 + heapSize x3}","ident":"Data.Heap.Binominal.merge","stop":{"line":259,"column":6}},{"start":{"line":259,"column":31},"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {v : (Data.Heap.Binominal.Heap a) | unheap v == x1\n                                                                         && heapSize v == sumSizeList x1}","ident":"Data.Heap.Binominal.Heap","stop":{"line":259,"column":52}},{"start":{"line":259,"column":36},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList ts1 + sumSizeList ts2}","ident":"lq_anf$##7205759403792805245","stop":{"line":259,"column":52}},{"start":{"line":259,"column":44},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts1}","ident":"ts1","stop":{"line":259,"column":47}},{"start":{"line":259,"column":48},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts2}","ident":"ts2","stop":{"line":259,"column":51}},{"start":{"line":263,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:[(Data.Heap.Binominal.Tree a)] -> x3:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList x2 + sumSizeList x3}","ident":"Data.Heap.Binominal.merge'","stop":{"line":263,"column":7}},{"start":{"line":263,"column":8},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"ts1","stop":{"line":263,"column":11}},{"start":{"line":263,"column":17},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts1}","ident":"ts1","stop":{"line":263,"column":20}},{"start":{"line":264,"column":17},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0}","ident":"ds_d2XV","stop":{"line":264,"column":20}},{"start":{"line":266,"column":5},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == rank t1}","ident":"lq_anf$##7205759403792805229","stop":{"line":266,"column":12}},{"start":{"line":266,"column":10},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1}","ident":"t1","stop":{"line":266,"column":12}},{"start":{"line":266,"column":15},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == rank t2}","ident":"lq_anf$##7205759403792805230","stop":{"line":266,"column":22}},{"start":{"line":266,"column":20},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2}","ident":"t2","stop":{"line":266,"column":22}},{"start":{"line":266,"column":25},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1}","ident":"t1","stop":{"line":266,"column":27}},{"start":{"line":266,"column":30},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"lq_anf$##7205759403792805240","stop":{"line":266,"column":45}},{"start":{"line":266,"column":37},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts1'}","ident":"ts1'","stop":{"line":266,"column":41}},{"start":{"line":266,"column":42},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0}","ident":"ds_d2XV","stop":{"line":266,"column":45}},{"start":{"line":267,"column":5},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == rank t2}","ident":"lq_anf$##7205759403792805233","stop":{"line":267,"column":12}},{"start":{"line":267,"column":10},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2}","ident":"t2","stop":{"line":267,"column":12}},{"start":{"line":267,"column":15},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == rank t1}","ident":"lq_anf$##7205759403792805234","stop":{"line":267,"column":22}},{"start":{"line":267,"column":20},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1}","ident":"t1","stop":{"line":267,"column":22}},{"start":{"line":267,"column":25},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2}","ident":"t2","stop":{"line":267,"column":27}},{"start":{"line":267,"column":30},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList ts1 + sumSizeList ts2'}","ident":"lq_anf$##7205759403792805239","stop":{"line":267,"column":45}},{"start":{"line":267,"column":37},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts1}","ident":"ts1","stop":{"line":267,"column":40}},{"start":{"line":267,"column":41},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts2'}","ident":"ts2'","stop":{"line":267,"column":45}},{"start":{"line":268,"column":25},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Tree a) -> x3:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == size x2 + sumSizeList x3}","ident":"Data.Heap.Binominal.insert'","stop":{"line":268,"column":64}},{"start":{"line":268,"column":33},"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t1 + size t2}","ident":"lq_anf$##7205759403792805237","stop":{"line":268,"column":45}},{"start":{"line":268,"column":39},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1}","ident":"t1","stop":{"line":268,"column":41}},{"start":{"line":268,"column":42},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2}","ident":"t2","stop":{"line":268,"column":44}},{"start":{"line":268,"column":46},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList ts1' + sumSizeList ts2'}","ident":"lq_anf$##7205759403792805238","stop":{"line":268,"column":64}},{"start":{"line":268,"column":54},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts1'}","ident":"ts1'","stop":{"line":268,"column":58}},{"start":{"line":268,"column":59},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts2'}","ident":"ts2'","stop":{"line":268,"column":63}},{"start":{"line":282,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Heap a) -> {v : [a] | len v == heapSize x2}","ident":"Data.Heap.Binominal.heapSort","stop":{"line":282,"column":9}},{"start":{"line":282,"column":22},"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | len v == 0\n                                            && sumSizeList v == 0}","ident":"_","stop":{"line":282,"column":24}},{"start":{"line":284,"column":8},"ann":"a","ident":"minElt","stop":{"line":284,"column":14}},{"start":{"line":284,"column":16},"ann":"(Data.Heap.Binominal.Heap a)","ident":"h'","stop":{"line":284,"column":18}},{"start":{"line":284,"column":22},"ann":"(a, (Data.Heap.Binominal.Heap {VV : a | fst x4 <= VV}))","ident":"_","stop":{"line":284,"column":34}},{"start":{"line":284,"column":33},"ann":"{v : (Data.Heap.Binominal.Heap a) | heapSize v >= 0}","ident":"ds_d2ZP","stop":{"line":284,"column":34}},{"start":{"line":285,"column":3},"ann":"{VV : a | VV == minElt}","ident":"minElt","stop":{"line":285,"column":9}},{"start":{"line":285,"column":12},"ann":"{v : [a] | len v == heapSize h'}","ident":"lq_anf$##7205759403792805299","stop":{"line":285,"column":23}},{"start":{"line":285,"column":21},"ann":"{v : (Data.Heap.Binominal.Heap a) | heapSize v >= 0\n                                    && v == h'}","ident":"h'","stop":{"line":285,"column":23}}],"errors":[]}