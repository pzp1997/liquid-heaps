{"status":"safe","types":{"114":{"14":{"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | len v == 0\n                                            && sumSizeList v == 0}","ident":"_","row":114,"col":14},"1":{"ann":"forall a . {v : (Data.Heap.Binominal.Heap a) | heapSize v == 0}","ident":"Data.Heap.Binominal.empty","row":114,"col":1}},"235":{"7":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t <= VV}) | size v == size t}","ident":"tBounded","row":235,"col":7},"18":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t <= VV}) | size v == size t}","ident":"_","row":235,"col":18},"46":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":235,"col":46}},"217":{"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:{VV : (Data.Heap.Binominal.Heap a) | 0 < heapSize VV} -> {v : (Data.Heap.Binominal.Heap a) | 1 + heapSize v == heapSize x2}","ident":"Data.Heap.Binominal.deleteMin","row":217,"col":1},"11":{"ann":"{VV : (Data.Heap.Binominal.Heap a) | 0 < heapSize VV}","ident":"h","row":217,"col":11}},"48":{"1":{"ann":"forall a .\nx1:(Data.Heap.Binominal.Heap a) -> {VV : GHC.Types.Int | VV == heapSize x1\n                                                         && VV >= 0}","ident":"Data.Heap.Binominal.heapSize","row":48,"col":1},"10":{"ann":"(Data.Heap.Binominal.Heap a)","ident":"h","row":48,"col":10}},"271":{"17":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts1}","ident":"ts1","row":271,"col":17},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:[(Data.Heap.Binominal.Tree a)] -> x3:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList x2 + sumSizeList x3}","ident":"Data.Heap.Binominal.merge'","row":271,"col":1},"8":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"ts1","row":271,"col":8}},"106":{"14":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805044","row":106,"col":14},"17":{"ann":"a","ident":"ds_d2VF","row":106,"col":17},"35":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0}","ident":"ds_d2VG","row":106,"col":35},"40":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805047","row":106,"col":40},"20":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | head v == t2BoundedByX1}","ident":"lq_anf$##7205759403792805046","row":106,"col":20},"41":{"ann":"{v : GHC.Types.Int | 1 <= v}","ident":"ds_d2VH","row":106,"col":41},"11":{"ann":"{v : GHC.Types.Int | v >= 0}","ident":"ds_d2VE","row":106,"col":11},"47":{"ann":"{v : GHC.Types.Int | 1 <= v}","ident":"ds_d2VL","row":106,"col":47},"21":{"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t2BoundedByX2\n                                    && v == t2BoundedByX1}","ident":"t2BoundedByX1","row":106,"col":21},"10":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805045","row":106,"col":10}},"241":{"23":{"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | x <= VV})] | sumSizeList v == sumSizeList ts'\n                                                       && len v >= 0\n                                                       && sumSizeList v >= 0\n                                                       && v == tsBoundedByX}","ident":"tsBoundedByX","row":241,"col":23},"6":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":241,"col":6},"9":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x <= VV}) | size v == size tBounded'\n                                                     && v == tBoundedByX}","ident":"tBoundedByX","row":241,"col":9}},"43":{"43":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && v == xs}","ident":"xs","row":43,"col":43},"31":{"ann":"{v : GHC.Types.Int | v == sumSizeList xs\n                     && v >= 0}","ident":"lq_anf$##7205759403792805028","row":43,"col":31},"22":{"ann":"{v : GHC.Types.Int | 1 <= v\n                     && v == 1 + sumSizeList (subtrees x)\n                     && v == size x}","ident":"lq_anf$##7205759403792805027","row":43,"col":22},"27":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == x}","ident":"x","row":43,"col":27}},"208":{"29":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == acc}","ident":"acc","row":208,"col":29},"1":{"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> x2:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList x1 + sumSizeList x2}","ident":"Data.Heap.Binominal.reverseHeapListAux","row":208,"col":1},"23":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"acc","row":208,"col":23}},"233":{"7":{"ann":"{VV : a | VV == root t'}","ident":"x'","row":233,"col":7},"12":{"ann":"{VV : a | VV == root t'}","ident":"_","row":233,"col":12},"17":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == fst acc\n                                    && v == t'}","ident":"t'","row":233,"col":17}},"49":{"8":{"ann":"{v : (Data.Heap.Binominal.Heap a) | v == h}","ident":"_","row":49,"col":8}},"85":{"30":{"ann":"a","ident":"x","row":85,"col":30},"1":{"ann":"forall a .\nx1:a -> x2:{VV : a | x1 <= VV} -> x3:(Data.Heap.Binominal.Tree {VV : a | x2 <= VV}) -> {VV : (Data.Heap.Binominal.Tree {VV : a | x1 <= VV}) | size VV == size x3}","ident":"Data.Heap.Binominal.boundedTreeTransitivityLemma","row":85,"col":1},"34":{"ann":"(Data.Heap.Binominal.Tree {VV : a | y <= VV})","ident":"tree","row":85,"col":34},"32":{"ann":"{VV : a | x <= VV}","ident":"y","row":85,"col":32}},"151":{"15":{"ann":"forall a . {v : (Data.Heap.Binominal.Heap a) | heapSize v == 0}","ident":"_","row":151,"col":15},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:[a] -> {v : (Data.Heap.Binominal.Heap a) | heapSize v == len x2}","ident":"Data.Heap.Binominal.fromList","row":151,"col":1}},"50":{"28":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts}","ident":"ts","row":50,"col":28},"16":{"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {VV : GHC.Types.Int | VV == sumSizeList x1\n                                                           && VV >= 0}","ident":"Data.Heap.Binominal.sumSizeList","row":50,"col":16}},"234":{"7":{"ann":"{VV : a | VV == root t}","ident":"x","row":234,"col":7},"16":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":234,"col":16},"11":{"ann":"{VV : a | VV == root t}","ident":"_","row":234,"col":11}},"118":{"19":{"ann":"{v : (Data.Heap.Binominal.Heap a) | heapSize v >= 0\n                                    && v == h}","ident":"h","row":118,"col":19},"1":{"ann":"forall a .\nx1:(Data.Heap.Binominal.Heap a) -> {v : GHC.Types.Bool | v <=> heapSize x1 == 0}","ident":"Data.Heap.Binominal.null","row":118,"col":1},"24":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805032","row":118,"col":24},"6":{"ann":"(Data.Heap.Binominal.Heap a)","ident":"h","row":118,"col":6},"10":{"ann":"{v : GHC.Types.Int | v == heapSize h\n                     && v >= 0}","ident":"lq_anf$##7205759403792805030","row":118,"col":10}},"239":{"57":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t' <= VV}) | size v == size t'\n                                                           && v == tBounded'}","ident":"tBounded'","row":239,"col":57},"23":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x <= VV}) | size v == size tBounded'}","ident":"_","row":239,"col":23},"52":{"ann":"{VV : a | VV == root t\n          && VV == x}","ident":"x","row":239,"col":52},"9":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x <= VV}) | size v == size tBounded'}","ident":"tBoundedByX","row":239,"col":9},"54":{"ann":"{VV : a | VV == root t'\n          && VV == x'}","ident":"x'","row":239,"col":54}},"232":{"7":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && v == snd acc}","ident":"ts'","row":232,"col":7},"13":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && v == snd acc}","ident":"_","row":232,"col":13},"17":{"ann":"{v : ((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | root (fst x10) <= VV})]) | v == acc}","ident":"acc","row":232,"col":17}},"209":{"56":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == x}","ident":"x","row":209,"col":56},"52":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == xs}","ident":"xs","row":209,"col":52},"58":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == acc}","ident":"acc","row":209,"col":58},"55":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | tail v == acc\n                                      && head v == x\n                                      && len v == 1 + len acc\n                                      && sumSizeList v == size x + sumSizeList acc}","ident":"lq_anf$##7205759403792805111","row":209,"col":55},"33":{"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> x2:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList x1 + sumSizeList x2}","ident":"Data.Heap.Binominal.reverseHeapListAux","row":209,"col":33}},"276":{"25":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Tree a) -> x3:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == size x2 + sumSizeList x3}","ident":"Data.Heap.Binominal.insert'","row":276,"col":25},"59":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts2'}","ident":"ts2'","row":276,"col":59},"39":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1}","ident":"t1","row":276,"col":39},"46":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList ts1' + sumSizeList ts2'}","ident":"lq_anf$##7205759403792805076","row":276,"col":46},"33":{"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t1 + size t2}","ident":"lq_anf$##7205759403792805075","row":276,"col":33},"42":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2}","ident":"t2","row":276,"col":42},"54":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts1'}","ident":"ts1'","row":276,"col":54}},"254":{"1":{"ann":"forall a b .\nx1:a -> [(Data.Heap.Binominal.Tree {VV : a | x1 <= VV})] -> b -> b","ident":"Data.Heap.Binominal.assertBoundedTreeList","row":254,"col":1},"27":{"ann":"a","ident":"x","row":254,"col":27}},"152":{"28":{"ann":"{v : (Data.Heap.Binominal.Heap a) | heapSize v == len xs}","ident":"lq_anf$##7205759403792805096","row":152,"col":28},"19":{"ann":"{v : (GHC.Classes.Ord a) | v == $dOrd_a2JY}","ident":"$dOrd_a2JY","row":152,"col":19},"26":{"ann":"{VV : a | VV == x}","ident":"x","row":152,"col":26},"38":{"ann":"{v : [a] | len v >= 0\n           && sumSizeList v >= 0\n           && v == xs}","ident":"xs","row":152,"col":38}},"237":{"6":{"ann":"{VV : a | VV == root t\n          && VV == x}","ident":"x","row":237,"col":6},"10":{"ann":"{VV : a | VV == root t'\n          && VV == x'}","ident":"x'","row":237,"col":10}},"134":{"36":{"ann":"{v : (Data.Heap.Binominal.Tree a) | root v == x}","ident":"lq_anf$##7205759403792805061","row":134,"col":36},"49":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805060","row":134,"col":49},"22":{"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {v : (Data.Heap.Binominal.Heap a) | unheap v == x1\n                                                                         && heapSize v == sumSizeList x1}","ident":"Data.Heap.Binominal.Heap","row":134,"col":22},"44":{"ann":"{VV : a | VV == x}","ident":"x","row":134,"col":44},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\na -> x3:(Data.Heap.Binominal.Heap a) -> {v : (Data.Heap.Binominal.Heap a) | 1 + heapSize x3 == heapSize v}","ident":"Data.Heap.Binominal.insert","row":134,"col":1},"52":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts}","ident":"ts","row":134,"col":52},"46":{"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | len v == 0\n                                            && sumSizeList v == 0}","ident":"_","row":134,"col":46},"27":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"lq_anf$##7205759403792805062","row":134,"col":27},"8":{"ann":"a","ident":"x","row":134,"col":8},"42":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805057","row":134,"col":42}},"89":{"36":{"ann":"{VV : a | x <= VV}","ident":"y","row":89,"col":36},"1":{"ann":"forall a .\nx1:a -> x2:{VV : a | x1 <= VV} -> x3:[(Data.Heap.Binominal.Tree {VV : a | x2 <= VV})] -> {v : [(Data.Heap.Binominal.Tree {VV : a | x1 <= VV})] | sumSizeList v == sumSizeList x3}","ident":"Data.Heap.Binominal.boundedTreeListTransitivityLemma","row":89,"col":1},"34":{"ann":"a","ident":"x","row":89,"col":34},"38":{"ann":"[(Data.Heap.Binominal.Tree {VV : a | y <= VV})]","ident":"ts","row":89,"col":38}},"1":{"1":{"ann":"GHC.Types.Module","ident":"Data.Heap.Binominal.$trModule","row":1,"col":1}},"122":{"28":{"ann":"{VV : a | VV == x}","ident":"x","row":122,"col":28},"30":{"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | len v == 0\n                                            && sumSizeList v == 0}","ident":"_","row":122,"col":30},"1":{"ann":"forall a .\na -> {v : (Data.Heap.Binominal.Heap a) | heapSize v == 1}","ident":"Data.Heap.Binominal.singleton","row":122,"col":1},"26":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805098","row":122,"col":26},"20":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"lq_anf$##7205759403792805104","row":122,"col":20},"11":{"ann":"a","ident":"x","row":122,"col":11},"33":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805101","row":122,"col":33},"21":{"ann":"{v : (Data.Heap.Binominal.Tree a) | root v == x}","ident":"lq_anf$##7205759403792805102","row":122,"col":21}},"141":{"44":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts'}","ident":"ts'","row":141,"col":44},"40":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t'}","ident":"t'","row":141,"col":40},"38":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":141,"col":38},"24":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Tree a) -> x3:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == size x2 + sumSizeList x3}","ident":"Data.Heap.Binominal.insert'","row":141,"col":24},"32":{"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t + size t'}","ident":"lq_anf$##7205759403792805054","row":141,"col":32}},"105":{"25":{"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t2BoundedByX2}","ident":"_","row":105,"col":25},"57":{"ann":"a","ident":"ds_d2VJ","row":105,"col":57},"60":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2BoundedByX2}","ident":"t2BoundedByX2","row":105,"col":60},"9":{"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t2BoundedByX2}","ident":"t2BoundedByX1","row":105,"col":9},"54":{"ann":"a","ident":"ds_d2VF","row":105,"col":54}},"236":{"7":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t' <= VV}) | size v == size t'}","ident":"tBounded'","row":236,"col":7},"19":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t' <= VV}) | size v == size t'}","ident":"_","row":236,"col":19},"47":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == fst acc\n                                    && v == t'}","ident":"t'","row":236,"col":47}},"272":{"17":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0}","ident":"ds_d2Wa","row":272,"col":17}},"250":{"1":{"ann":"forall a b .\nx1:a -> (Data.Heap.Binominal.Tree {VV : a | x1 <= VV}) -> b -> b","ident":"Data.Heap.Binominal.assertBoundedTree","row":250,"col":1},"23":{"ann":"a","ident":"x","row":250,"col":23}},"103":{"5":{"ann":"a","ident":"ds_d2VF","row":103,"col":5},"11":{"ann":"a","ident":"ds_d2VJ","row":103,"col":11}},"219":{"16":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList ts1}","ident":"lq_anf$##7205759403792805126","row":219,"col":16},"8":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"lq_anf$##7205759403792805127","row":219,"col":8},"33":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts1}","ident":"ts1","row":219,"col":33},"38":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts2}","ident":"ts2","row":219,"col":38}},"147":{"14":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805108","row":147,"col":14},"22":{"ann":"{v : [a] | len v >= 0\n           && sumSizeList v >= 0\n           && v == xs}","ident":"xs","row":147,"col":22},"18":{"ann":"{v : GHC.Types.Int | v == len xs\n                     && v >= 0}","ident":"lq_anf$##7205759403792805109","row":147,"col":18}},"244":{"56":{"ann":"{VV : a | VV == root t\n          && VV == x}","ident":"x","row":244,"col":56},"53":{"ann":"{VV : a | VV == root t'\n          && VV == x'}","ident":"x'","row":244,"col":53},"58":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t <= VV}) | size v == size t\n                                                          && v == tBounded}","ident":"tBounded","row":244,"col":58},"24":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x' <= VV}) | size v == size tBounded}","ident":"_","row":244,"col":24},"9":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x' <= VV}) | size v == size tBounded}","ident":"tBoundedByX'","row":244,"col":9}},"138":{"17":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":138,"col":17},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Tree a) -> x3:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == size x2 + sumSizeList x3}","ident":"Data.Heap.Binominal.insert'","row":138,"col":1},"16":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v == 0\n                                      && sumSizeList v == 0}","ident":"lq_anf$##7205759403792805049","row":138,"col":16},"9":{"ann":"(Data.Heap.Binominal.Tree a)","ident":"t","row":138,"col":9}},"104":{"25":{"ann":"(Data.Heap.Binominal.Tree a)","ident":"_","row":104,"col":25},"53":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2}","ident":"lq_anf$##7205759403792805035","row":104,"col":53},"9":{"ann":"(Data.Heap.Binominal.Tree a)","ident":"t2BoundedByX2","row":104,"col":9}},"140":{"28":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0}","ident":"ds_d2VO","row":140,"col":28},"14":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == rank t'}","ident":"lq_anf$##7205759403792805051","row":140,"col":14},"19":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t'}","ident":"t'","row":140,"col":19},"5":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == rank t}","ident":"lq_anf$##7205759403792805050","row":140,"col":5},"24":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":140,"col":24},"10":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":140,"col":10}},"80":{"43":{"ann":"{v : GHC.Types.Int | 1 <= v}","ident":"ds_d2Vh","row":80,"col":43},"14":{"ann":"{v : GHC.Types.Int | v >= 0}","ident":"ds_d2Ve","row":80,"col":14},"22":{"ann":"a","ident":"ds_d2Vf","row":80,"col":22},"34":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0}","ident":"ds_d2Vg","row":80,"col":34},"3":{"ann":"forall a .\nx1:{v : GHC.Types.Int | v >= 0} -> x2:a -> x3:[(Data.Heap.Binominal.Tree {VV : a | x2 <= VV})] -> x4:{v : GHC.Types.Int | 1 <= v\n                                                                                                                          && v == 1 + sumSizeList x3} -> {v : (Data.Heap.Binominal.Tree a) | size v == x4\n                                                                                                                                                                                             && subtrees v == x3\n                                                                                                                                                                                             && root v == x2\n                                                                                                                                                                                             && rank v == x1}","ident":"Data.Heap.Binominal.Node","row":80,"col":3}},"109":{"25":{"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t1BoundedByX1}","ident":"_","row":109,"col":25},"57":{"ann":"a","ident":"ds_d2VF","row":109,"col":57},"60":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1BoundedByX1}","ident":"t1BoundedByX1","row":109,"col":60},"9":{"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t1BoundedByX1}","ident":"t1BoundedByX2","row":109,"col":9},"54":{"ann":"a","ident":"ds_d2VJ","row":109,"col":54}},"110":{"14":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805039","row":110,"col":14},"17":{"ann":"a","ident":"ds_d2VJ","row":110,"col":17},"35":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0}","ident":"ds_d2VK","row":110,"col":35},"40":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805042","row":110,"col":40},"20":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | head v == t1BoundedByX2}","ident":"lq_anf$##7205759403792805041","row":110,"col":20},"41":{"ann":"{v : GHC.Types.Int | 1 <= v}","ident":"ds_d2VH","row":110,"col":41},"11":{"ann":"{v : GHC.Types.Int | v >= 0}","ident":"ds_d2VI","row":110,"col":11},"47":{"ann":"{v : GHC.Types.Int | 1 <= v}","ident":"ds_d2VL","row":110,"col":47},"21":{"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t1BoundedByX1\n                                    && v == t1BoundedByX2}","ident":"t1BoundedByX2","row":110,"col":21},"10":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805040","row":110,"col":10}},"231":{"7":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == fst acc}","ident":"t'","row":231,"col":7},"12":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == fst acc}","ident":"_","row":231,"col":12},"16":{"ann":"{v : ((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | root (fst x10) <= VV})]) | v == acc}","ident":"acc","row":231,"col":16}},"213":{"1":{"ann":"forall a .\nx1:{VV : (Data.Heap.Binominal.Heap a) | 0 < heapSize VV} -> {v : [(Data.Heap.Binominal.Tree a)] | 0 < len v\n                                                                                                  && sumSizeList v == heapSize x1}","ident":"Data.Heap.Binominal.unheapNonempty","row":213,"col":1},"34":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts}","ident":"lq_anf$##7205759403792805114","row":213,"col":34}},"228":{"22":{"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | len v == 0\n                                            && sumSizeList v == 0}","ident":"_","row":228,"col":22},"19":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":228,"col":19},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:{v : [(Data.Heap.Binominal.Tree a)] | 0 < len v} -> {v : ((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | root (fst v) <= VV})]) | size (fst v) + sumSizeList (snd v) == sumSizeList x2}","ident":"Data.Heap.Binominal.deleteMin'","row":228,"col":1},"18":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v == 0\n                                      && sumSizeList v == 0}","ident":"lq_anf$##7205759403792805091","row":228,"col":18}},"275":{"15":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == rank t1}","ident":"lq_anf$##7205759403792805072","row":275,"col":15},"37":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts1}","ident":"ts1","row":275,"col":37},"25":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2}","ident":"t2","row":275,"col":25},"30":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList ts1 + sumSizeList ts2'}","ident":"lq_anf$##7205759403792805077","row":275,"col":30},"20":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1}","ident":"t1","row":275,"col":20},"5":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == rank t2}","ident":"lq_anf$##7205759403792805071","row":275,"col":5},"41":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts2'}","ident":"ts2'","row":275,"col":41},"10":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2}","ident":"t2","row":275,"col":10}},"146":{"1":{"ann":"forall a .\nx1:[a] -> {VV : GHC.Types.Int | VV == len x1\n                                && VV >= 0}","ident":"Data.Heap.Binominal.len","row":146,"col":1},"10":{"ann":"{v : GHC.Prim.Int# | v == 0}","ident":"lq_anf$##7205759403792805106","row":146,"col":10}},"245":{"25":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && v == snd acc\n                                      && sumSizeList v >= 0\n                                      && v == ts'}","ident":"ts'","row":245,"col":25},"6":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == fst acc\n                                    && v == t'}","ident":"t'","row":245,"col":6},"10":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x' <= VV}) | size v == size tBounded\n                                                      && v == tBoundedByX'}","ident":"tBoundedByX'","row":245,"col":10}},"223":{"25":{"ann":"{v : (Data.Heap.Binominal.Heap a) | 0 < heapSize v\n                                    && heapSize v >= 0\n                                    && v == h}","ident":"h","row":223,"col":25},"28":{"ann":"{v : (Data.Heap.Binominal.Heap a) | 1 + heapSize v == heapSize h}","ident":"lq_anf$##7205759403792805129","row":223,"col":28},"12":{"ann":"{VV : (Data.Heap.Binominal.Heap a) | 0 < heapSize VV}","ident":"h","row":223,"col":12},"17":{"ann":"a","ident":"lq_anf$##7205759403792805128","row":223,"col":17},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:{VV : (Data.Heap.Binominal.Heap a) | 0 < heapSize VV} -> {v : (a, (Data.Heap.Binominal.Heap a)) | 1 + heapSize (snd v) == heapSize x2}","ident":"Data.Heap.Binominal.deleteMin2","row":223,"col":1},"38":{"ann":"{v : (Data.Heap.Binominal.Heap a) | 0 < heapSize v\n                                    && heapSize v >= 0\n                                    && v == h}","ident":"h","row":223,"col":38}},"267":{"48":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts2}","ident":"ts2","row":267,"col":48},"31":{"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {v : (Data.Heap.Binominal.Heap a) | unheap v == x1\n                                                                         && heapSize v == sumSizeList x1}","ident":"Data.Heap.Binominal.Heap","row":267,"col":31},"36":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList ts1 + sumSizeList ts2}","ident":"lq_anf$##7205759403792805083","row":267,"col":36},"44":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts1}","ident":"ts1","row":267,"col":44},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Heap a) -> x3:(Data.Heap.Binominal.Heap a) -> {VV : (Data.Heap.Binominal.Heap a) | heapSize VV == heapSize x2 + heapSize x3}","ident":"Data.Heap.Binominal.merge","row":267,"col":1}},"102":{"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Tree a) -> x3:(Data.Heap.Binominal.Tree a) -> {v : (Data.Heap.Binominal.Tree a) | size v == size x2 + size x3}","ident":"Data.Heap.Binominal.link","row":102,"col":1},"59":{"ann":"(Data.Heap.Binominal.Tree a)","ident":"t2","row":102,"col":59},"6":{"ann":"(Data.Heap.Binominal.Tree a)","ident":"t1","row":102,"col":6}},"218":{"31":{"ann":"((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | root (fst x9) <= VV})])","ident":"lq_anf$##7205759403792805123","row":218,"col":31},"58":{"ann":"{v : (Data.Heap.Binominal.Heap a) | 0 < heapSize v\n                                    && heapSize v >= 0\n                                    && v == h}","ident":"h","row":218,"col":58},"42":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | 0 < len v\n                                      && sumSizeList v == heapSize h}","ident":"lq_anf$##7205759403792805122","row":218,"col":42}},"79":{"1":{"ann":"forall a .\nx1:(Data.Heap.Binominal.Tree a) -> {VV : (Data.Heap.Binominal.Tree {VV : a | root x1 <= VV}) | size VV == size x1}","ident":"Data.Heap.Binominal.treeIsBoundedByItsRootLemma","row":79,"col":1}},"240":{"57":{"ann":"{VV : a | VV == root t\n          && VV == x}","ident":"x","row":240,"col":57},"62":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && v == snd acc\n                                      && sumSizeList v >= 0\n                                      && v == ts'}","ident":"ts'","row":240,"col":62},"59":{"ann":"{VV : a | VV == root t'\n          && VV == x'}","ident":"x'","row":240,"col":59},"24":{"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | x <= VV})] | sumSizeList v == sumSizeList ts'}","ident":"_","row":240,"col":24},"9":{"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | x <= VV})] | sumSizeList v == sumSizeList ts'}","ident":"tsBoundedByX","row":240,"col":9}},"42":{"1":{"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {VV : GHC.Types.Int | VV == sumSizeList x1\n                                                           && VV >= 0}","ident":"Data.Heap.Binominal.sumSizeList","row":42,"col":1},"18":{"ann":"{v : GHC.Prim.Int# | v == 0}","ident":"lq_anf$##7205759403792805026","row":42,"col":18}},"204":{"44":{"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | len v == 0\n                                            && sumSizeList v == 0}","ident":"_","row":204,"col":44},"17":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"xs","row":204,"col":17},"1":{"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList x1}","ident":"Data.Heap.Binominal.reverseHeapList","row":204,"col":1},"41":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == xs}","ident":"xs","row":204,"col":41}},"196":{"37":{"ann":"forall a .\nx1:{v : (Data.Heap.Binominal.Heap a) | 0 < heapSize v} -> {v : [(Data.Heap.Binominal.Tree a)] | 0 < len v\n                                                                                                && sumSizeList v == heapSize x1}","ident":"_","row":196,"col":37},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\n{VV : (Data.Heap.Binominal.Heap a) | 0 < heapSize VV} -> a","ident":"Data.Heap.Binominal.minimum","row":196,"col":1},"18":{"ann":"forall a b . x1:(a, b) -> {VV : a | VV == fst x1}","ident":"_","row":196,"col":18},"11":{"ann":"forall a .\nx1:(Data.Heap.Binominal.Tree a) -> {VV : a | VV == root x1}","ident":"_","row":196,"col":11},"24":{"ann":"x1:{v : [(Data.Heap.Binominal.Tree a)] | 0 < len v} -> {v : ((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | root (fst x15) <= VV})]) | size (fst v) + sumSizeList (snd v) == sumSizeList x1}","ident":"lq_anf$##7205759403792805118","row":196,"col":24}},"230":{"7":{"ann":"((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | root (fst x9) <= VV})])","ident":"acc","row":230,"col":7},"13":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:{v : [(Data.Heap.Binominal.Tree a)] | 0 < len v} -> {v : ((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | root (fst v) <= VV})]) | size (fst v) + sumSizeList (snd v) == sumSizeList x2}","ident":"Data.Heap.Binominal.deleteMin'","row":230,"col":13},"24":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0}","ident":"ds_d2X8","row":230,"col":24}},"274":{"15":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == rank t2}","ident":"lq_anf$##7205759403792805068","row":274,"col":15},"37":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts1'}","ident":"ts1'","row":274,"col":37},"25":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1}","ident":"t1","row":274,"col":25},"30":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"lq_anf$##7205759403792805078","row":274,"col":30},"20":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2}","ident":"t2","row":274,"col":20},"5":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == rank t1}","ident":"lq_anf$##7205759403792805067","row":274,"col":5},"42":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0}","ident":"ds_d2Wa","row":274,"col":42},"10":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1}","ident":"t1","row":274,"col":10}},"98":{"1":{"ann":"forall a . {v : GHC.Types.Bool | v} -> a -> a","ident":"Data.Heap.Binominal.assert","row":98,"col":1},"10":{"ann":"a","ident":"x","row":98,"col":10}},"108":{"25":{"ann":"(Data.Heap.Binominal.Tree a)","ident":"_","row":108,"col":25},"53":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1}","ident":"lq_anf$##7205759403792805034","row":108,"col":53},"9":{"ann":"(Data.Heap.Binominal.Tree a)","ident":"t1BoundedByX1","row":108,"col":9}}},"sptypes":[{"start":{"line":1,"column":1},"ann":"GHC.Types.Module","ident":"Data.Heap.Binominal.$trModule","stop":{"line":1,"column":1}},{"start":{"line":42,"column":1},"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {VV : GHC.Types.Int | VV == sumSizeList x1\n                                                           && VV >= 0}","ident":"Data.Heap.Binominal.sumSizeList","stop":{"line":42,"column":12}},{"start":{"line":42,"column":18},"ann":"{v : GHC.Prim.Int# | v == 0}","ident":"lq_anf$##7205759403792805026","stop":{"line":42,"column":19}},{"start":{"line":43,"column":22},"ann":"{v : GHC.Types.Int | 1 <= v\n                     && v == 1 + sumSizeList (subtrees x)\n                     && v == size x}","ident":"lq_anf$##7205759403792805027","stop":{"line":43,"column":28}},{"start":{"line":43,"column":27},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == x}","ident":"x","stop":{"line":43,"column":28}},{"start":{"line":43,"column":31},"ann":"{v : GHC.Types.Int | v == sumSizeList xs\n                     && v >= 0}","ident":"lq_anf$##7205759403792805028","stop":{"line":43,"column":45}},{"start":{"line":43,"column":43},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && v == xs}","ident":"xs","stop":{"line":43,"column":45}},{"start":{"line":48,"column":1},"ann":"forall a .\nx1:(Data.Heap.Binominal.Heap a) -> {VV : GHC.Types.Int | VV == heapSize x1\n                                                         && VV >= 0}","ident":"Data.Heap.Binominal.heapSize","stop":{"line":48,"column":9}},{"start":{"line":48,"column":10},"ann":"(Data.Heap.Binominal.Heap a)","ident":"h","stop":{"line":48,"column":11}},{"start":{"line":49,"column":8},"ann":"{v : (Data.Heap.Binominal.Heap a) | v == h}","ident":"_","stop":{"line":49,"column":9}},{"start":{"line":50,"column":16},"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {VV : GHC.Types.Int | VV == sumSizeList x1\n                                                           && VV >= 0}","ident":"Data.Heap.Binominal.sumSizeList","stop":{"line":50,"column":30}},{"start":{"line":50,"column":28},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts}","ident":"ts","stop":{"line":50,"column":30}},{"start":{"line":79,"column":1},"ann":"forall a .\nx1:(Data.Heap.Binominal.Tree a) -> {VV : (Data.Heap.Binominal.Tree {VV : a | root x1 <= VV}) | size VV == size x1}","ident":"Data.Heap.Binominal.treeIsBoundedByItsRootLemma","stop":{"line":79,"column":28}},{"start":{"line":80,"column":3},"ann":"forall a .\nx1:{v : GHC.Types.Int | v >= 0} -> x2:a -> x3:[(Data.Heap.Binominal.Tree {VV : a | x2 <= VV})] -> x4:{v : GHC.Types.Int | 1 <= v\n                                                                                                                          && v == 1 + sumSizeList x3} -> {v : (Data.Heap.Binominal.Tree a) | size v == x4\n                                                                                                                                                                                             && subtrees v == x3\n                                                                                                                                                                                             && root v == x2\n                                                                                                                                                                                             && rank v == x1}","ident":"Data.Heap.Binominal.Node","stop":{"line":80,"column":46}},{"start":{"line":80,"column":14},"ann":"{v : GHC.Types.Int | v >= 0}","ident":"ds_d2Ve","stop":{"line":80,"column":15}},{"start":{"line":80,"column":22},"ann":"a","ident":"ds_d2Vf","stop":{"line":80,"column":23}},{"start":{"line":80,"column":34},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0}","ident":"ds_d2Vg","stop":{"line":80,"column":36}},{"start":{"line":80,"column":43},"ann":"{v : GHC.Types.Int | 1 <= v}","ident":"ds_d2Vh","stop":{"line":80,"column":45}},{"start":{"line":85,"column":1},"ann":"forall a .\nx1:a -> x2:{VV : a | x1 <= VV} -> x3:(Data.Heap.Binominal.Tree {VV : a | x2 <= VV}) -> {VV : (Data.Heap.Binominal.Tree {VV : a | x1 <= VV}) | size VV == size x3}","ident":"Data.Heap.Binominal.boundedTreeTransitivityLemma","stop":{"line":85,"column":29}},{"start":{"line":85,"column":30},"ann":"a","ident":"x","stop":{"line":85,"column":31}},{"start":{"line":85,"column":32},"ann":"{VV : a | x <= VV}","ident":"y","stop":{"line":85,"column":33}},{"start":{"line":85,"column":34},"ann":"(Data.Heap.Binominal.Tree {VV : a | y <= VV})","ident":"tree","stop":{"line":85,"column":38}},{"start":{"line":89,"column":1},"ann":"forall a .\nx1:a -> x2:{VV : a | x1 <= VV} -> x3:[(Data.Heap.Binominal.Tree {VV : a | x2 <= VV})] -> {v : [(Data.Heap.Binominal.Tree {VV : a | x1 <= VV})] | sumSizeList v == sumSizeList x3}","ident":"Data.Heap.Binominal.boundedTreeListTransitivityLemma","stop":{"line":89,"column":33}},{"start":{"line":89,"column":34},"ann":"a","ident":"x","stop":{"line":89,"column":35}},{"start":{"line":89,"column":36},"ann":"{VV : a | x <= VV}","ident":"y","stop":{"line":89,"column":37}},{"start":{"line":89,"column":38},"ann":"[(Data.Heap.Binominal.Tree {VV : a | y <= VV})]","ident":"ts","stop":{"line":89,"column":40}},{"start":{"line":98,"column":1},"ann":"forall a . {v : GHC.Types.Bool | v} -> a -> a","ident":"Data.Heap.Binominal.assert","stop":{"line":98,"column":7}},{"start":{"line":98,"column":10},"ann":"a","ident":"x","stop":{"line":98,"column":11}},{"start":{"line":102,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Tree a) -> x3:(Data.Heap.Binominal.Tree a) -> {v : (Data.Heap.Binominal.Tree a) | size v == size x2 + size x3}","ident":"Data.Heap.Binominal.link","stop":{"line":102,"column":5}},{"start":{"line":102,"column":6},"ann":"(Data.Heap.Binominal.Tree a)","ident":"t1","stop":{"line":102,"column":8}},{"start":{"line":102,"column":59},"ann":"(Data.Heap.Binominal.Tree a)","ident":"t2","stop":{"line":102,"column":61}},{"start":{"line":103,"column":5},"ann":"a","ident":"ds_d2VF","stop":{"line":103,"column":7}},{"start":{"line":103,"column":11},"ann":"a","ident":"ds_d2VJ","stop":{"line":103,"column":13}},{"start":{"line":104,"column":9},"ann":"(Data.Heap.Binominal.Tree a)","ident":"t2BoundedByX2","stop":{"line":104,"column":22}},{"start":{"line":104,"column":25},"ann":"(Data.Heap.Binominal.Tree a)","ident":"_","stop":{"line":104,"column":55}},{"start":{"line":104,"column":53},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2}","ident":"lq_anf$##7205759403792805035","stop":{"line":104,"column":55}},{"start":{"line":105,"column":9},"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t2BoundedByX2}","ident":"t2BoundedByX1","stop":{"line":105,"column":22}},{"start":{"line":105,"column":25},"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t2BoundedByX2}","ident":"_","stop":{"line":105,"column":73}},{"start":{"line":105,"column":54},"ann":"a","ident":"ds_d2VF","stop":{"line":105,"column":56}},{"start":{"line":105,"column":57},"ann":"a","ident":"ds_d2VJ","stop":{"line":105,"column":59}},{"start":{"line":105,"column":60},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2BoundedByX2}","ident":"t2BoundedByX2","stop":{"line":105,"column":73}},{"start":{"line":106,"column":10},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805045","stop":{"line":106,"column":16}},{"start":{"line":106,"column":11},"ann":"{v : GHC.Types.Int | v >= 0}","ident":"ds_d2VE","stop":{"line":106,"column":13}},{"start":{"line":106,"column":14},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805044","stop":{"line":106,"column":15}},{"start":{"line":106,"column":17},"ann":"a","ident":"ds_d2VF","stop":{"line":106,"column":19}},{"start":{"line":106,"column":20},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | head v == t2BoundedByX1}","ident":"lq_anf$##7205759403792805046","stop":{"line":106,"column":39}},{"start":{"line":106,"column":21},"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t2BoundedByX2\n                                    && v == t2BoundedByX1}","ident":"t2BoundedByX1","stop":{"line":106,"column":34}},{"start":{"line":106,"column":35},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0}","ident":"ds_d2VG","stop":{"line":106,"column":38}},{"start":{"line":106,"column":40},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805047","stop":{"line":106,"column":51}},{"start":{"line":106,"column":41},"ann":"{v : GHC.Types.Int | 1 <= v}","ident":"ds_d2VH","stop":{"line":106,"column":44}},{"start":{"line":106,"column":47},"ann":"{v : GHC.Types.Int | 1 <= v}","ident":"ds_d2VL","stop":{"line":106,"column":50}},{"start":{"line":108,"column":9},"ann":"(Data.Heap.Binominal.Tree a)","ident":"t1BoundedByX1","stop":{"line":108,"column":22}},{"start":{"line":108,"column":25},"ann":"(Data.Heap.Binominal.Tree a)","ident":"_","stop":{"line":108,"column":55}},{"start":{"line":108,"column":53},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1}","ident":"lq_anf$##7205759403792805034","stop":{"line":108,"column":55}},{"start":{"line":109,"column":9},"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t1BoundedByX1}","ident":"t1BoundedByX2","stop":{"line":109,"column":22}},{"start":{"line":109,"column":25},"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t1BoundedByX1}","ident":"_","stop":{"line":109,"column":73}},{"start":{"line":109,"column":54},"ann":"a","ident":"ds_d2VJ","stop":{"line":109,"column":56}},{"start":{"line":109,"column":57},"ann":"a","ident":"ds_d2VF","stop":{"line":109,"column":59}},{"start":{"line":109,"column":60},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1BoundedByX1}","ident":"t1BoundedByX1","stop":{"line":109,"column":73}},{"start":{"line":110,"column":10},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805040","stop":{"line":110,"column":16}},{"start":{"line":110,"column":11},"ann":"{v : GHC.Types.Int | v >= 0}","ident":"ds_d2VI","stop":{"line":110,"column":13}},{"start":{"line":110,"column":14},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805039","stop":{"line":110,"column":15}},{"start":{"line":110,"column":17},"ann":"a","ident":"ds_d2VJ","stop":{"line":110,"column":19}},{"start":{"line":110,"column":20},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | head v == t1BoundedByX2}","ident":"lq_anf$##7205759403792805041","stop":{"line":110,"column":39}},{"start":{"line":110,"column":21},"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t1BoundedByX1\n                                    && v == t1BoundedByX2}","ident":"t1BoundedByX2","stop":{"line":110,"column":34}},{"start":{"line":110,"column":35},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0}","ident":"ds_d2VK","stop":{"line":110,"column":38}},{"start":{"line":110,"column":40},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805042","stop":{"line":110,"column":51}},{"start":{"line":110,"column":41},"ann":"{v : GHC.Types.Int | 1 <= v}","ident":"ds_d2VH","stop":{"line":110,"column":44}},{"start":{"line":110,"column":47},"ann":"{v : GHC.Types.Int | 1 <= v}","ident":"ds_d2VL","stop":{"line":110,"column":50}},{"start":{"line":114,"column":1},"ann":"forall a . {v : (Data.Heap.Binominal.Heap a) | heapSize v == 0}","ident":"Data.Heap.Binominal.empty","stop":{"line":114,"column":6}},{"start":{"line":114,"column":14},"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | len v == 0\n                                            && sumSizeList v == 0}","ident":"_","stop":{"line":114,"column":16}},{"start":{"line":118,"column":1},"ann":"forall a .\nx1:(Data.Heap.Binominal.Heap a) -> {v : GHC.Types.Bool | v <=> heapSize x1 == 0}","ident":"Data.Heap.Binominal.null","stop":{"line":118,"column":5}},{"start":{"line":118,"column":6},"ann":"(Data.Heap.Binominal.Heap a)","ident":"h","stop":{"line":118,"column":7}},{"start":{"line":118,"column":10},"ann":"{v : GHC.Types.Int | v == heapSize h\n                     && v >= 0}","ident":"lq_anf$##7205759403792805030","stop":{"line":118,"column":20}},{"start":{"line":118,"column":19},"ann":"{v : (Data.Heap.Binominal.Heap a) | heapSize v >= 0\n                                    && v == h}","ident":"h","stop":{"line":118,"column":20}},{"start":{"line":118,"column":24},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805032","stop":{"line":118,"column":25}},{"start":{"line":122,"column":1},"ann":"forall a .\na -> {v : (Data.Heap.Binominal.Heap a) | heapSize v == 1}","ident":"Data.Heap.Binominal.singleton","stop":{"line":122,"column":10}},{"start":{"line":122,"column":11},"ann":"a","ident":"x","stop":{"line":122,"column":12}},{"start":{"line":122,"column":20},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"lq_anf$##7205759403792805104","stop":{"line":122,"column":35}},{"start":{"line":122,"column":21},"ann":"{v : (Data.Heap.Binominal.Tree a) | root v == x}","ident":"lq_anf$##7205759403792805102","stop":{"line":122,"column":34}},{"start":{"line":122,"column":26},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805098","stop":{"line":122,"column":27}},{"start":{"line":122,"column":28},"ann":"{VV : a | VV == x}","ident":"x","stop":{"line":122,"column":29}},{"start":{"line":122,"column":30},"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | len v == 0\n                                            && sumSizeList v == 0}","ident":"_","stop":{"line":122,"column":32}},{"start":{"line":122,"column":33},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805101","stop":{"line":122,"column":34}},{"start":{"line":134,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\na -> x3:(Data.Heap.Binominal.Heap a) -> {v : (Data.Heap.Binominal.Heap a) | 1 + heapSize x3 == heapSize v}","ident":"Data.Heap.Binominal.insert","stop":{"line":134,"column":7}},{"start":{"line":134,"column":8},"ann":"a","ident":"x","stop":{"line":134,"column":9}},{"start":{"line":134,"column":22},"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {v : (Data.Heap.Binominal.Heap a) | unheap v == x1\n                                                                         && heapSize v == sumSizeList x1}","ident":"Data.Heap.Binominal.Heap","stop":{"line":134,"column":55}},{"start":{"line":134,"column":27},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"lq_anf$##7205759403792805062","stop":{"line":134,"column":55}},{"start":{"line":134,"column":36},"ann":"{v : (Data.Heap.Binominal.Tree a) | root v == x}","ident":"lq_anf$##7205759403792805061","stop":{"line":134,"column":51}},{"start":{"line":134,"column":42},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805057","stop":{"line":134,"column":43}},{"start":{"line":134,"column":44},"ann":"{VV : a | VV == x}","ident":"x","stop":{"line":134,"column":45}},{"start":{"line":134,"column":46},"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | len v == 0\n                                            && sumSizeList v == 0}","ident":"_","stop":{"line":134,"column":48}},{"start":{"line":134,"column":49},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805060","stop":{"line":134,"column":50}},{"start":{"line":134,"column":52},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts}","ident":"ts","stop":{"line":134,"column":54}},{"start":{"line":138,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Tree a) -> x3:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == size x2 + sumSizeList x3}","ident":"Data.Heap.Binominal.insert'","stop":{"line":138,"column":8}},{"start":{"line":138,"column":9},"ann":"(Data.Heap.Binominal.Tree a)","ident":"t","stop":{"line":138,"column":10}},{"start":{"line":138,"column":16},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v == 0\n                                      && sumSizeList v == 0}","ident":"lq_anf$##7205759403792805049","stop":{"line":138,"column":19}},{"start":{"line":138,"column":17},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":138,"column":18}},{"start":{"line":140,"column":5},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == rank t}","ident":"lq_anf$##7205759403792805050","stop":{"line":140,"column":11}},{"start":{"line":140,"column":10},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":140,"column":11}},{"start":{"line":140,"column":14},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == rank t'}","ident":"lq_anf$##7205759403792805051","stop":{"line":140,"column":21}},{"start":{"line":140,"column":19},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t'}","ident":"t'","stop":{"line":140,"column":21}},{"start":{"line":140,"column":24},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":140,"column":25}},{"start":{"line":140,"column":28},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0}","ident":"ds_d2VO","stop":{"line":140,"column":30}},{"start":{"line":141,"column":24},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Tree a) -> x3:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == size x2 + sumSizeList x3}","ident":"Data.Heap.Binominal.insert'","stop":{"line":141,"column":47}},{"start":{"line":141,"column":32},"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t + size t'}","ident":"lq_anf$##7205759403792805054","stop":{"line":141,"column":43}},{"start":{"line":141,"column":38},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":141,"column":39}},{"start":{"line":141,"column":40},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t'}","ident":"t'","stop":{"line":141,"column":42}},{"start":{"line":141,"column":44},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts'}","ident":"ts'","stop":{"line":141,"column":47}},{"start":{"line":146,"column":1},"ann":"forall a .\nx1:[a] -> {VV : GHC.Types.Int | VV == len x1\n                                && VV >= 0}","ident":"Data.Heap.Binominal.len","stop":{"line":146,"column":4}},{"start":{"line":146,"column":10},"ann":"{v : GHC.Prim.Int# | v == 0}","ident":"lq_anf$##7205759403792805106","stop":{"line":146,"column":11}},{"start":{"line":147,"column":14},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805108","stop":{"line":147,"column":15}},{"start":{"line":147,"column":18},"ann":"{v : GHC.Types.Int | v == len xs\n                     && v >= 0}","ident":"lq_anf$##7205759403792805109","stop":{"line":147,"column":24}},{"start":{"line":147,"column":22},"ann":"{v : [a] | len v >= 0\n           && sumSizeList v >= 0\n           && v == xs}","ident":"xs","stop":{"line":147,"column":24}},{"start":{"line":151,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:[a] -> {v : (Data.Heap.Binominal.Heap a) | heapSize v == len x2}","ident":"Data.Heap.Binominal.fromList","stop":{"line":151,"column":9}},{"start":{"line":151,"column":15},"ann":"forall a . {v : (Data.Heap.Binominal.Heap a) | heapSize v == 0}","ident":"_","stop":{"line":151,"column":20}},{"start":{"line":152,"column":19},"ann":"{v : (GHC.Classes.Ord a) | v == $dOrd_a2JY}","ident":"$dOrd_a2JY","stop":{"line":152,"column":41}},{"start":{"line":152,"column":26},"ann":"{VV : a | VV == x}","ident":"x","stop":{"line":152,"column":27}},{"start":{"line":152,"column":28},"ann":"{v : (Data.Heap.Binominal.Heap a) | heapSize v == len xs}","ident":"lq_anf$##7205759403792805096","stop":{"line":152,"column":41}},{"start":{"line":152,"column":38},"ann":"{v : [a] | len v >= 0\n           && sumSizeList v >= 0\n           && v == xs}","ident":"xs","stop":{"line":152,"column":40}},{"start":{"line":196,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\n{VV : (Data.Heap.Binominal.Heap a) | 0 < heapSize VV} -> a","ident":"Data.Heap.Binominal.minimum","stop":{"line":196,"column":8}},{"start":{"line":196,"column":11},"ann":"forall a .\nx1:(Data.Heap.Binominal.Tree a) -> {VV : a | VV == root x1}","ident":"_","stop":{"line":196,"column":15}},{"start":{"line":196,"column":18},"ann":"forall a b . x1:(a, b) -> {VV : a | VV == fst x1}","ident":"_","stop":{"line":196,"column":21}},{"start":{"line":196,"column":24},"ann":"x1:{v : [(Data.Heap.Binominal.Tree a)] | 0 < len v} -> {v : ((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | root (fst x15) <= VV})]) | size (fst v) + sumSizeList (snd v) == sumSizeList x1}","ident":"lq_anf$##7205759403792805118","stop":{"line":196,"column":34}},{"start":{"line":196,"column":37},"ann":"forall a .\nx1:{v : (Data.Heap.Binominal.Heap a) | 0 < heapSize v} -> {v : [(Data.Heap.Binominal.Tree a)] | 0 < len v\n                                                                                                && sumSizeList v == heapSize x1}","ident":"_","stop":{"line":196,"column":51}},{"start":{"line":204,"column":1},"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList x1}","ident":"Data.Heap.Binominal.reverseHeapList","stop":{"line":204,"column":16}},{"start":{"line":204,"column":17},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"xs","stop":{"line":204,"column":19}},{"start":{"line":204,"column":41},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == xs}","ident":"xs","stop":{"line":204,"column":43}},{"start":{"line":204,"column":44},"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | len v == 0\n                                            && sumSizeList v == 0}","ident":"_","stop":{"line":204,"column":46}},{"start":{"line":208,"column":1},"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> x2:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList x1 + sumSizeList x2}","ident":"Data.Heap.Binominal.reverseHeapListAux","stop":{"line":208,"column":19}},{"start":{"line":208,"column":23},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"acc","stop":{"line":208,"column":26}},{"start":{"line":208,"column":29},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == acc}","ident":"acc","stop":{"line":208,"column":32}},{"start":{"line":209,"column":33},"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> x2:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList x1 + sumSizeList x2}","ident":"Data.Heap.Binominal.reverseHeapListAux","stop":{"line":209,"column":62}},{"start":{"line":209,"column":52},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == xs}","ident":"xs","stop":{"line":209,"column":54}},{"start":{"line":209,"column":55},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | tail v == acc\n                                      && head v == x\n                                      && len v == 1 + len acc\n                                      && sumSizeList v == size x + sumSizeList acc}","ident":"lq_anf$##7205759403792805111","stop":{"line":209,"column":62}},{"start":{"line":209,"column":56},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == x}","ident":"x","stop":{"line":209,"column":57}},{"start":{"line":209,"column":58},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == acc}","ident":"acc","stop":{"line":209,"column":61}},{"start":{"line":213,"column":1},"ann":"forall a .\nx1:{VV : (Data.Heap.Binominal.Heap a) | 0 < heapSize VV} -> {v : [(Data.Heap.Binominal.Tree a)] | 0 < len v\n                                                                                                  && sumSizeList v == heapSize x1}","ident":"Data.Heap.Binominal.unheapNonempty","stop":{"line":213,"column":15}},{"start":{"line":213,"column":34},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts}","ident":"lq_anf$##7205759403792805114","stop":{"line":213,"column":36}},{"start":{"line":217,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:{VV : (Data.Heap.Binominal.Heap a) | 0 < heapSize VV} -> {v : (Data.Heap.Binominal.Heap a) | 1 + heapSize v == heapSize x2}","ident":"Data.Heap.Binominal.deleteMin","stop":{"line":217,"column":10}},{"start":{"line":217,"column":11},"ann":"{VV : (Data.Heap.Binominal.Heap a) | 0 < heapSize VV}","ident":"h","stop":{"line":217,"column":12}},{"start":{"line":218,"column":31},"ann":"((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | root (fst x9) <= VV})])","ident":"lq_anf$##7205759403792805123","stop":{"line":218,"column":60}},{"start":{"line":218,"column":42},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | 0 < len v\n                                      && sumSizeList v == heapSize h}","ident":"lq_anf$##7205759403792805122","stop":{"line":218,"column":60}},{"start":{"line":218,"column":58},"ann":"{v : (Data.Heap.Binominal.Heap a) | 0 < heapSize v\n                                    && heapSize v >= 0\n                                    && v == h}","ident":"h","stop":{"line":218,"column":59}},{"start":{"line":219,"column":8},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"lq_anf$##7205759403792805127","stop":{"line":219,"column":42}},{"start":{"line":219,"column":16},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList ts1}","ident":"lq_anf$##7205759403792805126","stop":{"line":219,"column":37}},{"start":{"line":219,"column":33},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts1}","ident":"ts1","stop":{"line":219,"column":36}},{"start":{"line":219,"column":38},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts2}","ident":"ts2","stop":{"line":219,"column":41}},{"start":{"line":223,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:{VV : (Data.Heap.Binominal.Heap a) | 0 < heapSize VV} -> {v : (a, (Data.Heap.Binominal.Heap a)) | 1 + heapSize (snd v) == heapSize x2}","ident":"Data.Heap.Binominal.deleteMin2","stop":{"line":223,"column":11}},{"start":{"line":223,"column":12},"ann":"{VV : (Data.Heap.Binominal.Heap a) | 0 < heapSize VV}","ident":"h","stop":{"line":223,"column":13}},{"start":{"line":223,"column":17},"ann":"a","ident":"lq_anf$##7205759403792805128","stop":{"line":223,"column":26}},{"start":{"line":223,"column":25},"ann":"{v : (Data.Heap.Binominal.Heap a) | 0 < heapSize v\n                                    && heapSize v >= 0\n                                    && v == h}","ident":"h","stop":{"line":223,"column":26}},{"start":{"line":223,"column":28},"ann":"{v : (Data.Heap.Binominal.Heap a) | 1 + heapSize v == heapSize h}","ident":"lq_anf$##7205759403792805129","stop":{"line":223,"column":39}},{"start":{"line":223,"column":38},"ann":"{v : (Data.Heap.Binominal.Heap a) | 0 < heapSize v\n                                    && heapSize v >= 0\n                                    && v == h}","ident":"h","stop":{"line":223,"column":39}},{"start":{"line":228,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:{v : [(Data.Heap.Binominal.Tree a)] | 0 < len v} -> {v : ((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | root (fst v) <= VV})]) | size (fst v) + sumSizeList (snd v) == sumSizeList x2}","ident":"Data.Heap.Binominal.deleteMin'","stop":{"line":228,"column":11}},{"start":{"line":228,"column":18},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v == 0\n                                      && sumSizeList v == 0}","ident":"lq_anf$##7205759403792805091","stop":{"line":228,"column":25}},{"start":{"line":228,"column":19},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":228,"column":20}},{"start":{"line":228,"column":22},"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | len v == 0\n                                            && sumSizeList v == 0}","ident":"_","stop":{"line":228,"column":24}},{"start":{"line":230,"column":7},"ann":"((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | root (fst x9) <= VV})])","ident":"acc","stop":{"line":230,"column":10}},{"start":{"line":230,"column":13},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:{v : [(Data.Heap.Binominal.Tree a)] | 0 < len v} -> {v : ((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | root (fst v) <= VV})]) | size (fst v) + sumSizeList (snd v) == sumSizeList x2}","ident":"Data.Heap.Binominal.deleteMin'","stop":{"line":230,"column":26}},{"start":{"line":230,"column":24},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0}","ident":"ds_d2X8","stop":{"line":230,"column":26}},{"start":{"line":231,"column":7},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == fst acc}","ident":"t'","stop":{"line":231,"column":9}},{"start":{"line":231,"column":12},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == fst acc}","ident":"_","stop":{"line":231,"column":19}},{"start":{"line":231,"column":16},"ann":"{v : ((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | root (fst x10) <= VV})]) | v == acc}","ident":"acc","stop":{"line":231,"column":19}},{"start":{"line":232,"column":7},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && v == snd acc}","ident":"ts'","stop":{"line":232,"column":10}},{"start":{"line":232,"column":13},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && v == snd acc}","ident":"_","stop":{"line":232,"column":20}},{"start":{"line":232,"column":17},"ann":"{v : ((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | root (fst x10) <= VV})]) | v == acc}","ident":"acc","stop":{"line":232,"column":20}},{"start":{"line":233,"column":7},"ann":"{VV : a | VV == root t'}","ident":"x'","stop":{"line":233,"column":9}},{"start":{"line":233,"column":12},"ann":"{VV : a | VV == root t'}","ident":"_","stop":{"line":233,"column":19}},{"start":{"line":233,"column":17},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == fst acc\n                                    && v == t'}","ident":"t'","stop":{"line":233,"column":19}},{"start":{"line":234,"column":7},"ann":"{VV : a | VV == root t}","ident":"x","stop":{"line":234,"column":8}},{"start":{"line":234,"column":11},"ann":"{VV : a | VV == root t}","ident":"_","stop":{"line":234,"column":17}},{"start":{"line":234,"column":16},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":234,"column":17}},{"start":{"line":235,"column":7},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t <= VV}) | size v == size t}","ident":"tBounded","stop":{"line":235,"column":15}},{"start":{"line":235,"column":18},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t <= VV}) | size v == size t}","ident":"_","stop":{"line":235,"column":47}},{"start":{"line":235,"column":46},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":235,"column":47}},{"start":{"line":236,"column":7},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t' <= VV}) | size v == size t'}","ident":"tBounded'","stop":{"line":236,"column":16}},{"start":{"line":236,"column":19},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t' <= VV}) | size v == size t'}","ident":"_","stop":{"line":236,"column":49}},{"start":{"line":236,"column":47},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == fst acc\n                                    && v == t'}","ident":"t'","stop":{"line":236,"column":49}},{"start":{"line":237,"column":6},"ann":"{VV : a | VV == root t\n          && VV == x}","ident":"x","stop":{"line":237,"column":7}},{"start":{"line":237,"column":10},"ann":"{VV : a | VV == root t'\n          && VV == x'}","ident":"x'","stop":{"line":237,"column":12}},{"start":{"line":239,"column":9},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x <= VV}) | size v == size tBounded'}","ident":"tBoundedByX","stop":{"line":239,"column":20}},{"start":{"line":239,"column":23},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x <= VV}) | size v == size tBounded'}","ident":"_","stop":{"line":239,"column":66}},{"start":{"line":239,"column":52},"ann":"{VV : a | VV == root t\n          && VV == x}","ident":"x","stop":{"line":239,"column":53}},{"start":{"line":239,"column":54},"ann":"{VV : a | VV == root t'\n          && VV == x'}","ident":"x'","stop":{"line":239,"column":56}},{"start":{"line":239,"column":57},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t' <= VV}) | size v == size t'\n                                                           && v == tBounded'}","ident":"tBounded'","stop":{"line":239,"column":66}},{"start":{"line":240,"column":9},"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | x <= VV})] | sumSizeList v == sumSizeList ts'}","ident":"tsBoundedByX","stop":{"line":240,"column":21}},{"start":{"line":240,"column":24},"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | x <= VV})] | sumSizeList v == sumSizeList ts'}","ident":"_","stop":{"line":240,"column":65}},{"start":{"line":240,"column":57},"ann":"{VV : a | VV == root t\n          && VV == x}","ident":"x","stop":{"line":240,"column":58}},{"start":{"line":240,"column":59},"ann":"{VV : a | VV == root t'\n          && VV == x'}","ident":"x'","stop":{"line":240,"column":61}},{"start":{"line":240,"column":62},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && v == snd acc\n                                      && sumSizeList v >= 0\n                                      && v == ts'}","ident":"ts'","stop":{"line":240,"column":65}},{"start":{"line":241,"column":6},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":241,"column":7}},{"start":{"line":241,"column":9},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x <= VV}) | size v == size tBounded'\n                                                     && v == tBoundedByX}","ident":"tBoundedByX","stop":{"line":241,"column":20}},{"start":{"line":241,"column":23},"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | x <= VV})] | sumSizeList v == sumSizeList ts'\n                                                       && len v >= 0\n                                                       && sumSizeList v >= 0\n                                                       && v == tsBoundedByX}","ident":"tsBoundedByX","stop":{"line":241,"column":35}},{"start":{"line":244,"column":9},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x' <= VV}) | size v == size tBounded}","ident":"tBoundedByX'","stop":{"line":244,"column":21}},{"start":{"line":244,"column":24},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x' <= VV}) | size v == size tBounded}","ident":"_","stop":{"line":244,"column":66}},{"start":{"line":244,"column":53},"ann":"{VV : a | VV == root t'\n          && VV == x'}","ident":"x'","stop":{"line":244,"column":55}},{"start":{"line":244,"column":56},"ann":"{VV : a | VV == root t\n          && VV == x}","ident":"x","stop":{"line":244,"column":57}},{"start":{"line":244,"column":58},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t <= VV}) | size v == size t\n                                                          && v == tBounded}","ident":"tBounded","stop":{"line":244,"column":66}},{"start":{"line":245,"column":6},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == fst acc\n                                    && v == t'}","ident":"t'","stop":{"line":245,"column":8}},{"start":{"line":245,"column":10},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x' <= VV}) | size v == size tBounded\n                                                      && v == tBoundedByX'}","ident":"tBoundedByX'","stop":{"line":245,"column":22}},{"start":{"line":245,"column":25},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && v == snd acc\n                                      && sumSizeList v >= 0\n                                      && v == ts'}","ident":"ts'","stop":{"line":245,"column":28}},{"start":{"line":250,"column":1},"ann":"forall a b .\nx1:a -> (Data.Heap.Binominal.Tree {VV : a | x1 <= VV}) -> b -> b","ident":"Data.Heap.Binominal.assertBoundedTree","stop":{"line":250,"column":18}},{"start":{"line":250,"column":23},"ann":"a","ident":"x","stop":{"line":250,"column":24}},{"start":{"line":254,"column":1},"ann":"forall a b .\nx1:a -> [(Data.Heap.Binominal.Tree {VV : a | x1 <= VV})] -> b -> b","ident":"Data.Heap.Binominal.assertBoundedTreeList","stop":{"line":254,"column":22}},{"start":{"line":254,"column":27},"ann":"a","ident":"x","stop":{"line":254,"column":28}},{"start":{"line":267,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Heap a) -> x3:(Data.Heap.Binominal.Heap a) -> {VV : (Data.Heap.Binominal.Heap a) | heapSize VV == heapSize x2 + heapSize x3}","ident":"Data.Heap.Binominal.merge","stop":{"line":267,"column":6}},{"start":{"line":267,"column":31},"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {v : (Data.Heap.Binominal.Heap a) | unheap v == x1\n                                                                         && heapSize v == sumSizeList x1}","ident":"Data.Heap.Binominal.Heap","stop":{"line":267,"column":52}},{"start":{"line":267,"column":36},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList ts1 + sumSizeList ts2}","ident":"lq_anf$##7205759403792805083","stop":{"line":267,"column":52}},{"start":{"line":267,"column":44},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts1}","ident":"ts1","stop":{"line":267,"column":47}},{"start":{"line":267,"column":48},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts2}","ident":"ts2","stop":{"line":267,"column":51}},{"start":{"line":271,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:[(Data.Heap.Binominal.Tree a)] -> x3:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList x2 + sumSizeList x3}","ident":"Data.Heap.Binominal.merge'","stop":{"line":271,"column":7}},{"start":{"line":271,"column":8},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"ts1","stop":{"line":271,"column":11}},{"start":{"line":271,"column":17},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts1}","ident":"ts1","stop":{"line":271,"column":20}},{"start":{"line":272,"column":17},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0}","ident":"ds_d2Wa","stop":{"line":272,"column":20}},{"start":{"line":274,"column":5},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == rank t1}","ident":"lq_anf$##7205759403792805067","stop":{"line":274,"column":12}},{"start":{"line":274,"column":10},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1}","ident":"t1","stop":{"line":274,"column":12}},{"start":{"line":274,"column":15},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == rank t2}","ident":"lq_anf$##7205759403792805068","stop":{"line":274,"column":22}},{"start":{"line":274,"column":20},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2}","ident":"t2","stop":{"line":274,"column":22}},{"start":{"line":274,"column":25},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1}","ident":"t1","stop":{"line":274,"column":27}},{"start":{"line":274,"column":30},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"lq_anf$##7205759403792805078","stop":{"line":274,"column":45}},{"start":{"line":274,"column":37},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts1'}","ident":"ts1'","stop":{"line":274,"column":41}},{"start":{"line":274,"column":42},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0}","ident":"ds_d2Wa","stop":{"line":274,"column":45}},{"start":{"line":275,"column":5},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == rank t2}","ident":"lq_anf$##7205759403792805071","stop":{"line":275,"column":12}},{"start":{"line":275,"column":10},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2}","ident":"t2","stop":{"line":275,"column":12}},{"start":{"line":275,"column":15},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == rank t1}","ident":"lq_anf$##7205759403792805072","stop":{"line":275,"column":22}},{"start":{"line":275,"column":20},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1}","ident":"t1","stop":{"line":275,"column":22}},{"start":{"line":275,"column":25},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2}","ident":"t2","stop":{"line":275,"column":27}},{"start":{"line":275,"column":30},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList ts1 + sumSizeList ts2'}","ident":"lq_anf$##7205759403792805077","stop":{"line":275,"column":45}},{"start":{"line":275,"column":37},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts1}","ident":"ts1","stop":{"line":275,"column":40}},{"start":{"line":275,"column":41},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts2'}","ident":"ts2'","stop":{"line":275,"column":45}},{"start":{"line":276,"column":25},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Tree a) -> x3:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == size x2 + sumSizeList x3}","ident":"Data.Heap.Binominal.insert'","stop":{"line":276,"column":64}},{"start":{"line":276,"column":33},"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t1 + size t2}","ident":"lq_anf$##7205759403792805075","stop":{"line":276,"column":45}},{"start":{"line":276,"column":39},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1}","ident":"t1","stop":{"line":276,"column":41}},{"start":{"line":276,"column":42},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2}","ident":"t2","stop":{"line":276,"column":44}},{"start":{"line":276,"column":46},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList ts1' + sumSizeList ts2'}","ident":"lq_anf$##7205759403792805076","stop":{"line":276,"column":64}},{"start":{"line":276,"column":54},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts1'}","ident":"ts1'","stop":{"line":276,"column":58}},{"start":{"line":276,"column":59},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts2'}","ident":"ts2'","stop":{"line":276,"column":63}}],"errors":[]}