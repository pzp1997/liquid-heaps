{"status":"unsafe","types":{"150":{"36":{"ann":"{v : (Data.Heap.Binominal.Tree a) | root v == x}","ident":"lq_anf$##7205759403792806126","row":150,"col":36},"49":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806125","row":150,"col":49},"44":{"ann":"{VV : a | VV == x}","ident":"x","row":150,"col":44},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\na -> (Data.Heap.Binominal.Heap a) -> (Data.Heap.Binominal.Heap a)","ident":"Data.Heap.Binominal.insert","row":150,"col":1},"46":{"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | len v == 0\n                                            && sumSizeList v == 0}","ident":"_","row":150,"col":46},"8":{"ann":"a","ident":"x","row":150,"col":8},"42":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806122","row":150,"col":42}},"217":{"33":{"ann":"forall a . (Data.Heap.Binominal.Heap a)","ident":"_","row":217,"col":33}},"48":{"43":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && v == xs}","ident":"xs","row":48,"col":43},"31":{"ann":"{v : GHC.Types.Int | v == sumSizeList xs\n                     && v >= 0}","ident":"lq_anf$##7205759403792806098","row":48,"col":31},"22":{"ann":"{v : GHC.Types.Int | 1 <= v\n                     && v == 1 + sumSizeList (subtrees x)\n                     && v == size x}","ident":"lq_anf$##7205759403792806097","row":48,"col":22},"27":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == x}","ident":"x","row":48,"col":27}},"253":{"15":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == rank t1}","ident":"lq_anf$##7205759403792806138","row":253,"col":15},"37":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == ts1}","ident":"ts1","row":253,"col":37},"25":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2}","ident":"t2","row":253,"col":25},"30":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"lq_anf$##7205759403792806143","row":253,"col":30},"20":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1}","ident":"t1","row":253,"col":20},"5":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == rank t2}","ident":"lq_anf$##7205759403792806137","row":253,"col":5},"41":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == ts2'}","ident":"ts2'","row":253,"col":41},"10":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2}","ident":"t2","row":253,"col":10}},"96":{"5":{"ann":"a","ident":"ds_d3ds","row":96,"col":5},"11":{"ann":"a","ident":"ds_d3dw","row":96,"col":11}},"227":{"17":{"ann":"forall a . {v : (GHC.Maybe.Maybe a) | isJust v <=> false}","ident":"_","row":227,"col":17},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\n[(Data.Heap.Binominal.Tree a)] -> (GHC.Maybe.Maybe ((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree a)]))","ident":"Data.Heap.Binominal.deleteMin'","row":227,"col":1}},"156":{"28":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0}","ident":"ds_d3dB","row":156,"col":28},"14":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == rank t'}","ident":"lq_anf$##7205759403792806117","row":156,"col":14},"19":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t'}","ident":"t'","row":156,"col":19},"5":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == rank t}","ident":"lq_anf$##7205759403792806116","row":156,"col":5},"24":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":156,"col":24},"10":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":156,"col":10}},"112":{"1":{"ann":"forall a . (Data.Heap.Binominal.Heap a) -> GHC.Types.Bool","ident":"Data.Heap.Binominal.null","row":112,"col":1}},"233":{"12":{"ann":"forall a .\nx1:a -> {v : (GHC.Maybe.Maybe a) | fromJust v == x1\n                                   && (isJust v <=> true)}","ident":"GHC.Maybe.Just","row":233,"col":12},"17":{"ann":"{v : ((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree a)]) | x_Tuple22 v == ts\n                                                                      && x_Tuple21 v == t\n                                                                      && snd v == ts\n                                                                      && fst v == t}","ident":"lq_anf$##7205759403792806178","row":233,"col":17},"18":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":233,"col":18},"21":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == ts}","ident":"ts","row":233,"col":21}},"75":{"1":{"ann":"forall a .\nx1:(Data.Heap.Binominal.Tree a) -> (Data.Heap.Binominal.Tree {VV : a | root x1 <= VV})","ident":"Data.Heap.Binominal.treeIsBoundedByItsRootLemma","row":75,"col":1}},"252":{"15":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == rank t2}","ident":"lq_anf$##7205759403792806134","row":252,"col":15},"37":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == ts1'}","ident":"ts1'","row":252,"col":37},"25":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1}","ident":"t1","row":252,"col":25},"30":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"lq_anf$##7205759403792806144","row":252,"col":30},"20":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2}","ident":"t2","row":252,"col":20},"5":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == rank t1}","ident":"lq_anf$##7205759403792806133","row":252,"col":5},"42":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0}","ident":"ds_d3dS","row":252,"col":42},"10":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1}","ident":"t1","row":252,"col":10}},"234":{"22":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":234,"col":22},"12":{"ann":"forall a .\nx1:a -> {v : (GHC.Maybe.Maybe a) | fromJust v == x1\n                                   && (isJust v <=> true)}","ident":"GHC.Maybe.Just","row":234,"col":12},"17":{"ann":"{v : ((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree a)]) | x_Tuple21 v == t'\n                                                                      && fst v == t'}","ident":"lq_anf$##7205759403792806177","row":234,"col":17},"18":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t'}","ident":"t'","row":234,"col":18},"24":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == ts'}","ident":"ts'","row":234,"col":24}},"216":{"8":{"ann":"(GHC.Maybe.Maybe ((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree a)]))","ident":"lq_anf$##7205759403792806185","row":216,"col":8}},"101":{"25":{"ann":"(Data.Heap.Binominal.Tree a)","ident":"_","row":101,"col":25},"53":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1}","ident":"lq_anf$##7205759403792806100","row":101,"col":53},"9":{"ann":"(Data.Heap.Binominal.Tree a)","ident":"t1BoundedByX1","row":101,"col":9}},"157":{"44":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == ts'}","ident":"ts'","row":157,"col":44},"40":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t'}","ident":"t'","row":157,"col":40},"38":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":157,"col":38},"24":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\n(Data.Heap.Binominal.Tree a) -> [(Data.Heap.Binominal.Tree a)] -> [(Data.Heap.Binominal.Tree a)]","ident":"Data.Heap.Binominal.insert'","row":157,"col":24},"32":{"ann":"(Data.Heap.Binominal.Tree a)","ident":"lq_anf$##7205759403792806120","row":157,"col":32}},"128":{"14":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == x}","ident":"x","row":128,"col":14},"1":{"ann":"{VV : GHC.Types.Int | VV >= 0} -> {VV : GHC.Types.Int | VV >= 0} -> {VV : GHC.Types.Int | VV >= 0}","ident":"Data.Heap.Binominal.sumNat","row":128,"col":1},"18":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == y}","ident":"y","row":128,"col":18},"8":{"ann":"{VV : GHC.Types.Int | VV >= 0}","ident":"x","row":128,"col":8},"10":{"ann":"{VV : GHC.Types.Int | VV >= 0}","ident":"y","row":128,"col":10}},"232":{"15":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":232,"col":15},"19":{"ann":"{VV : a | VV == root t'}","ident":"lq_anf$##7205759403792806173","row":232,"col":19},"24":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t'}","ident":"t'","row":232,"col":24},"10":{"ann":"{VV : a | VV == root t}","ident":"lq_anf$##7205759403792806172","row":232,"col":10}},"254":{"25":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\n(Data.Heap.Binominal.Tree a) -> [(Data.Heap.Binominal.Tree a)] -> [(Data.Heap.Binominal.Tree a)]","ident":"Data.Heap.Binominal.insert'","row":254,"col":25},"59":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == ts2'}","ident":"ts2'","row":254,"col":59},"39":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1}","ident":"t1","row":254,"col":39},"46":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"lq_anf$##7205759403792806142","row":254,"col":46},"33":{"ann":"(Data.Heap.Binominal.Tree a)","ident":"lq_anf$##7205759403792806141","row":254,"col":33},"42":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2}","ident":"t2","row":254,"col":42},"54":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == ts1'}","ident":"ts1'","row":254,"col":54}},"116":{"28":{"ann":"{VV : a | VV == x}","ident":"x","row":116,"col":28},"30":{"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | len v == 0\n                                            && sumSizeList v == 0}","ident":"_","row":116,"col":30},"1":{"ann":"forall a . a -> (Data.Heap.Binominal.Heap a)","ident":"Data.Heap.Binominal.singleton","row":116,"col":1},"26":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806156","row":116,"col":26},"11":{"ann":"a","ident":"x","row":116,"col":11},"33":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806159","row":116,"col":33},"21":{"ann":"{v : (Data.Heap.Binominal.Tree a) | root v == x}","ident":"lq_anf$##7205759403792806160","row":116,"col":21}},"215":{"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\n(Data.Heap.Binominal.Heap a) -> (Data.Heap.Binominal.Heap a)","ident":"Data.Heap.Binominal.deleteMin","row":215,"col":1}},"90":{"1":{"ann":"forall a . {v : GHC.Types.Bool | v} -> a -> a","ident":"Data.Heap.Binominal.assert","row":90,"col":1},"10":{"ann":"a","ident":"x","row":90,"col":10}},"1":{"1":{"ann":"GHC.Types.Module","ident":"Data.Heap.Binominal.$trModule","row":1,"col":1}},"95":{"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\n(Data.Heap.Binominal.Tree a) -> (Data.Heap.Binominal.Tree a) -> (Data.Heap.Binominal.Tree a)","ident":"Data.Heap.Binominal.link","row":95,"col":1},"59":{"ann":"(Data.Heap.Binominal.Tree a)","ident":"t2","row":95,"col":59},"6":{"ann":"(Data.Heap.Binominal.Tree a)","ident":"t1","row":95,"col":6}},"249":{"17":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == ts1}","ident":"ts1","row":249,"col":17},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\n[(Data.Heap.Binominal.Tree a)] -> [(Data.Heap.Binominal.Tree a)] -> [(Data.Heap.Binominal.Tree a)]","ident":"Data.Heap.Binominal.merge'","row":249,"col":1},"8":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"ts1","row":249,"col":8}},"250":{"17":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0}","ident":"ds_d3dS","row":250,"col":17}},"103":{"14":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806105","row":103,"col":14},"17":{"ann":"a","ident":"ds_d3dw","row":103,"col":17},"35":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0}","ident":"ds_d3dx","row":103,"col":35},"40":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806108","row":103,"col":40},"20":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | head v == t1BoundedByX2}","ident":"lq_anf$##7205759403792806107","row":103,"col":20},"41":{"ann":"{v : GHC.Types.Int | 1 <= v}","ident":"ds_d3du","row":103,"col":41},"11":{"ann":"{v : GHC.Types.Int | v >= 0}","ident":"ds_d3dv","row":103,"col":11},"47":{"ann":"{v : GHC.Types.Int | 1 <= v}","ident":"ds_d3dy","row":103,"col":47},"21":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1BoundedByX2}","ident":"t1BoundedByX2","row":103,"col":21},"10":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806106","row":103,"col":10}},"222":{"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\n(Data.Heap.Binominal.Heap a) -> (GHC.Maybe.Maybe (a, (Data.Heap.Binominal.Heap a)))","ident":"Data.Heap.Binominal.deleteMin2","row":222,"col":1},"24":{"ann":"forall a . {v : (GHC.Maybe.Maybe a) | isJust v <=> false}","ident":"_","row":222,"col":24}},"132":{"17":{"ann":"{v : GHC.Prim.Int# | v == 0}","ident":"lq_anf$##7205759403792806164","row":132,"col":17},"1":{"ann":"[{VV : GHC.Types.Int | VV >= 0}] -> {VV : GHC.Types.Int | VV >= 0}","ident":"Data.Heap.Binominal.sumNatList","row":132,"col":1}},"99":{"14":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806110","row":99,"col":14},"17":{"ann":"a","ident":"ds_d3ds","row":99,"col":17},"35":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0}","ident":"ds_d3dt","row":99,"col":35},"40":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806113","row":99,"col":40},"20":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | head v == t2BoundedByX1}","ident":"lq_anf$##7205759403792806112","row":99,"col":20},"41":{"ann":"{v : GHC.Types.Int | 1 <= v}","ident":"ds_d3du","row":99,"col":41},"11":{"ann":"{v : GHC.Types.Int | v >= 0}","ident":"ds_d3dr","row":99,"col":11},"47":{"ann":"{v : GHC.Types.Int | 1 <= v}","ident":"ds_d3dy","row":99,"col":47},"21":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2BoundedByX1}","ident":"t2BoundedByX1","row":99,"col":21},"10":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806111","row":99,"col":10}},"80":{"30":{"ann":"a","ident":"x","row":80,"col":30},"1":{"ann":"forall a .\nx1:a -> x2:{VV : a | x1 <= VV} -> (Data.Heap.Binominal.Tree {VV : a | x2 <= VV}) -> (Data.Heap.Binominal.Tree {VV : a | x1 <= VV})","ident":"Data.Heap.Binominal.boundedTreeTransitivityLemma","row":80,"col":1},"34":{"ann":"(Data.Heap.Binominal.Tree {VV : a | y <= VV})","ident":"tree","row":80,"col":34},"32":{"ann":"{VV : a | x <= VV}","ident":"y","row":80,"col":32}},"154":{"17":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":154,"col":17},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\n(Data.Heap.Binominal.Tree a) -> [(Data.Heap.Binominal.Tree a)] -> [(Data.Heap.Binominal.Tree a)]","ident":"Data.Heap.Binominal.insert'","row":154,"col":1},"16":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v == 0\n                                      && sumSizeList v == 0}","ident":"lq_anf$##7205759403792806115","row":154,"col":16},"9":{"ann":"(Data.Heap.Binominal.Tree a)","ident":"t","row":154,"col":9}},"245":{"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\n(Data.Heap.Binominal.Heap a) -> (Data.Heap.Binominal.Heap a) -> (Data.Heap.Binominal.Heap a)","ident":"Data.Heap.Binominal.merge","row":245,"col":1}},"223":{"61":{"ann":"(Data.Heap.Binominal.Heap a)","ident":"ds_d3eH","row":223,"col":61},"53":{"ann":"(GHC.Maybe.Maybe a)","ident":"lq_anf$##7205759403792806195","row":223,"col":53},"35":{"ann":"(Data.Heap.Binominal.Heap a)","ident":"lq_anf$##7205759403792806193","row":223,"col":35},"45":{"ann":"(Data.Heap.Binominal.Heap a)","ident":"ds_d3eH","row":223,"col":45},"26":{"ann":"a","ident":"m","row":223,"col":26},"24":{"ann":"forall a b <p2 :: a b -> Bool> .\nx1:a -> x2:{VV : b<p2 x1> | true} -> {v : (a, b)<\\x5 VV -> {VV : b<p2 x5> | true}> | x_Tuple22 v == x2\n                                                                                     && x_Tuple21 v == x1\n                                                                                     && snd v == x2\n                                                                                     && fst v == x1}","ident":"GHC.Tuple.(,)","row":223,"col":24},"32":{"ann":"{VV : a | VV == m}","ident":"m","row":223,"col":32}},"47":{"1":{"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {VV : GHC.Types.Int | VV == sumSizeList x1\n                                                           && VV >= 0}","ident":"Data.Heap.Binominal.sumSizeList","row":47,"col":1},"18":{"ann":"{v : GHC.Prim.Int# | v == 0}","ident":"lq_anf$##7205759403792806096","row":47,"col":18}},"201":{"28":{"ann":"forall a b . x1:(a, b) -> {VV : a | VV == fst x1}","ident":"_","row":201,"col":28},"36":{"ann":"(GHC.Maybe.Maybe ((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree a)]))","ident":"lq_anf$##7205759403792806183","row":201,"col":36},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\n(Data.Heap.Binominal.Heap a) -> (GHC.Maybe.Maybe a)","ident":"Data.Heap.Binominal.minimum","row":201,"col":1},"21":{"ann":"forall a .\nx1:(Data.Heap.Binominal.Tree a) -> {VV : a | VV == root x1}","ident":"_","row":201,"col":21}},"102":{"25":{"ann":"(Data.Heap.Binominal.Tree a)","ident":"_","row":102,"col":25},"57":{"ann":"a","ident":"ds_d3ds","row":102,"col":57},"60":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1BoundedByX1}","ident":"t1BoundedByX1","row":102,"col":60},"9":{"ann":"(Data.Heap.Binominal.Tree a)","ident":"t1BoundedByX2","row":102,"col":9},"54":{"ann":"a","ident":"ds_d3dw","row":102,"col":54}},"218":{"48":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v == len ts1}","ident":"lq_anf$##7205759403792806189","row":218,"col":48},"57":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == ts1}","ident":"ts1","row":218,"col":57},"35":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"lq_anf$##7205759403792806190","row":218,"col":35},"62":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == ts2}","ident":"ts2","row":218,"col":62}},"97":{"25":{"ann":"(Data.Heap.Binominal.Tree a)","ident":"_","row":97,"col":25},"53":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2}","ident":"lq_anf$##7205759403792806101","row":97,"col":53},"9":{"ann":"(Data.Heap.Binominal.Tree a)","ident":"t2BoundedByX2","row":97,"col":9}},"161":{"25":{"ann":"a -> (Data.Heap.Binominal.Heap a) -> (Data.Heap.Binominal.Heap a)","ident":"lq_anf$##7205759403792806151","row":161,"col":25},"19":{"ann":"(Data.Heap.Binominal.Heap a) -> a -> (Data.Heap.Binominal.Heap a)","ident":"lq_anf$##7205759403792806152","row":161,"col":19},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\n[a] -> (Data.Heap.Binominal.Heap a)","ident":"Data.Heap.Binominal.fromList","row":161,"col":1},"33":{"ann":"forall a . (Data.Heap.Binominal.Heap a)","ident":"_","row":161,"col":33}},"107":{"1":{"ann":"forall a . (Data.Heap.Binominal.Heap a)","ident":"Data.Heap.Binominal.empty","row":107,"col":1}},"230":{"25":{"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | len v == 0\n                                            && sumSizeList v == 0}","ident":"_","row":230,"col":25},"22":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":230,"col":22},"16":{"ann":"forall a .\nx1:a -> {v : (GHC.Maybe.Maybe a) | fromJust v == x1\n                                   && (isJust v <=> true)}","ident":"GHC.Maybe.Just","row":230,"col":16},"21":{"ann":"{v : ((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree a)]) | x_Tuple21 v == t\n                                                                      && fst v == t}","ident":"lq_anf$##7205759403792806170","row":230,"col":21}},"76":{"43":{"ann":"{v : GHC.Types.Int | 1 <= v}","ident":"ds_d3d4","row":76,"col":43},"14":{"ann":"{v : GHC.Types.Int | v >= 0}","ident":"ds_d3d1","row":76,"col":14},"22":{"ann":"a","ident":"ds_d3d2","row":76,"col":22},"34":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0}","ident":"ds_d3d3","row":76,"col":34},"3":{"ann":"forall a .\nx1:{v : GHC.Types.Int | v >= 0} -> x2:a -> x3:[(Data.Heap.Binominal.Tree {VV : a | x2 <= VV})] -> x4:{v : GHC.Types.Int | 1 <= v\n                                                                                                                          && v == 1 + sumSizeList x3} -> {v : (Data.Heap.Binominal.Tree a) | size v == x4\n                                                                                                                                                                                             && subtrees v == x3\n                                                                                                                                                                                             && root v == x2\n                                                                                                                                                                                             && rank v == x1}","ident":"Data.Heap.Binominal.Node","row":76,"col":3}},"229":{"19":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == ts}","ident":"ts","row":229,"col":19},"8":{"ann":"(GHC.Maybe.Maybe ((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree a)]))","ident":"lq_anf$##7205759403792806167","row":229,"col":8}},"133":{"28":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == x}","ident":"x","row":133,"col":28},"30":{"ann":"{v : GHC.Types.Int | v >= 0}","ident":"lq_anf$##7205759403792806165","row":133,"col":30},"21":{"ann":"{v : GHC.Types.Int | v >= 0} -> {v : GHC.Types.Int | v >= 0} -> {v : GHC.Types.Int | v >= 0}","ident":"Data.Heap.Binominal.sumNat","row":133,"col":21},"42":{"ann":"{v : [{v : GHC.Types.Int | v >= 0}] | len v >= 0\n                                      && v == xs}","ident":"xs","row":133,"col":42}},"98":{"25":{"ann":"(Data.Heap.Binominal.Tree a)","ident":"_","row":98,"col":25},"57":{"ann":"a","ident":"ds_d3dw","row":98,"col":57},"60":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2BoundedByX2}","ident":"t2BoundedByX2","row":98,"col":60},"9":{"ann":"(Data.Heap.Binominal.Tree a)","ident":"t2BoundedByX1","row":98,"col":9},"54":{"ann":"a","ident":"ds_d3ds","row":98,"col":54}}},"sptypes":[{"start":{"line":1,"column":1},"ann":"GHC.Types.Module","ident":"Data.Heap.Binominal.$trModule","stop":{"line":1,"column":1}},{"start":{"line":47,"column":1},"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {VV : GHC.Types.Int | VV == sumSizeList x1\n                                                           && VV >= 0}","ident":"Data.Heap.Binominal.sumSizeList","stop":{"line":47,"column":12}},{"start":{"line":47,"column":18},"ann":"{v : GHC.Prim.Int# | v == 0}","ident":"lq_anf$##7205759403792806096","stop":{"line":47,"column":19}},{"start":{"line":48,"column":22},"ann":"{v : GHC.Types.Int | 1 <= v\n                     && v == 1 + sumSizeList (subtrees x)\n                     && v == size x}","ident":"lq_anf$##7205759403792806097","stop":{"line":48,"column":28}},{"start":{"line":48,"column":27},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == x}","ident":"x","stop":{"line":48,"column":28}},{"start":{"line":48,"column":31},"ann":"{v : GHC.Types.Int | v == sumSizeList xs\n                     && v >= 0}","ident":"lq_anf$##7205759403792806098","stop":{"line":48,"column":45}},{"start":{"line":48,"column":43},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && v == xs}","ident":"xs","stop":{"line":48,"column":45}},{"start":{"line":75,"column":1},"ann":"forall a .\nx1:(Data.Heap.Binominal.Tree a) -> (Data.Heap.Binominal.Tree {VV : a | root x1 <= VV})","ident":"Data.Heap.Binominal.treeIsBoundedByItsRootLemma","stop":{"line":75,"column":28}},{"start":{"line":76,"column":3},"ann":"forall a .\nx1:{v : GHC.Types.Int | v >= 0} -> x2:a -> x3:[(Data.Heap.Binominal.Tree {VV : a | x2 <= VV})] -> x4:{v : GHC.Types.Int | 1 <= v\n                                                                                                                          && v == 1 + sumSizeList x3} -> {v : (Data.Heap.Binominal.Tree a) | size v == x4\n                                                                                                                                                                                             && subtrees v == x3\n                                                                                                                                                                                             && root v == x2\n                                                                                                                                                                                             && rank v == x1}","ident":"Data.Heap.Binominal.Node","stop":{"line":76,"column":46}},{"start":{"line":76,"column":14},"ann":"{v : GHC.Types.Int | v >= 0}","ident":"ds_d3d1","stop":{"line":76,"column":15}},{"start":{"line":76,"column":22},"ann":"a","ident":"ds_d3d2","stop":{"line":76,"column":23}},{"start":{"line":76,"column":34},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0}","ident":"ds_d3d3","stop":{"line":76,"column":36}},{"start":{"line":76,"column":43},"ann":"{v : GHC.Types.Int | 1 <= v}","ident":"ds_d3d4","stop":{"line":76,"column":45}},{"start":{"line":80,"column":1},"ann":"forall a .\nx1:a -> x2:{VV : a | x1 <= VV} -> (Data.Heap.Binominal.Tree {VV : a | x2 <= VV}) -> (Data.Heap.Binominal.Tree {VV : a | x1 <= VV})","ident":"Data.Heap.Binominal.boundedTreeTransitivityLemma","stop":{"line":80,"column":29}},{"start":{"line":80,"column":30},"ann":"a","ident":"x","stop":{"line":80,"column":31}},{"start":{"line":80,"column":32},"ann":"{VV : a | x <= VV}","ident":"y","stop":{"line":80,"column":33}},{"start":{"line":80,"column":34},"ann":"(Data.Heap.Binominal.Tree {VV : a | y <= VV})","ident":"tree","stop":{"line":80,"column":38}},{"start":{"line":90,"column":1},"ann":"forall a . {v : GHC.Types.Bool | v} -> a -> a","ident":"Data.Heap.Binominal.assert","stop":{"line":90,"column":7}},{"start":{"line":90,"column":10},"ann":"a","ident":"x","stop":{"line":90,"column":11}},{"start":{"line":95,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\n(Data.Heap.Binominal.Tree a) -> (Data.Heap.Binominal.Tree a) -> (Data.Heap.Binominal.Tree a)","ident":"Data.Heap.Binominal.link","stop":{"line":95,"column":5}},{"start":{"line":95,"column":6},"ann":"(Data.Heap.Binominal.Tree a)","ident":"t1","stop":{"line":95,"column":8}},{"start":{"line":95,"column":59},"ann":"(Data.Heap.Binominal.Tree a)","ident":"t2","stop":{"line":95,"column":61}},{"start":{"line":96,"column":5},"ann":"a","ident":"ds_d3ds","stop":{"line":96,"column":7}},{"start":{"line":96,"column":11},"ann":"a","ident":"ds_d3dw","stop":{"line":96,"column":13}},{"start":{"line":97,"column":9},"ann":"(Data.Heap.Binominal.Tree a)","ident":"t2BoundedByX2","stop":{"line":97,"column":22}},{"start":{"line":97,"column":25},"ann":"(Data.Heap.Binominal.Tree a)","ident":"_","stop":{"line":97,"column":55}},{"start":{"line":97,"column":53},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2}","ident":"lq_anf$##7205759403792806101","stop":{"line":97,"column":55}},{"start":{"line":98,"column":9},"ann":"(Data.Heap.Binominal.Tree a)","ident":"t2BoundedByX1","stop":{"line":98,"column":22}},{"start":{"line":98,"column":25},"ann":"(Data.Heap.Binominal.Tree a)","ident":"_","stop":{"line":98,"column":73}},{"start":{"line":98,"column":54},"ann":"a","ident":"ds_d3ds","stop":{"line":98,"column":56}},{"start":{"line":98,"column":57},"ann":"a","ident":"ds_d3dw","stop":{"line":98,"column":59}},{"start":{"line":98,"column":60},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2BoundedByX2}","ident":"t2BoundedByX2","stop":{"line":98,"column":73}},{"start":{"line":99,"column":10},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806111","stop":{"line":99,"column":16}},{"start":{"line":99,"column":11},"ann":"{v : GHC.Types.Int | v >= 0}","ident":"ds_d3dr","stop":{"line":99,"column":13}},{"start":{"line":99,"column":14},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806110","stop":{"line":99,"column":15}},{"start":{"line":99,"column":17},"ann":"a","ident":"ds_d3ds","stop":{"line":99,"column":19}},{"start":{"line":99,"column":20},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | head v == t2BoundedByX1}","ident":"lq_anf$##7205759403792806112","stop":{"line":99,"column":39}},{"start":{"line":99,"column":21},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2BoundedByX1}","ident":"t2BoundedByX1","stop":{"line":99,"column":34}},{"start":{"line":99,"column":35},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0}","ident":"ds_d3dt","stop":{"line":99,"column":38}},{"start":{"line":99,"column":40},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806113","stop":{"line":99,"column":51}},{"start":{"line":99,"column":41},"ann":"{v : GHC.Types.Int | 1 <= v}","ident":"ds_d3du","stop":{"line":99,"column":44}},{"start":{"line":99,"column":47},"ann":"{v : GHC.Types.Int | 1 <= v}","ident":"ds_d3dy","stop":{"line":99,"column":50}},{"start":{"line":101,"column":9},"ann":"(Data.Heap.Binominal.Tree a)","ident":"t1BoundedByX1","stop":{"line":101,"column":22}},{"start":{"line":101,"column":25},"ann":"(Data.Heap.Binominal.Tree a)","ident":"_","stop":{"line":101,"column":55}},{"start":{"line":101,"column":53},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1}","ident":"lq_anf$##7205759403792806100","stop":{"line":101,"column":55}},{"start":{"line":102,"column":9},"ann":"(Data.Heap.Binominal.Tree a)","ident":"t1BoundedByX2","stop":{"line":102,"column":22}},{"start":{"line":102,"column":25},"ann":"(Data.Heap.Binominal.Tree a)","ident":"_","stop":{"line":102,"column":73}},{"start":{"line":102,"column":54},"ann":"a","ident":"ds_d3dw","stop":{"line":102,"column":56}},{"start":{"line":102,"column":57},"ann":"a","ident":"ds_d3ds","stop":{"line":102,"column":59}},{"start":{"line":102,"column":60},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1BoundedByX1}","ident":"t1BoundedByX1","stop":{"line":102,"column":73}},{"start":{"line":103,"column":10},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806106","stop":{"line":103,"column":16}},{"start":{"line":103,"column":11},"ann":"{v : GHC.Types.Int | v >= 0}","ident":"ds_d3dv","stop":{"line":103,"column":13}},{"start":{"line":103,"column":14},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806105","stop":{"line":103,"column":15}},{"start":{"line":103,"column":17},"ann":"a","ident":"ds_d3dw","stop":{"line":103,"column":19}},{"start":{"line":103,"column":20},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | head v == t1BoundedByX2}","ident":"lq_anf$##7205759403792806107","stop":{"line":103,"column":39}},{"start":{"line":103,"column":21},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1BoundedByX2}","ident":"t1BoundedByX2","stop":{"line":103,"column":34}},{"start":{"line":103,"column":35},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0}","ident":"ds_d3dx","stop":{"line":103,"column":38}},{"start":{"line":103,"column":40},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806108","stop":{"line":103,"column":51}},{"start":{"line":103,"column":41},"ann":"{v : GHC.Types.Int | 1 <= v}","ident":"ds_d3du","stop":{"line":103,"column":44}},{"start":{"line":103,"column":47},"ann":"{v : GHC.Types.Int | 1 <= v}","ident":"ds_d3dy","stop":{"line":103,"column":50}},{"start":{"line":107,"column":1},"ann":"forall a . (Data.Heap.Binominal.Heap a)","ident":"Data.Heap.Binominal.empty","stop":{"line":107,"column":6}},{"start":{"line":112,"column":1},"ann":"forall a . (Data.Heap.Binominal.Heap a) -> GHC.Types.Bool","ident":"Data.Heap.Binominal.null","stop":{"line":112,"column":5}},{"start":{"line":116,"column":1},"ann":"forall a . a -> (Data.Heap.Binominal.Heap a)","ident":"Data.Heap.Binominal.singleton","stop":{"line":116,"column":10}},{"start":{"line":116,"column":11},"ann":"a","ident":"x","stop":{"line":116,"column":12}},{"start":{"line":116,"column":21},"ann":"{v : (Data.Heap.Binominal.Tree a) | root v == x}","ident":"lq_anf$##7205759403792806160","stop":{"line":116,"column":34}},{"start":{"line":116,"column":26},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806156","stop":{"line":116,"column":27}},{"start":{"line":116,"column":28},"ann":"{VV : a | VV == x}","ident":"x","stop":{"line":116,"column":29}},{"start":{"line":116,"column":30},"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | len v == 0\n                                            && sumSizeList v == 0}","ident":"_","stop":{"line":116,"column":32}},{"start":{"line":116,"column":33},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806159","stop":{"line":116,"column":34}},{"start":{"line":128,"column":1},"ann":"{VV : GHC.Types.Int | VV >= 0} -> {VV : GHC.Types.Int | VV >= 0} -> {VV : GHC.Types.Int | VV >= 0}","ident":"Data.Heap.Binominal.sumNat","stop":{"line":128,"column":7}},{"start":{"line":128,"column":8},"ann":"{VV : GHC.Types.Int | VV >= 0}","ident":"x","stop":{"line":128,"column":9}},{"start":{"line":128,"column":10},"ann":"{VV : GHC.Types.Int | VV >= 0}","ident":"y","stop":{"line":128,"column":11}},{"start":{"line":128,"column":14},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == x}","ident":"x","stop":{"line":128,"column":15}},{"start":{"line":128,"column":18},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == y}","ident":"y","stop":{"line":128,"column":19}},{"start":{"line":132,"column":1},"ann":"[{VV : GHC.Types.Int | VV >= 0}] -> {VV : GHC.Types.Int | VV >= 0}","ident":"Data.Heap.Binominal.sumNatList","stop":{"line":132,"column":11}},{"start":{"line":132,"column":17},"ann":"{v : GHC.Prim.Int# | v == 0}","ident":"lq_anf$##7205759403792806164","stop":{"line":132,"column":18}},{"start":{"line":133,"column":21},"ann":"{v : GHC.Types.Int | v >= 0} -> {v : GHC.Types.Int | v >= 0} -> {v : GHC.Types.Int | v >= 0}","ident":"Data.Heap.Binominal.sumNat","stop":{"line":133,"column":45}},{"start":{"line":133,"column":28},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == x}","ident":"x","stop":{"line":133,"column":29}},{"start":{"line":133,"column":30},"ann":"{v : GHC.Types.Int | v >= 0}","ident":"lq_anf$##7205759403792806165","stop":{"line":133,"column":45}},{"start":{"line":133,"column":42},"ann":"{v : [{v : GHC.Types.Int | v >= 0}] | len v >= 0\n                                      && v == xs}","ident":"xs","stop":{"line":133,"column":44}},{"start":{"line":150,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\na -> (Data.Heap.Binominal.Heap a) -> (Data.Heap.Binominal.Heap a)","ident":"Data.Heap.Binominal.insert","stop":{"line":150,"column":7}},{"start":{"line":150,"column":8},"ann":"a","ident":"x","stop":{"line":150,"column":9}},{"start":{"line":150,"column":36},"ann":"{v : (Data.Heap.Binominal.Tree a) | root v == x}","ident":"lq_anf$##7205759403792806126","stop":{"line":150,"column":51}},{"start":{"line":150,"column":42},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806122","stop":{"line":150,"column":43}},{"start":{"line":150,"column":44},"ann":"{VV : a | VV == x}","ident":"x","stop":{"line":150,"column":45}},{"start":{"line":150,"column":46},"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | len v == 0\n                                            && sumSizeList v == 0}","ident":"_","stop":{"line":150,"column":48}},{"start":{"line":150,"column":49},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806125","stop":{"line":150,"column":50}},{"start":{"line":154,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\n(Data.Heap.Binominal.Tree a) -> [(Data.Heap.Binominal.Tree a)] -> [(Data.Heap.Binominal.Tree a)]","ident":"Data.Heap.Binominal.insert'","stop":{"line":154,"column":8}},{"start":{"line":154,"column":9},"ann":"(Data.Heap.Binominal.Tree a)","ident":"t","stop":{"line":154,"column":10}},{"start":{"line":154,"column":16},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v == 0\n                                      && sumSizeList v == 0}","ident":"lq_anf$##7205759403792806115","stop":{"line":154,"column":19}},{"start":{"line":154,"column":17},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":154,"column":18}},{"start":{"line":156,"column":5},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == rank t}","ident":"lq_anf$##7205759403792806116","stop":{"line":156,"column":11}},{"start":{"line":156,"column":10},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":156,"column":11}},{"start":{"line":156,"column":14},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == rank t'}","ident":"lq_anf$##7205759403792806117","stop":{"line":156,"column":21}},{"start":{"line":156,"column":19},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t'}","ident":"t'","stop":{"line":156,"column":21}},{"start":{"line":156,"column":24},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":156,"column":25}},{"start":{"line":156,"column":28},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0}","ident":"ds_d3dB","stop":{"line":156,"column":30}},{"start":{"line":157,"column":24},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\n(Data.Heap.Binominal.Tree a) -> [(Data.Heap.Binominal.Tree a)] -> [(Data.Heap.Binominal.Tree a)]","ident":"Data.Heap.Binominal.insert'","stop":{"line":157,"column":47}},{"start":{"line":157,"column":32},"ann":"(Data.Heap.Binominal.Tree a)","ident":"lq_anf$##7205759403792806120","stop":{"line":157,"column":43}},{"start":{"line":157,"column":38},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":157,"column":39}},{"start":{"line":157,"column":40},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t'}","ident":"t'","stop":{"line":157,"column":42}},{"start":{"line":157,"column":44},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == ts'}","ident":"ts'","stop":{"line":157,"column":47}},{"start":{"line":161,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\n[a] -> (Data.Heap.Binominal.Heap a)","ident":"Data.Heap.Binominal.fromList","stop":{"line":161,"column":9}},{"start":{"line":161,"column":19},"ann":"(Data.Heap.Binominal.Heap a) -> a -> (Data.Heap.Binominal.Heap a)","ident":"lq_anf$##7205759403792806152","stop":{"line":161,"column":32}},{"start":{"line":161,"column":25},"ann":"a -> (Data.Heap.Binominal.Heap a) -> (Data.Heap.Binominal.Heap a)","ident":"lq_anf$##7205759403792806151","stop":{"line":161,"column":31}},{"start":{"line":161,"column":33},"ann":"forall a . (Data.Heap.Binominal.Heap a)","ident":"_","stop":{"line":161,"column":38}},{"start":{"line":201,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\n(Data.Heap.Binominal.Heap a) -> (GHC.Maybe.Maybe a)","ident":"Data.Heap.Binominal.minimum","stop":{"line":201,"column":8}},{"start":{"line":201,"column":21},"ann":"forall a .\nx1:(Data.Heap.Binominal.Tree a) -> {VV : a | VV == root x1}","ident":"_","stop":{"line":201,"column":25}},{"start":{"line":201,"column":28},"ann":"forall a b . x1:(a, b) -> {VV : a | VV == fst x1}","ident":"_","stop":{"line":201,"column":31}},{"start":{"line":201,"column":36},"ann":"(GHC.Maybe.Maybe ((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree a)]))","ident":"lq_anf$##7205759403792806183","stop":{"line":201,"column":49}},{"start":{"line":215,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\n(Data.Heap.Binominal.Heap a) -> (Data.Heap.Binominal.Heap a)","ident":"Data.Heap.Binominal.deleteMin","stop":{"line":215,"column":10}},{"start":{"line":216,"column":8},"ann":"(GHC.Maybe.Maybe ((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree a)]))","ident":"lq_anf$##7205759403792806185","stop":{"line":216,"column":21}},{"start":{"line":217,"column":33},"ann":"forall a . (Data.Heap.Binominal.Heap a)","ident":"_","stop":{"line":217,"column":38}},{"start":{"line":218,"column":35},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"lq_anf$##7205759403792806190","stop":{"line":218,"column":66}},{"start":{"line":218,"column":48},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v == len ts1}","ident":"lq_anf$##7205759403792806189","stop":{"line":218,"column":61}},{"start":{"line":218,"column":57},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == ts1}","ident":"ts1","stop":{"line":218,"column":60}},{"start":{"line":218,"column":62},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == ts2}","ident":"ts2","stop":{"line":218,"column":65}},{"start":{"line":222,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\n(Data.Heap.Binominal.Heap a) -> (GHC.Maybe.Maybe (a, (Data.Heap.Binominal.Heap a)))","ident":"Data.Heap.Binominal.deleteMin2","stop":{"line":222,"column":11}},{"start":{"line":222,"column":24},"ann":"forall a . {v : (GHC.Maybe.Maybe a) | isJust v <=> false}","ident":"_","stop":{"line":222,"column":31}},{"start":{"line":223,"column":24},"ann":"forall a b <p2 :: a b -> Bool> .\nx1:a -> x2:{VV : b<p2 x1> | true} -> {v : (a, b)<\\x5 VV -> {VV : b<p2 x5> | true}> | x_Tuple22 v == x2\n                                                                                     && x_Tuple21 v == x1\n                                                                                     && snd v == x2\n                                                                                     && fst v == x1}","ident":"GHC.Tuple.(,)","stop":{"line":223,"column":48}},{"start":{"line":223,"column":26},"ann":"a","ident":"m","stop":{"line":223,"column":27}},{"start":{"line":223,"column":32},"ann":"{VV : a | VV == m}","ident":"m","stop":{"line":223,"column":33}},{"start":{"line":223,"column":35},"ann":"(Data.Heap.Binominal.Heap a)","ident":"lq_anf$##7205759403792806193","stop":{"line":223,"column":46}},{"start":{"line":223,"column":45},"ann":"(Data.Heap.Binominal.Heap a)","ident":"ds_d3eH","stop":{"line":223,"column":46}},{"start":{"line":223,"column":53},"ann":"(GHC.Maybe.Maybe a)","ident":"lq_anf$##7205759403792806195","stop":{"line":223,"column":62}},{"start":{"line":223,"column":61},"ann":"(Data.Heap.Binominal.Heap a)","ident":"ds_d3eH","stop":{"line":223,"column":62}},{"start":{"line":227,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\n[(Data.Heap.Binominal.Tree a)] -> (GHC.Maybe.Maybe ((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree a)]))","ident":"Data.Heap.Binominal.deleteMin'","stop":{"line":227,"column":11}},{"start":{"line":227,"column":17},"ann":"forall a . {v : (GHC.Maybe.Maybe a) | isJust v <=> false}","ident":"_","stop":{"line":227,"column":24}},{"start":{"line":229,"column":8},"ann":"(GHC.Maybe.Maybe ((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree a)]))","ident":"lq_anf$##7205759403792806167","stop":{"line":229,"column":21}},{"start":{"line":229,"column":19},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == ts}","ident":"ts","stop":{"line":229,"column":21}},{"start":{"line":230,"column":16},"ann":"forall a .\nx1:a -> {v : (GHC.Maybe.Maybe a) | fromJust v == x1\n                                   && (isJust v <=> true)}","ident":"GHC.Maybe.Just","stop":{"line":230,"column":28}},{"start":{"line":230,"column":21},"ann":"{v : ((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree a)]) | x_Tuple21 v == t\n                                                                      && fst v == t}","ident":"lq_anf$##7205759403792806170","stop":{"line":230,"column":28}},{"start":{"line":230,"column":22},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":230,"column":23}},{"start":{"line":230,"column":25},"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | len v == 0\n                                            && sumSizeList v == 0}","ident":"_","stop":{"line":230,"column":27}},{"start":{"line":232,"column":10},"ann":"{VV : a | VV == root t}","ident":"lq_anf$##7205759403792806172","stop":{"line":232,"column":16}},{"start":{"line":232,"column":15},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":232,"column":16}},{"start":{"line":232,"column":19},"ann":"{VV : a | VV == root t'}","ident":"lq_anf$##7205759403792806173","stop":{"line":232,"column":26}},{"start":{"line":232,"column":24},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t'}","ident":"t'","stop":{"line":232,"column":26}},{"start":{"line":233,"column":12},"ann":"forall a .\nx1:a -> {v : (GHC.Maybe.Maybe a) | fromJust v == x1\n                                   && (isJust v <=> true)}","ident":"GHC.Maybe.Just","stop":{"line":233,"column":24}},{"start":{"line":233,"column":17},"ann":"{v : ((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree a)]) | x_Tuple22 v == ts\n                                                                      && x_Tuple21 v == t\n                                                                      && snd v == ts\n                                                                      && fst v == t}","ident":"lq_anf$##7205759403792806178","stop":{"line":233,"column":24}},{"start":{"line":233,"column":18},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":233,"column":19}},{"start":{"line":233,"column":21},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == ts}","ident":"ts","stop":{"line":233,"column":23}},{"start":{"line":234,"column":12},"ann":"forall a .\nx1:a -> {v : (GHC.Maybe.Maybe a) | fromJust v == x1\n                                   && (isJust v <=> true)}","ident":"GHC.Maybe.Just","stop":{"line":234,"column":28}},{"start":{"line":234,"column":17},"ann":"{v : ((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree a)]) | x_Tuple21 v == t'\n                                                                      && fst v == t'}","ident":"lq_anf$##7205759403792806177","stop":{"line":234,"column":28}},{"start":{"line":234,"column":18},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t'}","ident":"t'","stop":{"line":234,"column":20}},{"start":{"line":234,"column":22},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":234,"column":23}},{"start":{"line":234,"column":24},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == ts'}","ident":"ts'","stop":{"line":234,"column":27}},{"start":{"line":245,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\n(Data.Heap.Binominal.Heap a) -> (Data.Heap.Binominal.Heap a) -> (Data.Heap.Binominal.Heap a)","ident":"Data.Heap.Binominal.merge","stop":{"line":245,"column":6}},{"start":{"line":249,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\n[(Data.Heap.Binominal.Tree a)] -> [(Data.Heap.Binominal.Tree a)] -> [(Data.Heap.Binominal.Tree a)]","ident":"Data.Heap.Binominal.merge'","stop":{"line":249,"column":7}},{"start":{"line":249,"column":8},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"ts1","stop":{"line":249,"column":11}},{"start":{"line":249,"column":17},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == ts1}","ident":"ts1","stop":{"line":249,"column":20}},{"start":{"line":250,"column":17},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0}","ident":"ds_d3dS","stop":{"line":250,"column":20}},{"start":{"line":252,"column":5},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == rank t1}","ident":"lq_anf$##7205759403792806133","stop":{"line":252,"column":12}},{"start":{"line":252,"column":10},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1}","ident":"t1","stop":{"line":252,"column":12}},{"start":{"line":252,"column":15},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == rank t2}","ident":"lq_anf$##7205759403792806134","stop":{"line":252,"column":22}},{"start":{"line":252,"column":20},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2}","ident":"t2","stop":{"line":252,"column":22}},{"start":{"line":252,"column":25},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1}","ident":"t1","stop":{"line":252,"column":27}},{"start":{"line":252,"column":30},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"lq_anf$##7205759403792806144","stop":{"line":252,"column":45}},{"start":{"line":252,"column":37},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == ts1'}","ident":"ts1'","stop":{"line":252,"column":41}},{"start":{"line":252,"column":42},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0}","ident":"ds_d3dS","stop":{"line":252,"column":45}},{"start":{"line":253,"column":5},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == rank t2}","ident":"lq_anf$##7205759403792806137","stop":{"line":253,"column":12}},{"start":{"line":253,"column":10},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2}","ident":"t2","stop":{"line":253,"column":12}},{"start":{"line":253,"column":15},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == rank t1}","ident":"lq_anf$##7205759403792806138","stop":{"line":253,"column":22}},{"start":{"line":253,"column":20},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1}","ident":"t1","stop":{"line":253,"column":22}},{"start":{"line":253,"column":25},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2}","ident":"t2","stop":{"line":253,"column":27}},{"start":{"line":253,"column":30},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"lq_anf$##7205759403792806143","stop":{"line":253,"column":45}},{"start":{"line":253,"column":37},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == ts1}","ident":"ts1","stop":{"line":253,"column":40}},{"start":{"line":253,"column":41},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == ts2'}","ident":"ts2'","stop":{"line":253,"column":45}},{"start":{"line":254,"column":25},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\n(Data.Heap.Binominal.Tree a) -> [(Data.Heap.Binominal.Tree a)] -> [(Data.Heap.Binominal.Tree a)]","ident":"Data.Heap.Binominal.insert'","stop":{"line":254,"column":64}},{"start":{"line":254,"column":33},"ann":"(Data.Heap.Binominal.Tree a)","ident":"lq_anf$##7205759403792806141","stop":{"line":254,"column":45}},{"start":{"line":254,"column":39},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1}","ident":"t1","stop":{"line":254,"column":41}},{"start":{"line":254,"column":42},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2}","ident":"t2","stop":{"line":254,"column":44}},{"start":{"line":254,"column":46},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"lq_anf$##7205759403792806142","stop":{"line":254,"column":64}},{"start":{"line":254,"column":54},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == ts1'}","ident":"ts1'","stop":{"line":254,"column":58}},{"start":{"line":254,"column":59},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == ts2'}","ident":"ts2'","stop":{"line":254,"column":63}}],"errors":[{"start":{"line":99,"column":40},"stop":{"line":99,"column":51},"message":"Error: Liquid Type Mismatch\n  Inferred type\n    VV : {v : GHC.Types.Int | v == (1 + Data.Heap.Binominal.sumSizeList ?a) + (1 + Data.Heap.Binominal.sumSizeList ?d)}\n \n  not a subtype of Required type\n    VV : {VV : GHC.Types.Int | 1 <= VV\n                               && VV == 1 + Data.Heap.Binominal.sumSizeList ?c}\n \n  In Context\n    t2BoundedByX1 : (Data.Heap.Binominal.Tree a)\n     \n    ?c : {?c : [(Data.Heap.Binominal.Tree a)] | tail ?c == ?a\n                                                && head ?c == t2BoundedByX1\n                                                && len ?c == 1 + len ?a\n                                                && Data.Heap.Binominal.sumSizeList ?c == Data.Heap.Binominal.size t2BoundedByX1 + Data.Heap.Binominal.sumSizeList ?a\n                                                && Data.Heap.Binominal.sumSizeList ?c >= 0\n                                                && len ?c >= 0}\n     \n    ?d : {?d : [(Data.Heap.Binominal.Tree a)] | Data.Heap.Binominal.sumSizeList ?d >= 0\n                                                && len ?d >= 0}\n     \n    ?a : {?a : [(Data.Heap.Binominal.Tree a)] | Data.Heap.Binominal.sumSizeList ?a >= 0\n                                                && len ?a >= 0}"},{"start":{"line":103,"column":40},"stop":{"line":103,"column":51},"message":"Error: Liquid Type Mismatch\n  Inferred type\n    VV : {v : GHC.Types.Int | v == (1 + Data.Heap.Binominal.sumSizeList ?a) + (1 + Data.Heap.Binominal.sumSizeList ?d)}\n \n  not a subtype of Required type\n    VV : {VV : GHC.Types.Int | 1 <= VV\n                               && VV == 1 + Data.Heap.Binominal.sumSizeList ?e}\n \n  In Context\n    t1BoundedByX2 : (Data.Heap.Binominal.Tree a)\n     \n    ?e : {?e : [(Data.Heap.Binominal.Tree a)] | tail ?e == ?d\n                                                && head ?e == t1BoundedByX2\n                                                && len ?e == 1 + len ?d\n                                                && Data.Heap.Binominal.sumSizeList ?e == Data.Heap.Binominal.size t1BoundedByX2 + Data.Heap.Binominal.sumSizeList ?d\n                                                && Data.Heap.Binominal.sumSizeList ?e >= 0\n                                                && len ?e >= 0}\n     \n    ?d : {?d : [(Data.Heap.Binominal.Tree a)] | Data.Heap.Binominal.sumSizeList ?d >= 0\n                                                && len ?d >= 0}\n     \n    ?a : {?a : [(Data.Heap.Binominal.Tree a)] | Data.Heap.Binominal.sumSizeList ?a >= 0\n                                                && len ?a >= 0}"}]}