{"status":"safe","types":{"150":{"30":{"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | Set_emp (listElts v)\n                                            && len v == 0\n                                            && lubRank v == 0\n                                            && sumSizeList v == 0\n                                            && maxRankList v == 0}","ident":"_","row":150,"col":30},"1":{"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> [{t : (Data.Heap.Binominal.Tree a) | size t <= sumSizeList x1}]","ident":"Data.Heap.Binominal.boundedSizeSubtreeLemma","row":150,"col":1}},"352":{"7":{"ann":"{VV : a | VV == root t'}","ident":"x'","row":352,"col":7},"12":{"ann":"{VV : a | VV == root t'}","ident":"_","row":352,"col":12},"17":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t'}","ident":"t'","row":352,"col":17}},"73":{"14":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806004","row":73,"col":14},"30":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0}","ident":"ds_d3cv","row":73,"col":30},"18":{"ann":"{v : GHC.Types.Int | v >= 0}","ident":"lq_anf$##7205759403792806005","row":73,"col":18}},"217":{"1":{"ann":"forall a b .\nx1:a -> (Data.Heap.Binominal.Tree {VV : a | x1 <= VV}) -> b -> b","ident":"Data.Heap.Binominal.assertBoundedTree","row":217,"col":1},"23":{"ann":"a","ident":"x","row":217,"col":23}},"61":{"7":{"ann":"{v : GHC.Types.Int | v == maxRankList xs\n                     && v >= 0}","ident":"r'","row":61,"col":7},"12":{"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {VV : GHC.Types.Int | VV == maxRankList x1\n                                                           && VV >= 0}","ident":"Data.Heap.Binominal.maxRankList","row":61,"col":12},"24":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == xs}","ident":"xs","row":61,"col":24}},"263":{"28":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0}","ident":"ds_d39C","row":263,"col":28},"14":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == len (subtrees t')\n                     && v == rank t'}","ident":"lq_anf$##7205759403792806038","row":263,"col":14},"19":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t'}","ident":"t'","row":263,"col":19},"5":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == len (subtrees t)\n                     && v == rank t}","ident":"lq_anf$##7205759403792806037","row":263,"col":5},"24":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":263,"col":24},"10":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":263,"col":10}},"197":{"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\n[(Data.Heap.Binominal.Tree a)] -> (Data.Set.Internal.Set a)","ident":"Data.Heap.Binominal.eltsTrees","row":197,"col":1},"16":{"ann":"forall a . {v : (Data.Set.Internal.Set a) | Set_emp v}","ident":"_","row":197,"col":16}},"359":{"12":{"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | x <= VV})] | sumSizeList v == sumSizeList ts'\n                                                       && lubRank v >= 0\n                                                       && sumSizeList v >= 0\n                                                       && len v >= 0\n                                                       && maxRankList v >= 0\n                                                       && v == tl}","ident":"tl","row":359,"col":12},"6":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":359,"col":6},"9":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x <= VV}) | size v == size tBounded'\n                                                     && v == hd}","ident":"hd","row":359,"col":9}},"403":{"12":{"ann":"{VV : [a]<\\x1 VV -> {VV : a | x1 <= VV}> | len VV == heapSize h'}","ident":"lq_anf$##7205759403792806150","row":403,"col":12},"3":{"ann":"{VV : a | VV == minElt}","ident":"minElt","row":403,"col":3},"21":{"ann":"{v : (Data.Heap.Binominal.Heap {VV : a | minElt <= VV\n                                         && VV >= minElt}) | heapSize v >= 0\n                                                             && v == h'}","ident":"h'","row":403,"col":21}},"78":{"22":{"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {VV : GHC.Types.Int | VV == sumSizeList x1\n                                                           && VV >= 0\n                                                           && len x1 <= VV}","ident":"Data.Heap.Binominal.sumSizeList","row":78,"col":22},"1":{"ann":"forall a .\nx1:(Data.Heap.Binominal.Heap a) -> {VV : GHC.Types.Int | VV == heapSize x1\n                                                         && VV >= 0\n                                                         && len (unheap x1) <= VV}","ident":"Data.Heap.Binominal.heapSize","row":78,"col":1},"34":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts}","ident":"ts","row":78,"col":34}},"362":{"13":{"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | root t' <= VV})] | len v >= 0\n                                                             && lubRank v >= 0\n                                                             && sumSizeList v >= 0\n                                                             && maxRankList v >= 0\n                                                             && v == ts'}","ident":"ts'","row":362,"col":13},"6":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t'}","ident":"t'","row":362,"col":6},"10":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x' <= VV}) | size v == size tBounded\n                                                      && v == hd}","ident":"hd","row":362,"col":10}},"142":{"28":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts}","ident":"ts","row":142,"col":28},"19":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"ts","row":142,"col":19},"17":{"ann":"(Data.Heap.Binominal.Tree a)","ident":"t","row":142,"col":17},"1":{"ann":"forall a .\nx1:{VV : GHC.Types.Int | VV >= 0} -> {VV : (Data.Heap.Binominal.Tree a) | size VV <= x1} -> [{t : (Data.Heap.Binominal.Tree a) | size t <= x1}] -> [{t : (Data.Heap.Binominal.Tree a) | size t <= x1}]","ident":"Data.Heap.Binominal.consTreeLemma","row":142,"col":1},"24":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":142,"col":24}},"241":{"19":{"ann":"{v : (Data.Heap.Binominal.Heap a) | heapSize v >= 0\n                                    && v == h}","ident":"h","row":241,"col":19},"1":{"ann":"forall a .\nx1:(Data.Heap.Binominal.Heap a) -> {v : GHC.Types.Bool | v <=> heapSize x1 == 0}","ident":"Data.Heap.Binominal.null","row":241,"col":1},"24":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805997","row":241,"col":24},"6":{"ann":"(Data.Heap.Binominal.Heap a)","ident":"h","row":241,"col":6},"10":{"ann":"{v : GHC.Types.Int | v == heapSize h\n                     && v >= 0\n                     && len (unheap h) <= v}","ident":"lq_anf$##7205759403792805995","row":241,"col":10}},"227":{"25":{"ann":"(Data.Heap.Binominal.Tree a)","ident":"_","row":227,"col":25},"53":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2\n                                    && size v == sz2\n                                    && rank v == r2\n                                    && subtrees v == ts2\n                                    && root v == v\n                                    && v == Node v ts2 r2 sz2}","ident":"lq_anf$##7205759403792806022","row":227,"col":53},"9":{"ann":"(Data.Heap.Binominal.Tree a)","ident":"t2BoundedByX2","row":227,"col":9}},"183":{"36":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"ts","row":183,"col":36},"1":{"ann":"forall a .\nx1:{VV : GHC.Types.Int | VV >= 0} -> [{VV : (Data.Heap.Binominal.Tree a) | size VV <= x1}] -> x3:{VV : GHC.Types.Int | VV >= 0\n                                                                                                                       && x1 < VV} -> [{VV : (Data.Heap.Binominal.Tree a) | size VV < x3}]","ident":"Data.Heap.Binominal.strictTransitivitySizeBoundLemma","row":183,"col":1}},"130":{"15":{"ann":"{v : GHC.Types.Int | 1 <= v\n                     && v == 1 + sumSizeList (subtrees x)\n                     && v == size x}","ident":"lq_anf$##7205759403792806085","row":130,"col":15},"20":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == x}","ident":"x","row":130,"col":20},"11":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806084","row":130,"col":11},"3":{"ann":"GHC.Types.Int -> GHC.Types.Int","ident":"lq_anf$##7205759403792806087","row":130,"col":3},"10":{"ann":"GHC.Types.Bool","ident":"lq_anf$##7205759403792806086","row":130,"col":10}},"156":{"25":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":156,"col":25},"17":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == size t + sumSizeList ts\n                     && sumSizeList ts < v\n                     && v == sizetts}","ident":"sizetts","row":156,"col":17},"27":{"ann":"{v : [{v : (Data.Heap.Binominal.Tree a) | size v <= sizetts}] | lubRank v >= 0\n                                                                && sumSizeList v >= 0\n                                                                && len v >= 0\n                                                                && maxRankList v >= 0\n                                                                && v == refinedSubtrees}","ident":"refinedSubtrees","row":156,"col":27}},"354":{"7":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t' <= VV}) | size v == size t'}","ident":"tBounded'","row":354,"col":7},"19":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t' <= VV}) | size v == size t'}","ident":"_","row":354,"col":19},"47":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t'}","ident":"t'","row":354,"col":47}},"129":{"1":{"ann":"forall a .\nx1:(Data.Heap.Binominal.Tree a) -> x2:[(Data.Heap.Binominal.Tree a)] -> {VV : GHC.Types.Int | VV >= 0\n                                                                                              && VV == size x1 + sumSizeList x2\n                                                                                              && sumSizeList x2 < VV}","ident":"Data.Heap.Binominal.sublistSizeLemma","row":129,"col":1},"18":{"ann":"(Data.Heap.Binominal.Tree a)","ident":"x","row":129,"col":18},"20":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"xs","row":129,"col":20}},"332":{"1":{"ann":"forall a .\nx1:{VV : (Data.Heap.Binominal.Heap a) | 0 < len (unheap VV)} -> {VV : [(Data.Heap.Binominal.Tree a)] | 0 < len VV\n                                                                                                       && sumSizeList VV == heapSize x1}","ident":"Data.Heap.Binominal.unheapNonempty","row":332,"col":1},"34":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts}","ident":"lq_anf$##7205759403792806127","row":332,"col":34}},"233":{"43":{"ann":"{v : GHC.Types.Int | 1 <= v\n                     && v == 1 + sumSizeList ts1\n                     && v == sz1}","ident":"sz1","row":233,"col":43},"28":{"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | x2 <= VV})] | lubRank v >= 0\n                                                        && sumSizeList v >= 0\n                                                        && len v >= 0\n                                                        && maxRankList v >= 0\n                                                        && v == ts2}","ident":"ts2","row":233,"col":28},"13":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | tail v == ts2\n                                      && head v == t1BoundedByX2\n                                      && listElts v == Set_cup (Set_sng t1BoundedByX2) (listElts ts2)\n                                      && len v == 1 + len ts2\n                                      && lubRank v == 1 + maxRankList (: t1BoundedByX2 ts2)\n                                      && sumSizeList v == size t1BoundedByX2 + sumSizeList ts2\n                                      && maxRankList v == (if rank t1BoundedByX2 < maxRankList ts2 then maxRankList ts2 else rank t1BoundedByX2)}","ident":"lq_anf$##7205759403792806025","row":233,"col":13},"14":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x2 <= VV}) | size v == size t1BoundedByX1\n                                                      && v == t1BoundedByX2}","ident":"t1BoundedByX2","row":233,"col":14},"49":{"ann":"{v : GHC.Types.Int | 1 <= v\n                     && v == 1 + sumSizeList ts2\n                     && v == sz2}","ident":"sz2","row":233,"col":49},"34":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806027","row":233,"col":34},"33":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806028","row":233,"col":33},"38":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == len ts2\n                     && v == r2}","ident":"r2","row":233,"col":38},"42":{"ann":"{v : GHC.Types.Int | v == sz1 + sz2}","ident":"lq_anf$##7205759403792806029","row":233,"col":42},"10":{"ann":"{VV : a | VV == x2}","ident":"x2","row":233,"col":10}},"270":{"14":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806121","row":270,"col":14},"22":{"ann":"{v : [a] | lubRank v >= 0\n           && sumSizeList v >= 0\n           && len v >= 0\n           && maxRankList v >= 0\n           && v == xs}","ident":"xs","row":270,"col":22},"18":{"ann":"{v : GHC.Types.Int | v == len xs\n                     && v >= 0}","ident":"lq_anf$##7205759403792806122","row":270,"col":18}},"269":{"1":{"ann":"forall a .\nx1:[a] -> {VV : GHC.Types.Int | VV == len x1\n                                && VV >= 0}","ident":"Data.Heap.Binominal.len","row":269,"col":1},"10":{"ann":"{v : GHC.Prim.Int# | v == 0}","ident":"lq_anf$##7205759403792806119","row":269,"col":10}},"353":{"7":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t <= VV}) | size v == size t}","ident":"tBounded","row":353,"col":7},"18":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t <= VV}) | size v == size t}","ident":"_","row":353,"col":18},"46":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":353,"col":46}},"317":{"37":{"ann":"forall a .\nx1:{v : (Data.Heap.Binominal.Heap a) | 0 < len (unheap v)} -> {v : [(Data.Heap.Binominal.Tree a)] | 0 < len v\n                                                                                                    && sumSizeList v == heapSize x1}","ident":"_","row":317,"col":37},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\n{VV : (Data.Heap.Binominal.Heap a) | 0 < len (unheap VV)} -> a","ident":"Data.Heap.Binominal.minimum","row":317,"col":1},"18":{"ann":"forall a b . x1:(a, b) -> {VV : a | VV == fst x1}","ident":"_","row":317,"col":18},"11":{"ann":"forall a .\nx1:(Data.Heap.Binominal.Tree a) -> {VV : a | VV == root x1}","ident":"_","row":317,"col":11},"24":{"ann":"x1:{v : [(Data.Heap.Binominal.Tree a)] | 0 < len v} -> {v : ((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | root (fst x15) <= VV})]) | size (fst v) + sumSizeList (snd v) == sumSizeList x1}","ident":"lq_anf$##7205759403792806131","row":317,"col":24}},"115":{"1":{"ann":"forall a .\nx1:(Data.Heap.Binominal.Tree a) -> {VV : (Data.Heap.Binominal.Tree {VV : a | root x1 <= VV}) | size VV == size x1}","ident":"Data.Heap.Binominal.treeIsBoundedByItsRootLemma","row":115,"col":1}},"72":{"14":{"ann":"{v : GHC.Prim.Int# | v == 0}","ident":"lq_anf$##7205759403792806006","row":72,"col":14},"1":{"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {VV : GHC.Types.Int | VV == lubRank x1\n                                                           && VV >= 0}","ident":"Data.Heap.Binominal.lubRank","row":72,"col":1}},"338":{"16":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList ts1}","ident":"lq_anf$##7205759403792806139","row":338,"col":16},"8":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"lq_anf$##7205759403792806140","row":338,"col":8},"33":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts1}","ident":"ts1","row":338,"col":33},"38":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts2}","ident":"ts2","row":338,"col":38}},"189":{"7":{"ann":"[{v : (Data.Heap.Binominal.Tree a) | size v <= sumSizeList ts}]","ident":"boundBySumSizeList","row":189,"col":7},"28":{"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> [{t : (Data.Heap.Binominal.Tree a) | size t <= sumSizeList x1}]","ident":"Data.Heap.Binominal.boundedSizeSubtreeLemma","row":189,"col":28},"53":{"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | x <= VV})] | lubRank v >= 0\n                                                       && sumSizeList v >= 0\n                                                       && len v >= 0\n                                                       && maxRankList v >= 0\n                                                       && v == ts}","ident":"ts","row":189,"col":53}},"264":{"44":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts'}","ident":"ts'","row":264,"col":44},"40":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t'}","ident":"t'","row":264,"col":40},"38":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":264,"col":38},"24":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Tree a) -> x3:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == size x2 + sumSizeList x3}","ident":"Data.Heap.Binominal.insert'","row":264,"col":24},"32":{"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t + size t'}","ident":"lq_anf$##7205759403792806041","row":264,"col":32}},"190":{"61":{"ann":"{v : GHC.Types.Int | v == sumSizeList ts\n                     && v >= 0\n                     && len ts <= v}","ident":"lq_anf$##7205759403792806092","row":190,"col":61},"7":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"boundByOverallSize","row":190,"col":7},"78":{"ann":"{v : [{v : (Data.Heap.Binominal.Tree a) | size v <= sumSizeList ts}] | lubRank v >= 0\n                                                                       && sumSizeList v >= 0\n                                                                       && len v >= 0\n                                                                       && maxRankList v >= 0\n                                                                       && v == boundBySumSizeList}","ident":"boundBySumSizeList","row":190,"col":78},"28":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"_","row":190,"col":28},"74":{"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | x <= VV})] | lubRank v >= 0\n                                                       && sumSizeList v >= 0\n                                                       && len v >= 0\n                                                       && maxRankList v >= 0\n                                                       && v == ts}","ident":"ts","row":190,"col":74},"103":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t\n                                    && size v == sz\n                                    && rank v == r\n                                    && subtrees v == ts\n                                    && root v == x\n                                    && v == Node x ts r sz}","ident":"lq_anf$##7205759403792806091","row":190,"col":103},"97":{"ann":"{v : GHC.Types.Int | 1 <= v}","ident":"lq_anf$##7205759403792806093","row":190,"col":97}},"83":{"25":{"ann":"{v : GHC.Prim.Int# | v == 1}","ident":"lq_anf$##7205759403792806019","row":83,"col":25},"13":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == n}","ident":"n","row":83,"col":13},"36":{"ann":"{VV : GHC.Types.Int | VV >= 0}","ident":"lq_anf$##7205759403792806018","row":83,"col":36},"1":{"ann":"{VV : GHC.Types.Int | VV >= 0} -> {VV : GHC.Types.Int | VV >= 0}","ident":"Data.Heap.Binominal.pow2","row":83,"col":1},"18":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806010","row":83,"col":18},"46":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806016","row":83,"col":46},"41":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806017","row":83,"col":41},"42":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == n}","ident":"n","row":83,"col":42},"6":{"ann":"{VV : GHC.Types.Int | VV >= 0}","ident":"n","row":83,"col":6},"32":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806014","row":83,"col":32}},"355":{"6":{"ann":"{VV : a | VV == root t\n          && VV == x}","ident":"x","row":355,"col":6},"10":{"ann":"{VV : a | VV == root t'\n          && VV == x'}","ident":"x'","row":355,"col":10}},"232":{"25":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x2 <= VV}) | size v == size t1BoundedByX1}","ident":"_","row":232,"col":25},"57":{"ann":"{VV : a | VV == x1}","ident":"x1","row":232,"col":57},"60":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1BoundedByX1}","ident":"t1BoundedByX1","row":232,"col":60},"9":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x2 <= VV}) | size v == size t1BoundedByX1}","ident":"t1BoundedByX2","row":232,"col":9},"54":{"ann":"{VV : a | VV == x2}","ident":"x2","row":232,"col":54}},"380":{"17":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0}","ident":"ds_d39Y","row":380,"col":17}},"131":{"15":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | tail v == xs\n                                      && head v == x\n                                      && listElts v == Set_cup (Set_sng x) (listElts xs)\n                                      && len v == 1 + len xs\n                                      && lubRank v == 1 + maxRankList (: x xs)\n                                      && sumSizeList v == size x + sumSizeList xs\n                                      && maxRankList v == (if rank x < maxRankList xs then maxRankList xs else rank x)}","ident":"lq_anf$##7205759403792806088","row":131,"col":15},"16":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == x}","ident":"x","row":131,"col":16},"20":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == xs}","ident":"xs","row":131,"col":20},"3":{"ann":"{v : GHC.Types.Int | v >= 0}","ident":"lq_anf$##7205759403792806089","row":131,"col":3}},"350":{"19":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:{VV : [(Data.Heap.Binominal.Tree a)] | 0 < len VV} -> {v : ((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | root (fst v) <= VV})]) | size (fst v) + sumSizeList (snd v) == sumSizeList x2}","ident":"Data.Heap.Binominal.deleteMin'","row":350,"col":19},"12":{"ann":"{VV : [(Data.Heap.Binominal.Tree {VV : a | root t' <= VV})] | len VV >= 0}","ident":"ts'","row":350,"col":12},"30":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0}","ident":"ds_d3b3","row":350,"col":30},"8":{"ann":"(Data.Heap.Binominal.Tree a)","ident":"t'","row":350,"col":8}},"152":{"7":{"ann":"[{v : (Data.Heap.Binominal.Tree a) | size v <= sumSizeList ts}]","ident":"ih","row":152,"col":7},"36":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts}","ident":"ts","row":152,"col":36},"12":{"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> [{t : (Data.Heap.Binominal.Tree a) | size t <= sumSizeList x1}]","ident":"Data.Heap.Binominal.boundedSizeSubtreeLemma","row":152,"col":12}},"336":{"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:{VV : (Data.Heap.Binominal.Heap a) | 0 < len (unheap VV)} -> {v : (Data.Heap.Binominal.Heap a) | 1 + heapSize v == heapSize x2}","ident":"Data.Heap.Binominal.deleteMin","row":336,"col":1},"11":{"ann":"{VV : (Data.Heap.Binominal.Heap a) | 0 < len (unheap VV)}","ident":"h","row":336,"col":11}},"116":{"43":{"ann":"{v : GHC.Types.Int | 1 <= v}","ident":"ds_d39d","row":116,"col":43},"14":{"ann":"{v : GHC.Types.Int | v >= 0}","ident":"ds_d39c","row":116,"col":14},"22":{"ann":"a","ident":"ds_d39a","row":116,"col":22},"34":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0}","ident":"ds_d39b","row":116,"col":34},"3":{"ann":"forall a .\nx1:a -> x2:[(Data.Heap.Binominal.Tree {VV : a | x1 <= VV})] -> x3:{v : GHC.Types.Int | v >= 0\n                                                                                       && v == len x2} -> x4:{v : GHC.Types.Int | 1 <= v\n                                                                                                                                  && v == 1 + sumSizeList x2} -> {v : (Data.Heap.Binominal.Tree a) | size v == x4\n                                                                                                                                                                                                     && rank v == x3\n                                                                                                                                                                                                     && subtrees v == x2\n                                                                                                                                                                                                     && root v == x1}","ident":"Data.Heap.Binominal.Node","row":116,"col":3}},"237":{"14":{"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | Set_emp (listElts v)\n                                            && len v == 0\n                                            && lubRank v == 0\n                                            && sumSizeList v == 0\n                                            && maxRankList v == 0}","ident":"_","row":237,"col":14},"1":{"ann":"forall a . {v : (Data.Heap.Binominal.Heap a) | heapSize v == 0}","ident":"Data.Heap.Binominal.empty","row":237,"col":1}},"221":{"1":{"ann":"forall a b .\nx1:a -> [(Data.Heap.Binominal.Tree {VV : a | x1 <= VV})] -> b -> b","ident":"Data.Heap.Binominal.assertBoundedTreeList","row":221,"col":1},"27":{"ann":"a","ident":"x","row":221,"col":27}},"188":{"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\n(Data.Heap.Binominal.Tree a) -> (Data.Set.Internal.Set a)","ident":"Data.Heap.Binominal.eltsTree","row":188,"col":1},"10":{"ann":"(Data.Heap.Binominal.Tree a)","ident":"t","row":188,"col":10}},"203":{"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\n[(Data.Heap.Binominal.Tree a)] -> [(Data.Set.Internal.Set a)]","ident":"Data.Heap.Binominal.mapEltsTree","row":203,"col":1},"18":{"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | Set_emp (listElts v)\n                                            && len v == 0\n                                            && lubRank v == 0\n                                            && sumSizeList v == 0\n                                            && maxRankList v == 0}","ident":"_","row":203,"col":18}},"191":{"28":{"ann":"{v : GHC.Types.Int | 1 <= v}","ident":"lq_anf$##7205759403792806095","row":191,"col":28},"23":{"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | x <= VV})] | lubRank v >= 0\n                                                       && sumSizeList v >= 0\n                                                       && len v >= 0\n                                                       && maxRankList v >= 0\n                                                       && v == ts}","ident":"ts","row":191,"col":23},"11":{"ann":"{v : GHC.Types.Int | v == sumSizeList ts\n                     && v >= 0\n                     && len ts <= v}","ident":"lq_anf$##7205759403792806094","row":191,"col":11},"33":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t\n                                    && size v == sz\n                                    && rank v == r\n                                    && subtrees v == ts\n                                    && root v == x\n                                    && v == Node x ts r sz}","ident":"lq_anf$##7205759403792806091","row":191,"col":33},"3":{"ann":"(Data.Set.Internal.Set a) -> (Data.Set.Internal.Set a)","ident":"lq_anf$##7205759403792806097","row":191,"col":3},"10":{"ann":"GHC.Types.Bool","ident":"lq_anf$##7205759403792806096","row":191,"col":10}},"1":{"1":{"ann":"GHC.Types.Module","ident":"Data.Heap.Binominal.$trModule","row":1,"col":1}},"361":{"48":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t <= VV}) | size v == size t\n                                                          && v == tBounded}","ident":"tBounded","row":361,"col":48},"43":{"ann":"{VV : a | VV == root t'\n          && VV == x'}","ident":"x'","row":361,"col":43},"14":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x' <= VV}) | size v == size tBounded}","ident":"_","row":361,"col":14},"46":{"ann":"{VV : a | VV == root t\n          && VV == x}","ident":"x","row":361,"col":46},"9":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x' <= VV}) | size v == size tBounded}","ident":"hd","row":361,"col":9}},"343":{"36":{"ann":"((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | root (fst x9) <= VV})])","ident":"lq_anf$##7205759403792806142","row":343,"col":36},"63":{"ann":"{v : (Data.Heap.Binominal.Heap a) | 0 < len (unheap v)\n                                    && heapSize v >= 0\n                                    && v == h}","ident":"h","row":343,"col":63},"47":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | 0 < len v\n                                      && sumSizeList v == heapSize h}","ident":"lq_anf$##7205759403792806141","row":343,"col":47}},"62":{"18":{"ann":"{v : GHC.Types.Int | v == maxRankList xs\n                     && v >= 0\n                     && v == r'}","ident":"r'","row":62,"col":18},"26":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == len (subtrees x)\n                     && v == rank x\n                     && v == r}","ident":"r","row":62,"col":26},"6":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == len (subtrees x)\n                     && v == rank x\n                     && v == r}","ident":"r","row":62,"col":6},"10":{"ann":"{v : GHC.Types.Int | v == maxRankList xs\n                     && v >= 0\n                     && v == r'}","ident":"r'","row":62,"col":10}},"400":{"22":{"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | Set_emp (listElts v)\n                                            && len v == 0\n                                            && lubRank v == 0\n                                            && sumSizeList v == 0\n                                            && maxRankList v == 0}","ident":"_","row":400,"col":22},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Heap a) -> {VV : [a]<\\x1 VV -> {VV : a | x1 <= VV}> | len VV == heapSize x2}","ident":"Data.Heap.Binominal.heapSort","row":400,"col":1}},"348":{"22":{"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | Set_emp (listElts v)\n                                            && len v == 0\n                                            && lubRank v == 0\n                                            && sumSizeList v == 0\n                                            && maxRankList v == 0}","ident":"_","row":348,"col":22},"19":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":348,"col":19},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:{VV : [(Data.Heap.Binominal.Tree a)] | 0 < len VV} -> {v : ((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | root (fst v) <= VV})]) | size (fst v) + sumSizeList (snd v) == sumSizeList x2}","ident":"Data.Heap.Binominal.deleteMin'","row":348,"col":1},"18":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | Set_emp (listElts v)\n                                      && len v == 0\n                                      && lubRank v == 0\n                                      && sumSizeList v == 0\n                                      && maxRankList v == 0}","ident":"lq_anf$##7205759403792806078","row":348,"col":18}},"384":{"25":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Tree a) -> x3:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == size x2 + sumSizeList x3}","ident":"Data.Heap.Binominal.insert'","row":384,"col":25},"59":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts2'}","ident":"ts2'","row":384,"col":59},"39":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1}","ident":"t1","row":384,"col":39},"46":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList ts1' + sumSizeList ts2'}","ident":"lq_anf$##7205759403792806063","row":384,"col":46},"33":{"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t1 + size t2}","ident":"lq_anf$##7205759403792806062","row":384,"col":33},"42":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2}","ident":"t2","row":384,"col":42},"54":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts1'}","ident":"ts1'","row":384,"col":54}},"351":{"7":{"ann":"{VV : a | VV == root t}","ident":"x","row":351,"col":7},"16":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":351,"col":16},"11":{"ann":"{VV : a | VV == root t}","ident":"_","row":351,"col":11}},"153":{"7":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == size t + sumSizeList ts\n                     && sumSizeList ts < v}","ident":"sizetts","row":153,"col":7},"36":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts}","ident":"ts","row":153,"col":36},"17":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == size t + sumSizeList ts\n                     && sumSizeList ts < v}","ident":"_","row":153,"col":17},"34":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":153,"col":34}},"337":{"31":{"ann":"((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | root (fst x9) <= VV})])","ident":"lq_anf$##7205759403792806136","row":337,"col":31},"58":{"ann":"{v : (Data.Heap.Binominal.Heap a) | 0 < len (unheap v)\n                                    && heapSize v >= 0\n                                    && v == h}","ident":"h","row":337,"col":58},"42":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | 0 < len v\n                                      && sumSizeList v == heapSize h}","ident":"lq_anf$##7205759403792806135","row":337,"col":42}},"192":{"27":{"ann":"(Data.Set.Internal.Set a)","ident":"lq_anf$##7205759403792806099","row":192,"col":27},"11":{"ann":"{v : (Data.Set.Internal.Set a) | v == Set_sng x}","ident":"lq_anf$##7205759403792806098","row":192,"col":11},"38":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == boundByOverallSize}","ident":"boundByOverallSize","row":192,"col":38},"3":{"ann":"(Data.Set.Internal.Set a)","ident":"lq_anf$##7205759403792806100","row":192,"col":3},"24":{"ann":"{VV : a | VV == x}","ident":"x","row":192,"col":24}},"323":{"44":{"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | Set_emp (listElts v)\n                                            && len v == 0\n                                            && lubRank v == 0\n                                            && sumSizeList v == 0\n                                            && maxRankList v == 0}","ident":"_","row":323,"col":44},"17":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"xs","row":323,"col":17},"1":{"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList x1}","ident":"Data.Heap.Binominal.reverseHeapList","row":323,"col":1},"41":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == xs}","ident":"xs","row":323,"col":41}},"121":{"30":{"ann":"a","ident":"x","row":121,"col":30},"1":{"ann":"forall a .\nx1:a -> x2:{VV : a | x1 <= VV} -> x3:(Data.Heap.Binominal.Tree {VV : a | x2 <= VV}) -> {VV : (Data.Heap.Binominal.Tree {VV : a | x1 <= VV}) | size VV == size x3}","ident":"Data.Heap.Binominal.boundedTreeTransitivityLemma","row":121,"col":1},"34":{"ann":"(Data.Heap.Binominal.Tree {VV : a | y <= VV})","ident":"tree","row":121,"col":34},"32":{"ann":"{VV : a | x <= VV}","ident":"y","row":121,"col":32}},"46":{"1":{"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {VV : GHC.Types.Int | VV == sumSizeList x1\n                                                           && VV >= 0\n                                                           && len x1 <= VV}","ident":"Data.Heap.Binominal.sumSizeList","row":46,"col":1},"18":{"ann":"{v : GHC.Prim.Int# | v == 0}","ident":"lq_anf$##7205759403792805991","row":46,"col":18}},"138":{"1":{"ann":"forall a .\nx1:{VV : GHC.Types.Int | VV >= 0} -> [{t : (Data.Heap.Binominal.Tree a) | size t <= x1}] -> x3:{VV : GHC.Types.Int | VV >= 0\n                                                                                                                     && x1 <= VV} -> [{t : (Data.Heap.Binominal.Tree a) | size t <= x3}]","ident":"Data.Heap.Binominal.subtreeTransitiveLemma","row":138,"col":1},"26":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"ts","row":138,"col":26}},"261":{"17":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":261,"col":17},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Tree a) -> x3:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == size x2 + sumSizeList x3}","ident":"Data.Heap.Binominal.insert'","row":261,"col":1},"16":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | Set_emp (listElts v)\n                                      && len v == 0\n                                      && lubRank v == 0\n                                      && sumSizeList v == 0\n                                      && maxRankList v == 0}","ident":"lq_anf$##7205759403792806036","row":261,"col":16},"9":{"ann":"(Data.Heap.Binominal.Tree a)","ident":"t","row":261,"col":9}},"379":{"17":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts1}","ident":"ts1","row":379,"col":17},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:[(Data.Heap.Binominal.Tree a)] -> x3:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList x2 + sumSizeList x3}","ident":"Data.Heap.Binominal.merge'","row":379,"col":1},"8":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"ts1","row":379,"col":8}},"58":{"1":{"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {VV : GHC.Types.Int | VV == maxRankList x1\n                                                           && VV >= 0}","ident":"Data.Heap.Binominal.maxRankList","row":58,"col":1},"18":{"ann":"{v : GHC.Prim.Int# | v == 0}","ident":"lq_anf$##7205759403792805999","row":58,"col":18}},"342":{"12":{"ann":"{VV : (Data.Heap.Binominal.Heap a) | 0 < len (unheap VV)}","ident":"h","row":342,"col":12},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:{VV : (Data.Heap.Binominal.Heap a) | 0 < len (unheap VV)} -> {v : (a, (Data.Heap.Binominal.Heap {VV : a | fst v <= VV})) | 1 + heapSize (snd v) == heapSize x2}","ident":"Data.Heap.Binominal.deleteMin2","row":342,"col":1}},"225":{"30":{"ann":"(Data.Heap.Binominal.Tree a)","ident":"t2","row":225,"col":30},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Tree a) -> x3:(Data.Heap.Binominal.Tree a) -> {v : (Data.Heap.Binominal.Tree a) | size v == size x2 + size x3}","ident":"Data.Heap.Binominal.link","row":225,"col":1},"6":{"ann":"(Data.Heap.Binominal.Tree a)","ident":"t1","row":225,"col":6}},"257":{"36":{"ann":"{v : (Data.Heap.Binominal.Tree a) | root v == x}","ident":"lq_anf$##7205759403792806048","row":257,"col":36},"49":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806047","row":257,"col":49},"22":{"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {v : (Data.Heap.Binominal.Heap a) | unheap v == x1\n                                                                         && heapSize v == sumSizeList x1}","ident":"Data.Heap.Binominal.Heap","row":257,"col":22},"44":{"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | Set_emp (listElts v)\n                                            && len v == 0\n                                            && lubRank v == 0\n                                            && sumSizeList v == 0\n                                            && maxRankList v == 0}","ident":"_","row":257,"col":44},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\na -> x3:(Data.Heap.Binominal.Heap a) -> {v : (Data.Heap.Binominal.Heap a) | 1 + heapSize x3 == heapSize v}","ident":"Data.Heap.Binominal.insert","row":257,"col":1},"52":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts}","ident":"ts","row":257,"col":52},"27":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"lq_anf$##7205759403792806049","row":257,"col":27},"8":{"ann":"a","ident":"x","row":257,"col":8},"47":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806045","row":257,"col":47},"42":{"ann":"{VV : a | VV == x}","ident":"x","row":257,"col":42}},"198":{"28":{"ann":"(Data.Set.Internal.Set a)","ident":"lq_anf$##7205759403792806102","row":198,"col":28},"52":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts}","ident":"ts","row":198,"col":52},"20":{"ann":"{v : (GHC.Classes.Ord a) | v == $dOrd_a2ZO}","ident":"$dOrd_a2ZO","row":198,"col":20},"41":{"ann":"(Data.Set.Internal.Set a)","ident":"lq_anf$##7205759403792806103","row":198,"col":41},"38":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":198,"col":38}},"154":{"7":{"ann":"{v : GHC.Types.Int | v == sumSizeList ts\n                     && v >= 0\n                     && len ts <= v}","ident":"sizets","row":154,"col":7},"28":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts}","ident":"ts","row":154,"col":28},"16":{"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {VV : GHC.Types.Int | VV == sumSizeList x1\n                                                           && VV >= 0\n                                                           && len x1 <= VV}","ident":"Data.Heap.Binominal.sumSizeList","row":154,"col":16}},"231":{"25":{"ann":"(Data.Heap.Binominal.Tree a)","ident":"_","row":231,"col":25},"53":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1\n                                    && size v == sz1\n                                    && rank v == r1\n                                    && subtrees v == ts1\n                                    && root v == x1\n                                    && v == Node x1 ts1 r1 sz1}","ident":"lq_anf$##7205759403792806021","row":231,"col":53},"9":{"ann":"(Data.Heap.Binominal.Tree a)","ident":"t1BoundedByX1","row":231,"col":9}},"213":{"1":{"ann":"forall a . {v : GHC.Types.Bool | v} -> a -> a","ident":"Data.Heap.Binominal.assert","row":213,"col":1},"10":{"ann":"a","ident":"x","row":213,"col":10}},"228":{"25":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x1 <= VV}) | size v == size t2BoundedByX2}","ident":"_","row":228,"col":25},"57":{"ann":"{VV : a | VV == x2}","ident":"x2","row":228,"col":57},"60":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2BoundedByX2}","ident":"t2BoundedByX2","row":228,"col":60},"9":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x1 <= VV}) | size v == size t2BoundedByX2}","ident":"t2BoundedByX1","row":228,"col":9},"54":{"ann":"{VV : a | VV == x1}","ident":"x1","row":228,"col":54}},"383":{"15":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == len (subtrees t1)\n                     && v == rank t1}","ident":"lq_anf$##7205759403792806059","row":383,"col":15},"37":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts1}","ident":"ts1","row":383,"col":37},"25":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2}","ident":"t2","row":383,"col":25},"30":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList ts1 + sumSizeList ts2'}","ident":"lq_anf$##7205759403792806064","row":383,"col":30},"20":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1}","ident":"t1","row":383,"col":20},"5":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == len (subtrees t2)\n                     && v == rank t2}","ident":"lq_anf$##7205759403792806058","row":383,"col":5},"41":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts2'}","ident":"ts2'","row":383,"col":41},"10":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2}","ident":"t2","row":383,"col":10}},"275":{"28":{"ann":"{v : (Data.Heap.Binominal.Heap a) | heapSize v == len xs}","ident":"lq_anf$##7205759403792806109","row":275,"col":28},"19":{"ann":"{v : (GHC.Classes.Ord a) | v == $dOrd_a2S7}","ident":"$dOrd_a2S7","row":275,"col":19},"26":{"ann":"{VV : a | VV == x}","ident":"x","row":275,"col":26},"38":{"ann":"{v : [a] | lubRank v >= 0\n           && sumSizeList v >= 0\n           && len v >= 0\n           && maxRankList v >= 0\n           && v == xs}","ident":"xs","row":275,"col":38}},"146":{"22":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == h}","ident":"h","row":146,"col":22},"1":{"ann":"forall a .\nx1:{VV : GHC.Types.Int | VV >= 0} -> {VV : [{t : (Data.Heap.Binominal.Tree a) | size t < x1}] | VV /= []} -> {t : (Data.Heap.Binominal.Tree a) | size t < x1}","ident":"Data.Heap.Binominal.testTrick","row":146,"col":1}},"344":{"25":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList ts1}","ident":"lq_anf$##7205759403792806145","row":344,"col":25},"12":{"ann":"(Data.Heap.Binominal.Heap a)","ident":"lq_anf$##7205759403792806147","row":344,"col":12},"17":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"lq_anf$##7205759403792806146","row":344,"col":17},"4":{"ann":"{VV : a | VV == minElt}","ident":"minElt","row":344,"col":4},"47":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts2}","ident":"ts2","row":344,"col":47},"42":{"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | minElt <= VV})] | lubRank v >= 0\n                                                            && sumSizeList v >= 0\n                                                            && len v >= 0\n                                                            && maxRankList v >= 0\n                                                            && v == ts1}","ident":"ts1","row":344,"col":42}},"245":{"28":{"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | Set_emp (listElts v)\n                                            && len v == 0\n                                            && lubRank v == 0\n                                            && sumSizeList v == 0\n                                            && maxRankList v == 0}","ident":"_","row":245,"col":28},"31":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806112","row":245,"col":31},"1":{"ann":"forall a .\na -> {v : (Data.Heap.Binominal.Heap a) | heapSize v == 1}","ident":"Data.Heap.Binominal.singleton","row":245,"col":1},"26":{"ann":"{VV : a | VV == x}","ident":"x","row":245,"col":26},"20":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"lq_anf$##7205759403792806117","row":245,"col":20},"11":{"ann":"a","ident":"x","row":245,"col":11},"33":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806114","row":245,"col":33},"21":{"ann":"{v : (Data.Heap.Binominal.Tree a) | root v == x}","ident":"lq_anf$##7205759403792806115","row":245,"col":21}},"47":{"43":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == xs}","ident":"xs","row":47,"col":43},"31":{"ann":"{v : GHC.Types.Int | v == sumSizeList xs\n                     && v >= 0\n                     && len xs <= v}","ident":"lq_anf$##7205759403792805993","row":47,"col":31},"22":{"ann":"{v : GHC.Types.Int | 1 <= v\n                     && v == 1 + sumSizeList (subtrees x)\n                     && v == size x}","ident":"lq_anf$##7205759403792805992","row":47,"col":22},"27":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == x}","ident":"x","row":47,"col":27}},"407":{"28":{"ann":"x1:[a] -> {v : (Data.Heap.Binominal.Heap a) | heapSize v == len x1}","ident":"lq_anf$##7205759403792806152","row":407,"col":28},"17":{"ann":"x1:(Data.Heap.Binominal.Heap a) -> {v : [a]<\\x5 VV -> {VV : a | x5 <= VV}> | len v == heapSize x1}","ident":"lq_anf$##7205759403792806151","row":407,"col":17},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:[a] -> {VV : [a]<\\x1 VV -> {VV : a | x1 <= VV}> | len VV == len x2}","ident":"Data.Heap.Binominal.sortUsingHeap","row":407,"col":1}},"226":{"5":{"ann":"{VV : a | VV == x1}","ident":"x1","row":226,"col":5},"11":{"ann":"{VV : a | VV == x2}","ident":"x2","row":226,"col":11}},"60":{"7":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == len (subtrees x)\n                     && v == rank x}","ident":"r","row":60,"col":7},"16":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == x}","ident":"x","row":60,"col":16},"11":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == len (subtrees x)\n                     && v == rank x}","ident":"_","row":60,"col":11}},"204":{"31":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":204,"col":31},"22":{"ann":"(Data.Set.Internal.Set a)","ident":"lq_anf$##7205759403792806105","row":204,"col":22},"35":{"ann":"[(Data.Set.Internal.Set a)]","ident":"lq_anf$##7205759403792806106","row":204,"col":35},"47":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts}","ident":"ts","row":204,"col":47}},"327":{"29":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == acc}","ident":"acc","row":327,"col":29},"1":{"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> x2:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList x1 + sumSizeList x2}","ident":"Data.Heap.Binominal.reverseHeapListAux","row":327,"col":1},"23":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"acc","row":327,"col":23}},"358":{"14":{"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | x <= VV})] | sumSizeList v == sumSizeList ts'}","ident":"_","row":358,"col":14},"49":{"ann":"{VV : a | VV == root t'\n          && VV == x'}","ident":"x'","row":358,"col":49},"52":{"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | root t' <= VV})] | len v >= 0\n                                                             && lubRank v >= 0\n                                                             && sumSizeList v >= 0\n                                                             && maxRankList v >= 0\n                                                             && v == ts'}","ident":"ts'","row":358,"col":52},"47":{"ann":"{VV : a | VV == root t\n          && VV == x}","ident":"x","row":358,"col":47},"9":{"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | x <= VV})] | sumSizeList v == sumSizeList ts'}","ident":"tl","row":358,"col":9}},"125":{"36":{"ann":"{VV : a | x <= VV}","ident":"y","row":125,"col":36},"1":{"ann":"forall a .\nx1:a -> x2:{VV : a | x1 <= VV} -> x3:[(Data.Heap.Binominal.Tree {VV : a | x2 <= VV})] -> {v : [(Data.Heap.Binominal.Tree {VV : a | x1 <= VV})] | sumSizeList v == sumSizeList x3}","ident":"Data.Heap.Binominal.boundedTreeListTransitivityLemma","row":125,"col":1},"34":{"ann":"a","ident":"x","row":125,"col":34},"38":{"ann":"[(Data.Heap.Binominal.Tree {VV : a | y <= VV})]","ident":"ts","row":125,"col":38}},"402":{"22":{"ann":"(a, (Data.Heap.Binominal.Heap {VV : a | fst x4 <= VV}))","ident":"_","row":402,"col":22},"16":{"ann":"(Data.Heap.Binominal.Heap {VV : a | minElt <= VV\n                                    && VV >= minElt})","ident":"h'","row":402,"col":16},"8":{"ann":"a","ident":"minElt","row":402,"col":8},"33":{"ann":"{v : (Data.Heap.Binominal.Heap a) | heapSize v >= 0}","ident":"ds_d3bS","row":402,"col":33}},"229":{"43":{"ann":"{v : GHC.Types.Int | 1 <= v\n                     && v == 1 + sumSizeList ts1\n                     && v == sz1}","ident":"sz1","row":229,"col":43},"28":{"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | x1 <= VV})] | lubRank v >= 0\n                                                        && sumSizeList v >= 0\n                                                        && len v >= 0\n                                                        && maxRankList v >= 0\n                                                        && v == ts1}","ident":"ts1","row":229,"col":28},"13":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | tail v == ts1\n                                      && head v == t2BoundedByX1\n                                      && listElts v == Set_cup (Set_sng t2BoundedByX1) (listElts ts1)\n                                      && len v == 1 + len ts1\n                                      && lubRank v == 1 + maxRankList (: t2BoundedByX1 ts1)\n                                      && sumSizeList v == size t2BoundedByX1 + sumSizeList ts1\n                                      && maxRankList v == (if rank t2BoundedByX1 < maxRankList ts1 then maxRankList ts1 else rank t2BoundedByX1)}","ident":"lq_anf$##7205759403792806030","row":229,"col":13},"14":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x1 <= VV}) | size v == size t2BoundedByX2\n                                                      && v == t2BoundedByX1}","ident":"t2BoundedByX1","row":229,"col":14},"49":{"ann":"{v : GHC.Types.Int | 1 <= v\n                     && v == 1 + sumSizeList ts2\n                     && v == sz2}","ident":"sz2","row":229,"col":49},"34":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806032","row":229,"col":34},"33":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806033","row":229,"col":33},"38":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == len ts1\n                     && v == r1}","ident":"r1","row":229,"col":38},"42":{"ann":"{v : GHC.Types.Int | v == sz1 + sz2}","ident":"lq_anf$##7205759403792806034","row":229,"col":42},"10":{"ann":"{VV : a | VV == x1}","ident":"x1","row":229,"col":10}},"382":{"15":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == len (subtrees t2)\n                     && v == rank t2}","ident":"lq_anf$##7205759403792806055","row":382,"col":15},"37":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts1'}","ident":"ts1'","row":382,"col":37},"25":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1}","ident":"t1","row":382,"col":25},"30":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"lq_anf$##7205759403792806065","row":382,"col":30},"20":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2}","ident":"t2","row":382,"col":20},"5":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == len (subtrees t1)\n                     && v == rank t1}","ident":"lq_anf$##7205759403792806054","row":382,"col":5},"42":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0}","ident":"ds_d39Y","row":382,"col":42},"10":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1}","ident":"t1","row":382,"col":10}},"274":{"15":{"ann":"forall a . {v : (Data.Heap.Binominal.Heap a) | heapSize v == 0}","ident":"_","row":274,"col":15},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:[a] -> {v : (Data.Heap.Binominal.Heap a) | heapSize v == len x2}","ident":"Data.Heap.Binominal.fromList","row":274,"col":1}},"328":{"56":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == x}","ident":"x","row":328,"col":56},"52":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == xs}","ident":"xs","row":328,"col":52},"58":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == acc}","ident":"acc","row":328,"col":58},"55":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | tail v == acc\n                                      && head v == x\n                                      && listElts v == Set_cup (Set_sng x) (listElts acc)\n                                      && len v == 1 + len acc\n                                      && lubRank v == 1 + maxRankList (: x acc)\n                                      && sumSizeList v == size x + sumSizeList acc\n                                      && maxRankList v == (if rank x < maxRankList acc then maxRankList acc else rank x)}","ident":"lq_anf$##7205759403792806124","row":328,"col":55},"33":{"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> x2:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList x1 + sumSizeList x2}","ident":"Data.Heap.Binominal.reverseHeapListAux","row":328,"col":33}},"375":{"48":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts2}","ident":"ts2","row":375,"col":48},"31":{"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {v : (Data.Heap.Binominal.Heap a) | unheap v == x1\n                                                                         && heapSize v == sumSizeList x1}","ident":"Data.Heap.Binominal.Heap","row":375,"col":31},"36":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList ts1 + sumSizeList ts2}","ident":"lq_anf$##7205759403792806070","row":375,"col":36},"44":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts1}","ident":"ts1","row":375,"col":44},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Heap a) -> x3:(Data.Heap.Binominal.Heap a) -> {VV : (Data.Heap.Binominal.Heap a) | heapSize VV == heapSize x2 + heapSize x3}","ident":"Data.Heap.Binominal.merge","row":375,"col":1}},"155":{"48":{"ann":"{v : GHC.Types.Int | v == sumSizeList ts\n                     && v >= 0\n                     && len ts <= v\n                     && v == sizets}","ident":"sizets","row":155,"col":48},"7":{"ann":"[{v : (Data.Heap.Binominal.Tree a) | size v <= sizetts}]","ident":"refinedSubtrees","row":155,"col":7},"25":{"ann":"[{v : (Data.Heap.Binominal.Tree a) | size v <= sizetts}]","ident":"_","row":155,"col":25},"58":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == size t + sumSizeList ts\n                     && sumSizeList ts < v\n                     && v == sizetts}","ident":"sizetts","row":155,"col":58},"55":{"ann":"{v : [{v : (Data.Heap.Binominal.Tree a) | size v <= sumSizeList ts}] | lubRank v >= 0\n                                                                       && sumSizeList v >= 0\n                                                                       && len v >= 0\n                                                                       && maxRankList v >= 0\n                                                                       && v == ih}","ident":"ih","row":155,"col":55}},"357":{"48":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t' <= VV}) | size v == size t'\n                                                           && v == tBounded'}","ident":"tBounded'","row":357,"col":48},"43":{"ann":"{VV : a | VV == root t\n          && VV == x}","ident":"x","row":357,"col":43},"14":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x <= VV}) | size v == size tBounded'}","ident":"_","row":357,"col":14},"45":{"ann":"{VV : a | VV == root t'\n          && VV == x'}","ident":"x'","row":357,"col":45},"9":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x <= VV}) | size v == size tBounded'}","ident":"hd","row":357,"col":9}}},"sptypes":[{"start":{"line":1,"column":1},"ann":"GHC.Types.Module","ident":"Data.Heap.Binominal.$trModule","stop":{"line":1,"column":1}},{"start":{"line":46,"column":1},"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {VV : GHC.Types.Int | VV == sumSizeList x1\n                                                           && VV >= 0\n                                                           && len x1 <= VV}","ident":"Data.Heap.Binominal.sumSizeList","stop":{"line":46,"column":12}},{"start":{"line":46,"column":18},"ann":"{v : GHC.Prim.Int# | v == 0}","ident":"lq_anf$##7205759403792805991","stop":{"line":46,"column":19}},{"start":{"line":47,"column":22},"ann":"{v : GHC.Types.Int | 1 <= v\n                     && v == 1 + sumSizeList (subtrees x)\n                     && v == size x}","ident":"lq_anf$##7205759403792805992","stop":{"line":47,"column":28}},{"start":{"line":47,"column":27},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == x}","ident":"x","stop":{"line":47,"column":28}},{"start":{"line":47,"column":31},"ann":"{v : GHC.Types.Int | v == sumSizeList xs\n                     && v >= 0\n                     && len xs <= v}","ident":"lq_anf$##7205759403792805993","stop":{"line":47,"column":45}},{"start":{"line":47,"column":43},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == xs}","ident":"xs","stop":{"line":47,"column":45}},{"start":{"line":58,"column":1},"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {VV : GHC.Types.Int | VV == maxRankList x1\n                                                           && VV >= 0}","ident":"Data.Heap.Binominal.maxRankList","stop":{"line":58,"column":12}},{"start":{"line":58,"column":18},"ann":"{v : GHC.Prim.Int# | v == 0}","ident":"lq_anf$##7205759403792805999","stop":{"line":58,"column":19}},{"start":{"line":60,"column":7},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == len (subtrees x)\n                     && v == rank x}","ident":"r","stop":{"line":60,"column":8}},{"start":{"line":60,"column":11},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == len (subtrees x)\n                     && v == rank x}","ident":"_","stop":{"line":60,"column":17}},{"start":{"line":60,"column":16},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == x}","ident":"x","stop":{"line":60,"column":17}},{"start":{"line":61,"column":7},"ann":"{v : GHC.Types.Int | v == maxRankList xs\n                     && v >= 0}","ident":"r'","stop":{"line":61,"column":9}},{"start":{"line":61,"column":12},"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {VV : GHC.Types.Int | VV == maxRankList x1\n                                                           && VV >= 0}","ident":"Data.Heap.Binominal.maxRankList","stop":{"line":61,"column":26}},{"start":{"line":61,"column":24},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == xs}","ident":"xs","stop":{"line":61,"column":26}},{"start":{"line":62,"column":6},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == len (subtrees x)\n                     && v == rank x\n                     && v == r}","ident":"r","stop":{"line":62,"column":7}},{"start":{"line":62,"column":10},"ann":"{v : GHC.Types.Int | v == maxRankList xs\n                     && v >= 0\n                     && v == r'}","ident":"r'","stop":{"line":62,"column":12}},{"start":{"line":62,"column":18},"ann":"{v : GHC.Types.Int | v == maxRankList xs\n                     && v >= 0\n                     && v == r'}","ident":"r'","stop":{"line":62,"column":20}},{"start":{"line":62,"column":26},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == len (subtrees x)\n                     && v == rank x\n                     && v == r}","ident":"r","stop":{"line":62,"column":27}},{"start":{"line":72,"column":1},"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {VV : GHC.Types.Int | VV == lubRank x1\n                                                           && VV >= 0}","ident":"Data.Heap.Binominal.lubRank","stop":{"line":72,"column":8}},{"start":{"line":72,"column":14},"ann":"{v : GHC.Prim.Int# | v == 0}","ident":"lq_anf$##7205759403792806006","stop":{"line":72,"column":15}},{"start":{"line":73,"column":14},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806004","stop":{"line":73,"column":15}},{"start":{"line":73,"column":18},"ann":"{v : GHC.Types.Int | v >= 0}","ident":"lq_anf$##7205759403792806005","stop":{"line":73,"column":32}},{"start":{"line":73,"column":30},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0}","ident":"ds_d3cv","stop":{"line":73,"column":32}},{"start":{"line":78,"column":1},"ann":"forall a .\nx1:(Data.Heap.Binominal.Heap a) -> {VV : GHC.Types.Int | VV == heapSize x1\n                                                         && VV >= 0\n                                                         && len (unheap x1) <= VV}","ident":"Data.Heap.Binominal.heapSize","stop":{"line":78,"column":9}},{"start":{"line":78,"column":22},"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {VV : GHC.Types.Int | VV == sumSizeList x1\n                                                           && VV >= 0\n                                                           && len x1 <= VV}","ident":"Data.Heap.Binominal.sumSizeList","stop":{"line":78,"column":36}},{"start":{"line":78,"column":34},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts}","ident":"ts","stop":{"line":78,"column":36}},{"start":{"line":83,"column":1},"ann":"{VV : GHC.Types.Int | VV >= 0} -> {VV : GHC.Types.Int | VV >= 0}","ident":"Data.Heap.Binominal.pow2","stop":{"line":83,"column":5}},{"start":{"line":83,"column":6},"ann":"{VV : GHC.Types.Int | VV >= 0}","ident":"n","stop":{"line":83,"column":7}},{"start":{"line":83,"column":13},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == n}","ident":"n","stop":{"line":83,"column":14}},{"start":{"line":83,"column":18},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806010","stop":{"line":83,"column":19}},{"start":{"line":83,"column":25},"ann":"{v : GHC.Prim.Int# | v == 1}","ident":"lq_anf$##7205759403792806019","stop":{"line":83,"column":26}},{"start":{"line":83,"column":32},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806014","stop":{"line":83,"column":33}},{"start":{"line":83,"column":36},"ann":"{VV : GHC.Types.Int | VV >= 0}","ident":"lq_anf$##7205759403792806018","stop":{"line":83,"column":48}},{"start":{"line":83,"column":41},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806017","stop":{"line":83,"column":48}},{"start":{"line":83,"column":42},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == n}","ident":"n","stop":{"line":83,"column":43}},{"start":{"line":83,"column":46},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806016","stop":{"line":83,"column":47}},{"start":{"line":115,"column":1},"ann":"forall a .\nx1:(Data.Heap.Binominal.Tree a) -> {VV : (Data.Heap.Binominal.Tree {VV : a | root x1 <= VV}) | size VV == size x1}","ident":"Data.Heap.Binominal.treeIsBoundedByItsRootLemma","stop":{"line":115,"column":28}},{"start":{"line":116,"column":3},"ann":"forall a .\nx1:a -> x2:[(Data.Heap.Binominal.Tree {VV : a | x1 <= VV})] -> x3:{v : GHC.Types.Int | v >= 0\n                                                                                       && v == len x2} -> x4:{v : GHC.Types.Int | 1 <= v\n                                                                                                                                  && v == 1 + sumSizeList x2} -> {v : (Data.Heap.Binominal.Tree a) | size v == x4\n                                                                                                                                                                                                     && rank v == x3\n                                                                                                                                                                                                     && subtrees v == x2\n                                                                                                                                                                                                     && root v == x1}","ident":"Data.Heap.Binominal.Node","stop":{"line":116,"column":46}},{"start":{"line":116,"column":14},"ann":"{v : GHC.Types.Int | v >= 0}","ident":"ds_d39c","stop":{"line":116,"column":15}},{"start":{"line":116,"column":22},"ann":"a","ident":"ds_d39a","stop":{"line":116,"column":23}},{"start":{"line":116,"column":34},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0}","ident":"ds_d39b","stop":{"line":116,"column":36}},{"start":{"line":116,"column":43},"ann":"{v : GHC.Types.Int | 1 <= v}","ident":"ds_d39d","stop":{"line":116,"column":45}},{"start":{"line":121,"column":1},"ann":"forall a .\nx1:a -> x2:{VV : a | x1 <= VV} -> x3:(Data.Heap.Binominal.Tree {VV : a | x2 <= VV}) -> {VV : (Data.Heap.Binominal.Tree {VV : a | x1 <= VV}) | size VV == size x3}","ident":"Data.Heap.Binominal.boundedTreeTransitivityLemma","stop":{"line":121,"column":29}},{"start":{"line":121,"column":30},"ann":"a","ident":"x","stop":{"line":121,"column":31}},{"start":{"line":121,"column":32},"ann":"{VV : a | x <= VV}","ident":"y","stop":{"line":121,"column":33}},{"start":{"line":121,"column":34},"ann":"(Data.Heap.Binominal.Tree {VV : a | y <= VV})","ident":"tree","stop":{"line":121,"column":38}},{"start":{"line":125,"column":1},"ann":"forall a .\nx1:a -> x2:{VV : a | x1 <= VV} -> x3:[(Data.Heap.Binominal.Tree {VV : a | x2 <= VV})] -> {v : [(Data.Heap.Binominal.Tree {VV : a | x1 <= VV})] | sumSizeList v == sumSizeList x3}","ident":"Data.Heap.Binominal.boundedTreeListTransitivityLemma","stop":{"line":125,"column":33}},{"start":{"line":125,"column":34},"ann":"a","ident":"x","stop":{"line":125,"column":35}},{"start":{"line":125,"column":36},"ann":"{VV : a | x <= VV}","ident":"y","stop":{"line":125,"column":37}},{"start":{"line":125,"column":38},"ann":"[(Data.Heap.Binominal.Tree {VV : a | y <= VV})]","ident":"ts","stop":{"line":125,"column":40}},{"start":{"line":129,"column":1},"ann":"forall a .\nx1:(Data.Heap.Binominal.Tree a) -> x2:[(Data.Heap.Binominal.Tree a)] -> {VV : GHC.Types.Int | VV >= 0\n                                                                                              && VV == size x1 + sumSizeList x2\n                                                                                              && sumSizeList x2 < VV}","ident":"Data.Heap.Binominal.sublistSizeLemma","stop":{"line":129,"column":17}},{"start":{"line":129,"column":18},"ann":"(Data.Heap.Binominal.Tree a)","ident":"x","stop":{"line":129,"column":19}},{"start":{"line":129,"column":20},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"xs","stop":{"line":129,"column":22}},{"start":{"line":130,"column":3},"ann":"GHC.Types.Int -> GHC.Types.Int","ident":"lq_anf$##7205759403792806087","stop":{"line":130,"column":22}},{"start":{"line":130,"column":10},"ann":"GHC.Types.Bool","ident":"lq_anf$##7205759403792806086","stop":{"line":130,"column":22}},{"start":{"line":130,"column":11},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806084","stop":{"line":130,"column":12}},{"start":{"line":130,"column":15},"ann":"{v : GHC.Types.Int | 1 <= v\n                     && v == 1 + sumSizeList (subtrees x)\n                     && v == size x}","ident":"lq_anf$##7205759403792806085","stop":{"line":130,"column":21}},{"start":{"line":130,"column":20},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == x}","ident":"x","stop":{"line":130,"column":21}},{"start":{"line":131,"column":3},"ann":"{v : GHC.Types.Int | v >= 0}","ident":"lq_anf$##7205759403792806089","stop":{"line":131,"column":23}},{"start":{"line":131,"column":15},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | tail v == xs\n                                      && head v == x\n                                      && listElts v == Set_cup (Set_sng x) (listElts xs)\n                                      && len v == 1 + len xs\n                                      && lubRank v == 1 + maxRankList (: x xs)\n                                      && sumSizeList v == size x + sumSizeList xs\n                                      && maxRankList v == (if rank x < maxRankList xs then maxRankList xs else rank x)}","ident":"lq_anf$##7205759403792806088","stop":{"line":131,"column":23}},{"start":{"line":131,"column":16},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == x}","ident":"x","stop":{"line":131,"column":17}},{"start":{"line":131,"column":20},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == xs}","ident":"xs","stop":{"line":131,"column":22}},{"start":{"line":138,"column":1},"ann":"forall a .\nx1:{VV : GHC.Types.Int | VV >= 0} -> [{t : (Data.Heap.Binominal.Tree a) | size t <= x1}] -> x3:{VV : GHC.Types.Int | VV >= 0\n                                                                                                                     && x1 <= VV} -> [{t : (Data.Heap.Binominal.Tree a) | size t <= x3}]","ident":"Data.Heap.Binominal.subtreeTransitiveLemma","stop":{"line":138,"column":23}},{"start":{"line":138,"column":26},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"ts","stop":{"line":138,"column":28}},{"start":{"line":142,"column":1},"ann":"forall a .\nx1:{VV : GHC.Types.Int | VV >= 0} -> {VV : (Data.Heap.Binominal.Tree a) | size VV <= x1} -> [{t : (Data.Heap.Binominal.Tree a) | size t <= x1}] -> [{t : (Data.Heap.Binominal.Tree a) | size t <= x1}]","ident":"Data.Heap.Binominal.consTreeLemma","stop":{"line":142,"column":14}},{"start":{"line":142,"column":17},"ann":"(Data.Heap.Binominal.Tree a)","ident":"t","stop":{"line":142,"column":18}},{"start":{"line":142,"column":19},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"ts","stop":{"line":142,"column":21}},{"start":{"line":142,"column":24},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":142,"column":25}},{"start":{"line":142,"column":28},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts}","ident":"ts","stop":{"line":142,"column":30}},{"start":{"line":146,"column":1},"ann":"forall a .\nx1:{VV : GHC.Types.Int | VV >= 0} -> {VV : [{t : (Data.Heap.Binominal.Tree a) | size t < x1}] | VV /= []} -> {t : (Data.Heap.Binominal.Tree a) | size t < x1}","ident":"Data.Heap.Binominal.testTrick","stop":{"line":146,"column":10}},{"start":{"line":146,"column":22},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == h}","ident":"h","stop":{"line":146,"column":23}},{"start":{"line":150,"column":1},"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> [{t : (Data.Heap.Binominal.Tree a) | size t <= sumSizeList x1}]","ident":"Data.Heap.Binominal.boundedSizeSubtreeLemma","stop":{"line":150,"column":24}},{"start":{"line":150,"column":30},"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | Set_emp (listElts v)\n                                            && len v == 0\n                                            && lubRank v == 0\n                                            && sumSizeList v == 0\n                                            && maxRankList v == 0}","ident":"_","stop":{"line":150,"column":32}},{"start":{"line":152,"column":7},"ann":"[{v : (Data.Heap.Binominal.Tree a) | size v <= sumSizeList ts}]","ident":"ih","stop":{"line":152,"column":9}},{"start":{"line":152,"column":12},"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> [{t : (Data.Heap.Binominal.Tree a) | size t <= sumSizeList x1}]","ident":"Data.Heap.Binominal.boundedSizeSubtreeLemma","stop":{"line":152,"column":38}},{"start":{"line":152,"column":36},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts}","ident":"ts","stop":{"line":152,"column":38}},{"start":{"line":153,"column":7},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == size t + sumSizeList ts\n                     && sumSizeList ts < v}","ident":"sizetts","stop":{"line":153,"column":14}},{"start":{"line":153,"column":17},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == size t + sumSizeList ts\n                     && sumSizeList ts < v}","ident":"_","stop":{"line":153,"column":38}},{"start":{"line":153,"column":34},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":153,"column":35}},{"start":{"line":153,"column":36},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts}","ident":"ts","stop":{"line":153,"column":38}},{"start":{"line":154,"column":7},"ann":"{v : GHC.Types.Int | v == sumSizeList ts\n                     && v >= 0\n                     && len ts <= v}","ident":"sizets","stop":{"line":154,"column":13}},{"start":{"line":154,"column":16},"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {VV : GHC.Types.Int | VV == sumSizeList x1\n                                                           && VV >= 0\n                                                           && len x1 <= VV}","ident":"Data.Heap.Binominal.sumSizeList","stop":{"line":154,"column":30}},{"start":{"line":154,"column":28},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts}","ident":"ts","stop":{"line":154,"column":30}},{"start":{"line":155,"column":7},"ann":"[{v : (Data.Heap.Binominal.Tree a) | size v <= sizetts}]","ident":"refinedSubtrees","stop":{"line":155,"column":22}},{"start":{"line":155,"column":25},"ann":"[{v : (Data.Heap.Binominal.Tree a) | size v <= sizetts}]","ident":"_","stop":{"line":155,"column":65}},{"start":{"line":155,"column":48},"ann":"{v : GHC.Types.Int | v == sumSizeList ts\n                     && v >= 0\n                     && len ts <= v\n                     && v == sizets}","ident":"sizets","stop":{"line":155,"column":54}},{"start":{"line":155,"column":55},"ann":"{v : [{v : (Data.Heap.Binominal.Tree a) | size v <= sumSizeList ts}] | lubRank v >= 0\n                                                                       && sumSizeList v >= 0\n                                                                       && len v >= 0\n                                                                       && maxRankList v >= 0\n                                                                       && v == ih}","ident":"ih","stop":{"line":155,"column":57}},{"start":{"line":155,"column":58},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == size t + sumSizeList ts\n                     && sumSizeList ts < v\n                     && v == sizetts}","ident":"sizetts","stop":{"line":155,"column":65}},{"start":{"line":156,"column":17},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == size t + sumSizeList ts\n                     && sumSizeList ts < v\n                     && v == sizetts}","ident":"sizetts","stop":{"line":156,"column":24}},{"start":{"line":156,"column":25},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":156,"column":26}},{"start":{"line":156,"column":27},"ann":"{v : [{v : (Data.Heap.Binominal.Tree a) | size v <= sizetts}] | lubRank v >= 0\n                                                                && sumSizeList v >= 0\n                                                                && len v >= 0\n                                                                && maxRankList v >= 0\n                                                                && v == refinedSubtrees}","ident":"refinedSubtrees","stop":{"line":156,"column":42}},{"start":{"line":183,"column":1},"ann":"forall a .\nx1:{VV : GHC.Types.Int | VV >= 0} -> [{VV : (Data.Heap.Binominal.Tree a) | size VV <= x1}] -> x3:{VV : GHC.Types.Int | VV >= 0\n                                                                                                                       && x1 < VV} -> [{VV : (Data.Heap.Binominal.Tree a) | size VV < x3}]","ident":"Data.Heap.Binominal.strictTransitivitySizeBoundLemma","stop":{"line":183,"column":33}},{"start":{"line":183,"column":36},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"ts","stop":{"line":183,"column":38}},{"start":{"line":188,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\n(Data.Heap.Binominal.Tree a) -> (Data.Set.Internal.Set a)","ident":"Data.Heap.Binominal.eltsTree","stop":{"line":188,"column":9}},{"start":{"line":188,"column":10},"ann":"(Data.Heap.Binominal.Tree a)","ident":"t","stop":{"line":188,"column":11}},{"start":{"line":189,"column":7},"ann":"[{v : (Data.Heap.Binominal.Tree a) | size v <= sumSizeList ts}]","ident":"boundBySumSizeList","stop":{"line":189,"column":25}},{"start":{"line":189,"column":28},"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> [{t : (Data.Heap.Binominal.Tree a) | size t <= sumSizeList x1}]","ident":"Data.Heap.Binominal.boundedSizeSubtreeLemma","stop":{"line":189,"column":56}},{"start":{"line":189,"column":53},"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | x <= VV})] | lubRank v >= 0\n                                                       && sumSizeList v >= 0\n                                                       && len v >= 0\n                                                       && maxRankList v >= 0\n                                                       && v == ts}","ident":"ts","stop":{"line":189,"column":55}},{"start":{"line":190,"column":7},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"boundByOverallSize","stop":{"line":190,"column":25}},{"start":{"line":190,"column":28},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"_","stop":{"line":190,"column":105}},{"start":{"line":190,"column":61},"ann":"{v : GHC.Types.Int | v == sumSizeList ts\n                     && v >= 0\n                     && len ts <= v}","ident":"lq_anf$##7205759403792806092","stop":{"line":190,"column":77}},{"start":{"line":190,"column":74},"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | x <= VV})] | lubRank v >= 0\n                                                       && sumSizeList v >= 0\n                                                       && len v >= 0\n                                                       && maxRankList v >= 0\n                                                       && v == ts}","ident":"ts","stop":{"line":190,"column":76}},{"start":{"line":190,"column":78},"ann":"{v : [{v : (Data.Heap.Binominal.Tree a) | size v <= sumSizeList ts}] | lubRank v >= 0\n                                                                       && sumSizeList v >= 0\n                                                                       && len v >= 0\n                                                                       && maxRankList v >= 0\n                                                                       && v == boundBySumSizeList}","ident":"boundBySumSizeList","stop":{"line":190,"column":96}},{"start":{"line":190,"column":97},"ann":"{v : GHC.Types.Int | 1 <= v}","ident":"lq_anf$##7205759403792806093","stop":{"line":190,"column":105}},{"start":{"line":190,"column":103},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t\n                                    && size v == sz\n                                    && rank v == r\n                                    && subtrees v == ts\n                                    && root v == x\n                                    && v == Node x ts r sz}","ident":"lq_anf$##7205759403792806091","stop":{"line":190,"column":104}},{"start":{"line":191,"column":3},"ann":"(Data.Set.Internal.Set a) -> (Data.Set.Internal.Set a)","ident":"lq_anf$##7205759403792806097","stop":{"line":191,"column":35}},{"start":{"line":191,"column":10},"ann":"GHC.Types.Bool","ident":"lq_anf$##7205759403792806096","stop":{"line":191,"column":35}},{"start":{"line":191,"column":11},"ann":"{v : GHC.Types.Int | v == sumSizeList ts\n                     && v >= 0\n                     && len ts <= v}","ident":"lq_anf$##7205759403792806094","stop":{"line":191,"column":25}},{"start":{"line":191,"column":23},"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | x <= VV})] | lubRank v >= 0\n                                                       && sumSizeList v >= 0\n                                                       && len v >= 0\n                                                       && maxRankList v >= 0\n                                                       && v == ts}","ident":"ts","stop":{"line":191,"column":25}},{"start":{"line":191,"column":28},"ann":"{v : GHC.Types.Int | 1 <= v}","ident":"lq_anf$##7205759403792806095","stop":{"line":191,"column":34}},{"start":{"line":191,"column":33},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t\n                                    && size v == sz\n                                    && rank v == r\n                                    && subtrees v == ts\n                                    && root v == x\n                                    && v == Node x ts r sz}","ident":"lq_anf$##7205759403792806091","stop":{"line":191,"column":34}},{"start":{"line":192,"column":3},"ann":"(Data.Set.Internal.Set a)","ident":"lq_anf$##7205759403792806100","stop":{"line":192,"column":57}},{"start":{"line":192,"column":11},"ann":"{v : (Data.Set.Internal.Set a) | v == Set_sng x}","ident":"lq_anf$##7205759403792806098","stop":{"line":192,"column":26}},{"start":{"line":192,"column":24},"ann":"{VV : a | VV == x}","ident":"x","stop":{"line":192,"column":25}},{"start":{"line":192,"column":27},"ann":"(Data.Set.Internal.Set a)","ident":"lq_anf$##7205759403792806099","stop":{"line":192,"column":57}},{"start":{"line":192,"column":38},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == boundByOverallSize}","ident":"boundByOverallSize","stop":{"line":192,"column":56}},{"start":{"line":197,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\n[(Data.Heap.Binominal.Tree a)] -> (Data.Set.Internal.Set a)","ident":"Data.Heap.Binominal.eltsTrees","stop":{"line":197,"column":10}},{"start":{"line":197,"column":16},"ann":"forall a . {v : (Data.Set.Internal.Set a) | Set_emp v}","ident":"_","stop":{"line":197,"column":23}},{"start":{"line":198,"column":20},"ann":"{v : (GHC.Classes.Ord a) | v == $dOrd_a2ZO}","ident":"$dOrd_a2ZO","stop":{"line":198,"column":55}},{"start":{"line":198,"column":28},"ann":"(Data.Set.Internal.Set a)","ident":"lq_anf$##7205759403792806102","stop":{"line":198,"column":40}},{"start":{"line":198,"column":38},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":198,"column":39}},{"start":{"line":198,"column":41},"ann":"(Data.Set.Internal.Set a)","ident":"lq_anf$##7205759403792806103","stop":{"line":198,"column":55}},{"start":{"line":198,"column":52},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts}","ident":"ts","stop":{"line":198,"column":54}},{"start":{"line":203,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\n[(Data.Heap.Binominal.Tree a)] -> [(Data.Set.Internal.Set a)]","ident":"Data.Heap.Binominal.mapEltsTree","stop":{"line":203,"column":12}},{"start":{"line":203,"column":18},"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | Set_emp (listElts v)\n                                            && len v == 0\n                                            && lubRank v == 0\n                                            && sumSizeList v == 0\n                                            && maxRankList v == 0}","ident":"_","stop":{"line":203,"column":20}},{"start":{"line":204,"column":22},"ann":"(Data.Set.Internal.Set a)","ident":"lq_anf$##7205759403792806105","stop":{"line":204,"column":32}},{"start":{"line":204,"column":31},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":204,"column":32}},{"start":{"line":204,"column":35},"ann":"[(Data.Set.Internal.Set a)]","ident":"lq_anf$##7205759403792806106","stop":{"line":204,"column":49}},{"start":{"line":204,"column":47},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts}","ident":"ts","stop":{"line":204,"column":49}},{"start":{"line":213,"column":1},"ann":"forall a . {v : GHC.Types.Bool | v} -> a -> a","ident":"Data.Heap.Binominal.assert","stop":{"line":213,"column":7}},{"start":{"line":213,"column":10},"ann":"a","ident":"x","stop":{"line":213,"column":11}},{"start":{"line":217,"column":1},"ann":"forall a b .\nx1:a -> (Data.Heap.Binominal.Tree {VV : a | x1 <= VV}) -> b -> b","ident":"Data.Heap.Binominal.assertBoundedTree","stop":{"line":217,"column":18}},{"start":{"line":217,"column":23},"ann":"a","ident":"x","stop":{"line":217,"column":24}},{"start":{"line":221,"column":1},"ann":"forall a b .\nx1:a -> [(Data.Heap.Binominal.Tree {VV : a | x1 <= VV})] -> b -> b","ident":"Data.Heap.Binominal.assertBoundedTreeList","stop":{"line":221,"column":22}},{"start":{"line":221,"column":27},"ann":"a","ident":"x","stop":{"line":221,"column":28}},{"start":{"line":225,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Tree a) -> x3:(Data.Heap.Binominal.Tree a) -> {v : (Data.Heap.Binominal.Tree a) | size v == size x2 + size x3}","ident":"Data.Heap.Binominal.link","stop":{"line":225,"column":5}},{"start":{"line":225,"column":6},"ann":"(Data.Heap.Binominal.Tree a)","ident":"t1","stop":{"line":225,"column":8}},{"start":{"line":225,"column":30},"ann":"(Data.Heap.Binominal.Tree a)","ident":"t2","stop":{"line":225,"column":32}},{"start":{"line":226,"column":5},"ann":"{VV : a | VV == x1}","ident":"x1","stop":{"line":226,"column":7}},{"start":{"line":226,"column":11},"ann":"{VV : a | VV == x2}","ident":"x2","stop":{"line":226,"column":13}},{"start":{"line":227,"column":9},"ann":"(Data.Heap.Binominal.Tree a)","ident":"t2BoundedByX2","stop":{"line":227,"column":22}},{"start":{"line":227,"column":25},"ann":"(Data.Heap.Binominal.Tree a)","ident":"_","stop":{"line":227,"column":55}},{"start":{"line":227,"column":53},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2\n                                    && size v == sz2\n                                    && rank v == r2\n                                    && subtrees v == ts2\n                                    && root v == v\n                                    && v == Node v ts2 r2 sz2}","ident":"lq_anf$##7205759403792806022","stop":{"line":227,"column":55}},{"start":{"line":228,"column":9},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x1 <= VV}) | size v == size t2BoundedByX2}","ident":"t2BoundedByX1","stop":{"line":228,"column":22}},{"start":{"line":228,"column":25},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x1 <= VV}) | size v == size t2BoundedByX2}","ident":"_","stop":{"line":228,"column":73}},{"start":{"line":228,"column":54},"ann":"{VV : a | VV == x1}","ident":"x1","stop":{"line":228,"column":56}},{"start":{"line":228,"column":57},"ann":"{VV : a | VV == x2}","ident":"x2","stop":{"line":228,"column":59}},{"start":{"line":228,"column":60},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2BoundedByX2}","ident":"t2BoundedByX2","stop":{"line":228,"column":73}},{"start":{"line":229,"column":10},"ann":"{VV : a | VV == x1}","ident":"x1","stop":{"line":229,"column":12}},{"start":{"line":229,"column":13},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | tail v == ts1\n                                      && head v == t2BoundedByX1\n                                      && listElts v == Set_cup (Set_sng t2BoundedByX1) (listElts ts1)\n                                      && len v == 1 + len ts1\n                                      && lubRank v == 1 + maxRankList (: t2BoundedByX1 ts1)\n                                      && sumSizeList v == size t2BoundedByX1 + sumSizeList ts1\n                                      && maxRankList v == (if rank t2BoundedByX1 < maxRankList ts1 then maxRankList ts1 else rank t2BoundedByX1)}","ident":"lq_anf$##7205759403792806030","stop":{"line":229,"column":32}},{"start":{"line":229,"column":14},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x1 <= VV}) | size v == size t2BoundedByX2\n                                                      && v == t2BoundedByX1}","ident":"t2BoundedByX1","stop":{"line":229,"column":27}},{"start":{"line":229,"column":28},"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | x1 <= VV})] | lubRank v >= 0\n                                                        && sumSizeList v >= 0\n                                                        && len v >= 0\n                                                        && maxRankList v >= 0\n                                                        && v == ts1}","ident":"ts1","stop":{"line":229,"column":31}},{"start":{"line":229,"column":33},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806033","stop":{"line":229,"column":41}},{"start":{"line":229,"column":34},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806032","stop":{"line":229,"column":35}},{"start":{"line":229,"column":38},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == len ts1\n                     && v == r1}","ident":"r1","stop":{"line":229,"column":40}},{"start":{"line":229,"column":42},"ann":"{v : GHC.Types.Int | v == sz1 + sz2}","ident":"lq_anf$##7205759403792806034","stop":{"line":229,"column":53}},{"start":{"line":229,"column":43},"ann":"{v : GHC.Types.Int | 1 <= v\n                     && v == 1 + sumSizeList ts1\n                     && v == sz1}","ident":"sz1","stop":{"line":229,"column":46}},{"start":{"line":229,"column":49},"ann":"{v : GHC.Types.Int | 1 <= v\n                     && v == 1 + sumSizeList ts2\n                     && v == sz2}","ident":"sz2","stop":{"line":229,"column":52}},{"start":{"line":231,"column":9},"ann":"(Data.Heap.Binominal.Tree a)","ident":"t1BoundedByX1","stop":{"line":231,"column":22}},{"start":{"line":231,"column":25},"ann":"(Data.Heap.Binominal.Tree a)","ident":"_","stop":{"line":231,"column":55}},{"start":{"line":231,"column":53},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1\n                                    && size v == sz1\n                                    && rank v == r1\n                                    && subtrees v == ts1\n                                    && root v == x1\n                                    && v == Node x1 ts1 r1 sz1}","ident":"lq_anf$##7205759403792806021","stop":{"line":231,"column":55}},{"start":{"line":232,"column":9},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x2 <= VV}) | size v == size t1BoundedByX1}","ident":"t1BoundedByX2","stop":{"line":232,"column":22}},{"start":{"line":232,"column":25},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x2 <= VV}) | size v == size t1BoundedByX1}","ident":"_","stop":{"line":232,"column":73}},{"start":{"line":232,"column":54},"ann":"{VV : a | VV == x2}","ident":"x2","stop":{"line":232,"column":56}},{"start":{"line":232,"column":57},"ann":"{VV : a | VV == x1}","ident":"x1","stop":{"line":232,"column":59}},{"start":{"line":232,"column":60},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1BoundedByX1}","ident":"t1BoundedByX1","stop":{"line":232,"column":73}},{"start":{"line":233,"column":10},"ann":"{VV : a | VV == x2}","ident":"x2","stop":{"line":233,"column":12}},{"start":{"line":233,"column":13},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | tail v == ts2\n                                      && head v == t1BoundedByX2\n                                      && listElts v == Set_cup (Set_sng t1BoundedByX2) (listElts ts2)\n                                      && len v == 1 + len ts2\n                                      && lubRank v == 1 + maxRankList (: t1BoundedByX2 ts2)\n                                      && sumSizeList v == size t1BoundedByX2 + sumSizeList ts2\n                                      && maxRankList v == (if rank t1BoundedByX2 < maxRankList ts2 then maxRankList ts2 else rank t1BoundedByX2)}","ident":"lq_anf$##7205759403792806025","stop":{"line":233,"column":32}},{"start":{"line":233,"column":14},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x2 <= VV}) | size v == size t1BoundedByX1\n                                                      && v == t1BoundedByX2}","ident":"t1BoundedByX2","stop":{"line":233,"column":27}},{"start":{"line":233,"column":28},"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | x2 <= VV})] | lubRank v >= 0\n                                                        && sumSizeList v >= 0\n                                                        && len v >= 0\n                                                        && maxRankList v >= 0\n                                                        && v == ts2}","ident":"ts2","stop":{"line":233,"column":31}},{"start":{"line":233,"column":33},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806028","stop":{"line":233,"column":41}},{"start":{"line":233,"column":34},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806027","stop":{"line":233,"column":35}},{"start":{"line":233,"column":38},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == len ts2\n                     && v == r2}","ident":"r2","stop":{"line":233,"column":40}},{"start":{"line":233,"column":42},"ann":"{v : GHC.Types.Int | v == sz1 + sz2}","ident":"lq_anf$##7205759403792806029","stop":{"line":233,"column":53}},{"start":{"line":233,"column":43},"ann":"{v : GHC.Types.Int | 1 <= v\n                     && v == 1 + sumSizeList ts1\n                     && v == sz1}","ident":"sz1","stop":{"line":233,"column":46}},{"start":{"line":233,"column":49},"ann":"{v : GHC.Types.Int | 1 <= v\n                     && v == 1 + sumSizeList ts2\n                     && v == sz2}","ident":"sz2","stop":{"line":233,"column":52}},{"start":{"line":237,"column":1},"ann":"forall a . {v : (Data.Heap.Binominal.Heap a) | heapSize v == 0}","ident":"Data.Heap.Binominal.empty","stop":{"line":237,"column":6}},{"start":{"line":237,"column":14},"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | Set_emp (listElts v)\n                                            && len v == 0\n                                            && lubRank v == 0\n                                            && sumSizeList v == 0\n                                            && maxRankList v == 0}","ident":"_","stop":{"line":237,"column":16}},{"start":{"line":241,"column":1},"ann":"forall a .\nx1:(Data.Heap.Binominal.Heap a) -> {v : GHC.Types.Bool | v <=> heapSize x1 == 0}","ident":"Data.Heap.Binominal.null","stop":{"line":241,"column":5}},{"start":{"line":241,"column":6},"ann":"(Data.Heap.Binominal.Heap a)","ident":"h","stop":{"line":241,"column":7}},{"start":{"line":241,"column":10},"ann":"{v : GHC.Types.Int | v == heapSize h\n                     && v >= 0\n                     && len (unheap h) <= v}","ident":"lq_anf$##7205759403792805995","stop":{"line":241,"column":20}},{"start":{"line":241,"column":19},"ann":"{v : (Data.Heap.Binominal.Heap a) | heapSize v >= 0\n                                    && v == h}","ident":"h","stop":{"line":241,"column":20}},{"start":{"line":241,"column":24},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805997","stop":{"line":241,"column":25}},{"start":{"line":245,"column":1},"ann":"forall a .\na -> {v : (Data.Heap.Binominal.Heap a) | heapSize v == 1}","ident":"Data.Heap.Binominal.singleton","stop":{"line":245,"column":10}},{"start":{"line":245,"column":11},"ann":"a","ident":"x","stop":{"line":245,"column":12}},{"start":{"line":245,"column":20},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"lq_anf$##7205759403792806117","stop":{"line":245,"column":35}},{"start":{"line":245,"column":21},"ann":"{v : (Data.Heap.Binominal.Tree a) | root v == x}","ident":"lq_anf$##7205759403792806115","stop":{"line":245,"column":34}},{"start":{"line":245,"column":26},"ann":"{VV : a | VV == x}","ident":"x","stop":{"line":245,"column":27}},{"start":{"line":245,"column":28},"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | Set_emp (listElts v)\n                                            && len v == 0\n                                            && lubRank v == 0\n                                            && sumSizeList v == 0\n                                            && maxRankList v == 0}","ident":"_","stop":{"line":245,"column":30}},{"start":{"line":245,"column":31},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806112","stop":{"line":245,"column":32}},{"start":{"line":245,"column":33},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806114","stop":{"line":245,"column":34}},{"start":{"line":257,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\na -> x3:(Data.Heap.Binominal.Heap a) -> {v : (Data.Heap.Binominal.Heap a) | 1 + heapSize x3 == heapSize v}","ident":"Data.Heap.Binominal.insert","stop":{"line":257,"column":7}},{"start":{"line":257,"column":8},"ann":"a","ident":"x","stop":{"line":257,"column":9}},{"start":{"line":257,"column":22},"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {v : (Data.Heap.Binominal.Heap a) | unheap v == x1\n                                                                         && heapSize v == sumSizeList x1}","ident":"Data.Heap.Binominal.Heap","stop":{"line":257,"column":55}},{"start":{"line":257,"column":27},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"lq_anf$##7205759403792806049","stop":{"line":257,"column":55}},{"start":{"line":257,"column":36},"ann":"{v : (Data.Heap.Binominal.Tree a) | root v == x}","ident":"lq_anf$##7205759403792806048","stop":{"line":257,"column":51}},{"start":{"line":257,"column":42},"ann":"{VV : a | VV == x}","ident":"x","stop":{"line":257,"column":43}},{"start":{"line":257,"column":44},"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | Set_emp (listElts v)\n                                            && len v == 0\n                                            && lubRank v == 0\n                                            && sumSizeList v == 0\n                                            && maxRankList v == 0}","ident":"_","stop":{"line":257,"column":46}},{"start":{"line":257,"column":47},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806045","stop":{"line":257,"column":48}},{"start":{"line":257,"column":49},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806047","stop":{"line":257,"column":50}},{"start":{"line":257,"column":52},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts}","ident":"ts","stop":{"line":257,"column":54}},{"start":{"line":261,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Tree a) -> x3:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == size x2 + sumSizeList x3}","ident":"Data.Heap.Binominal.insert'","stop":{"line":261,"column":8}},{"start":{"line":261,"column":9},"ann":"(Data.Heap.Binominal.Tree a)","ident":"t","stop":{"line":261,"column":10}},{"start":{"line":261,"column":16},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | Set_emp (listElts v)\n                                      && len v == 0\n                                      && lubRank v == 0\n                                      && sumSizeList v == 0\n                                      && maxRankList v == 0}","ident":"lq_anf$##7205759403792806036","stop":{"line":261,"column":19}},{"start":{"line":261,"column":17},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":261,"column":18}},{"start":{"line":263,"column":5},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == len (subtrees t)\n                     && v == rank t}","ident":"lq_anf$##7205759403792806037","stop":{"line":263,"column":11}},{"start":{"line":263,"column":10},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":263,"column":11}},{"start":{"line":263,"column":14},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == len (subtrees t')\n                     && v == rank t'}","ident":"lq_anf$##7205759403792806038","stop":{"line":263,"column":21}},{"start":{"line":263,"column":19},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t'}","ident":"t'","stop":{"line":263,"column":21}},{"start":{"line":263,"column":24},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":263,"column":25}},{"start":{"line":263,"column":28},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0}","ident":"ds_d39C","stop":{"line":263,"column":30}},{"start":{"line":264,"column":24},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Tree a) -> x3:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == size x2 + sumSizeList x3}","ident":"Data.Heap.Binominal.insert'","stop":{"line":264,"column":47}},{"start":{"line":264,"column":32},"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t + size t'}","ident":"lq_anf$##7205759403792806041","stop":{"line":264,"column":43}},{"start":{"line":264,"column":38},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":264,"column":39}},{"start":{"line":264,"column":40},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t'}","ident":"t'","stop":{"line":264,"column":42}},{"start":{"line":264,"column":44},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts'}","ident":"ts'","stop":{"line":264,"column":47}},{"start":{"line":269,"column":1},"ann":"forall a .\nx1:[a] -> {VV : GHC.Types.Int | VV == len x1\n                                && VV >= 0}","ident":"Data.Heap.Binominal.len","stop":{"line":269,"column":4}},{"start":{"line":269,"column":10},"ann":"{v : GHC.Prim.Int# | v == 0}","ident":"lq_anf$##7205759403792806119","stop":{"line":269,"column":11}},{"start":{"line":270,"column":14},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806121","stop":{"line":270,"column":15}},{"start":{"line":270,"column":18},"ann":"{v : GHC.Types.Int | v == len xs\n                     && v >= 0}","ident":"lq_anf$##7205759403792806122","stop":{"line":270,"column":24}},{"start":{"line":270,"column":22},"ann":"{v : [a] | lubRank v >= 0\n           && sumSizeList v >= 0\n           && len v >= 0\n           && maxRankList v >= 0\n           && v == xs}","ident":"xs","stop":{"line":270,"column":24}},{"start":{"line":274,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:[a] -> {v : (Data.Heap.Binominal.Heap a) | heapSize v == len x2}","ident":"Data.Heap.Binominal.fromList","stop":{"line":274,"column":9}},{"start":{"line":274,"column":15},"ann":"forall a . {v : (Data.Heap.Binominal.Heap a) | heapSize v == 0}","ident":"_","stop":{"line":274,"column":20}},{"start":{"line":275,"column":19},"ann":"{v : (GHC.Classes.Ord a) | v == $dOrd_a2S7}","ident":"$dOrd_a2S7","stop":{"line":275,"column":41}},{"start":{"line":275,"column":26},"ann":"{VV : a | VV == x}","ident":"x","stop":{"line":275,"column":27}},{"start":{"line":275,"column":28},"ann":"{v : (Data.Heap.Binominal.Heap a) | heapSize v == len xs}","ident":"lq_anf$##7205759403792806109","stop":{"line":275,"column":41}},{"start":{"line":275,"column":38},"ann":"{v : [a] | lubRank v >= 0\n           && sumSizeList v >= 0\n           && len v >= 0\n           && maxRankList v >= 0\n           && v == xs}","ident":"xs","stop":{"line":275,"column":40}},{"start":{"line":317,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\n{VV : (Data.Heap.Binominal.Heap a) | 0 < len (unheap VV)} -> a","ident":"Data.Heap.Binominal.minimum","stop":{"line":317,"column":8}},{"start":{"line":317,"column":11},"ann":"forall a .\nx1:(Data.Heap.Binominal.Tree a) -> {VV : a | VV == root x1}","ident":"_","stop":{"line":317,"column":15}},{"start":{"line":317,"column":18},"ann":"forall a b . x1:(a, b) -> {VV : a | VV == fst x1}","ident":"_","stop":{"line":317,"column":21}},{"start":{"line":317,"column":24},"ann":"x1:{v : [(Data.Heap.Binominal.Tree a)] | 0 < len v} -> {v : ((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | root (fst x15) <= VV})]) | size (fst v) + sumSizeList (snd v) == sumSizeList x1}","ident":"lq_anf$##7205759403792806131","stop":{"line":317,"column":34}},{"start":{"line":317,"column":37},"ann":"forall a .\nx1:{v : (Data.Heap.Binominal.Heap a) | 0 < len (unheap v)} -> {v : [(Data.Heap.Binominal.Tree a)] | 0 < len v\n                                                                                                    && sumSizeList v == heapSize x1}","ident":"_","stop":{"line":317,"column":51}},{"start":{"line":323,"column":1},"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList x1}","ident":"Data.Heap.Binominal.reverseHeapList","stop":{"line":323,"column":16}},{"start":{"line":323,"column":17},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"xs","stop":{"line":323,"column":19}},{"start":{"line":323,"column":41},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == xs}","ident":"xs","stop":{"line":323,"column":43}},{"start":{"line":323,"column":44},"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | Set_emp (listElts v)\n                                            && len v == 0\n                                            && lubRank v == 0\n                                            && sumSizeList v == 0\n                                            && maxRankList v == 0}","ident":"_","stop":{"line":323,"column":46}},{"start":{"line":327,"column":1},"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> x2:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList x1 + sumSizeList x2}","ident":"Data.Heap.Binominal.reverseHeapListAux","stop":{"line":327,"column":19}},{"start":{"line":327,"column":23},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"acc","stop":{"line":327,"column":26}},{"start":{"line":327,"column":29},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == acc}","ident":"acc","stop":{"line":327,"column":32}},{"start":{"line":328,"column":33},"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> x2:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList x1 + sumSizeList x2}","ident":"Data.Heap.Binominal.reverseHeapListAux","stop":{"line":328,"column":62}},{"start":{"line":328,"column":52},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == xs}","ident":"xs","stop":{"line":328,"column":54}},{"start":{"line":328,"column":55},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | tail v == acc\n                                      && head v == x\n                                      && listElts v == Set_cup (Set_sng x) (listElts acc)\n                                      && len v == 1 + len acc\n                                      && lubRank v == 1 + maxRankList (: x acc)\n                                      && sumSizeList v == size x + sumSizeList acc\n                                      && maxRankList v == (if rank x < maxRankList acc then maxRankList acc else rank x)}","ident":"lq_anf$##7205759403792806124","stop":{"line":328,"column":62}},{"start":{"line":328,"column":56},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == x}","ident":"x","stop":{"line":328,"column":57}},{"start":{"line":328,"column":58},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == acc}","ident":"acc","stop":{"line":328,"column":61}},{"start":{"line":332,"column":1},"ann":"forall a .\nx1:{VV : (Data.Heap.Binominal.Heap a) | 0 < len (unheap VV)} -> {VV : [(Data.Heap.Binominal.Tree a)] | 0 < len VV\n                                                                                                       && sumSizeList VV == heapSize x1}","ident":"Data.Heap.Binominal.unheapNonempty","stop":{"line":332,"column":15}},{"start":{"line":332,"column":34},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts}","ident":"lq_anf$##7205759403792806127","stop":{"line":332,"column":36}},{"start":{"line":336,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:{VV : (Data.Heap.Binominal.Heap a) | 0 < len (unheap VV)} -> {v : (Data.Heap.Binominal.Heap a) | 1 + heapSize v == heapSize x2}","ident":"Data.Heap.Binominal.deleteMin","stop":{"line":336,"column":10}},{"start":{"line":336,"column":11},"ann":"{VV : (Data.Heap.Binominal.Heap a) | 0 < len (unheap VV)}","ident":"h","stop":{"line":336,"column":12}},{"start":{"line":337,"column":31},"ann":"((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | root (fst x9) <= VV})])","ident":"lq_anf$##7205759403792806136","stop":{"line":337,"column":60}},{"start":{"line":337,"column":42},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | 0 < len v\n                                      && sumSizeList v == heapSize h}","ident":"lq_anf$##7205759403792806135","stop":{"line":337,"column":60}},{"start":{"line":337,"column":58},"ann":"{v : (Data.Heap.Binominal.Heap a) | 0 < len (unheap v)\n                                    && heapSize v >= 0\n                                    && v == h}","ident":"h","stop":{"line":337,"column":59}},{"start":{"line":338,"column":8},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"lq_anf$##7205759403792806140","stop":{"line":338,"column":42}},{"start":{"line":338,"column":16},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList ts1}","ident":"lq_anf$##7205759403792806139","stop":{"line":338,"column":37}},{"start":{"line":338,"column":33},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts1}","ident":"ts1","stop":{"line":338,"column":36}},{"start":{"line":338,"column":38},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts2}","ident":"ts2","stop":{"line":338,"column":41}},{"start":{"line":342,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:{VV : (Data.Heap.Binominal.Heap a) | 0 < len (unheap VV)} -> {v : (a, (Data.Heap.Binominal.Heap {VV : a | fst v <= VV})) | 1 + heapSize (snd v) == heapSize x2}","ident":"Data.Heap.Binominal.deleteMin2","stop":{"line":342,"column":11}},{"start":{"line":342,"column":12},"ann":"{VV : (Data.Heap.Binominal.Heap a) | 0 < len (unheap VV)}","ident":"h","stop":{"line":342,"column":13}},{"start":{"line":343,"column":36},"ann":"((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | root (fst x9) <= VV})])","ident":"lq_anf$##7205759403792806142","stop":{"line":343,"column":65}},{"start":{"line":343,"column":47},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | 0 < len v\n                                      && sumSizeList v == heapSize h}","ident":"lq_anf$##7205759403792806141","stop":{"line":343,"column":65}},{"start":{"line":343,"column":63},"ann":"{v : (Data.Heap.Binominal.Heap a) | 0 < len (unheap v)\n                                    && heapSize v >= 0\n                                    && v == h}","ident":"h","stop":{"line":343,"column":64}},{"start":{"line":344,"column":4},"ann":"{VV : a | VV == minElt}","ident":"minElt","stop":{"line":344,"column":10}},{"start":{"line":344,"column":12},"ann":"(Data.Heap.Binominal.Heap a)","ident":"lq_anf$##7205759403792806147","stop":{"line":344,"column":51}},{"start":{"line":344,"column":17},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"lq_anf$##7205759403792806146","stop":{"line":344,"column":51}},{"start":{"line":344,"column":25},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList ts1}","ident":"lq_anf$##7205759403792806145","stop":{"line":344,"column":46}},{"start":{"line":344,"column":42},"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | minElt <= VV})] | lubRank v >= 0\n                                                            && sumSizeList v >= 0\n                                                            && len v >= 0\n                                                            && maxRankList v >= 0\n                                                            && v == ts1}","ident":"ts1","stop":{"line":344,"column":45}},{"start":{"line":344,"column":47},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts2}","ident":"ts2","stop":{"line":344,"column":50}},{"start":{"line":348,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:{VV : [(Data.Heap.Binominal.Tree a)] | 0 < len VV} -> {v : ((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | root (fst v) <= VV})]) | size (fst v) + sumSizeList (snd v) == sumSizeList x2}","ident":"Data.Heap.Binominal.deleteMin'","stop":{"line":348,"column":11}},{"start":{"line":348,"column":18},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | Set_emp (listElts v)\n                                      && len v == 0\n                                      && lubRank v == 0\n                                      && sumSizeList v == 0\n                                      && maxRankList v == 0}","ident":"lq_anf$##7205759403792806078","stop":{"line":348,"column":25}},{"start":{"line":348,"column":19},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":348,"column":20}},{"start":{"line":348,"column":22},"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | Set_emp (listElts v)\n                                            && len v == 0\n                                            && lubRank v == 0\n                                            && sumSizeList v == 0\n                                            && maxRankList v == 0}","ident":"_","stop":{"line":348,"column":24}},{"start":{"line":350,"column":8},"ann":"(Data.Heap.Binominal.Tree a)","ident":"t'","stop":{"line":350,"column":10}},{"start":{"line":350,"column":12},"ann":"{VV : [(Data.Heap.Binominal.Tree {VV : a | root t' <= VV})] | len VV >= 0}","ident":"ts'","stop":{"line":350,"column":15}},{"start":{"line":350,"column":19},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:{VV : [(Data.Heap.Binominal.Tree a)] | 0 < len VV} -> {v : ((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | root (fst v) <= VV})]) | size (fst v) + sumSizeList (snd v) == sumSizeList x2}","ident":"Data.Heap.Binominal.deleteMin'","stop":{"line":350,"column":32}},{"start":{"line":350,"column":30},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0}","ident":"ds_d3b3","stop":{"line":350,"column":32}},{"start":{"line":351,"column":7},"ann":"{VV : a | VV == root t}","ident":"x","stop":{"line":351,"column":8}},{"start":{"line":351,"column":11},"ann":"{VV : a | VV == root t}","ident":"_","stop":{"line":351,"column":17}},{"start":{"line":351,"column":16},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":351,"column":17}},{"start":{"line":352,"column":7},"ann":"{VV : a | VV == root t'}","ident":"x'","stop":{"line":352,"column":9}},{"start":{"line":352,"column":12},"ann":"{VV : a | VV == root t'}","ident":"_","stop":{"line":352,"column":19}},{"start":{"line":352,"column":17},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t'}","ident":"t'","stop":{"line":352,"column":19}},{"start":{"line":353,"column":7},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t <= VV}) | size v == size t}","ident":"tBounded","stop":{"line":353,"column":15}},{"start":{"line":353,"column":18},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t <= VV}) | size v == size t}","ident":"_","stop":{"line":353,"column":47}},{"start":{"line":353,"column":46},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":353,"column":47}},{"start":{"line":354,"column":7},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t' <= VV}) | size v == size t'}","ident":"tBounded'","stop":{"line":354,"column":16}},{"start":{"line":354,"column":19},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t' <= VV}) | size v == size t'}","ident":"_","stop":{"line":354,"column":49}},{"start":{"line":354,"column":47},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t'}","ident":"t'","stop":{"line":354,"column":49}},{"start":{"line":355,"column":6},"ann":"{VV : a | VV == root t\n          && VV == x}","ident":"x","stop":{"line":355,"column":7}},{"start":{"line":355,"column":10},"ann":"{VV : a | VV == root t'\n          && VV == x'}","ident":"x'","stop":{"line":355,"column":12}},{"start":{"line":357,"column":9},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x <= VV}) | size v == size tBounded'}","ident":"hd","stop":{"line":357,"column":11}},{"start":{"line":357,"column":14},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x <= VV}) | size v == size tBounded'}","ident":"_","stop":{"line":357,"column":57}},{"start":{"line":357,"column":43},"ann":"{VV : a | VV == root t\n          && VV == x}","ident":"x","stop":{"line":357,"column":44}},{"start":{"line":357,"column":45},"ann":"{VV : a | VV == root t'\n          && VV == x'}","ident":"x'","stop":{"line":357,"column":47}},{"start":{"line":357,"column":48},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t' <= VV}) | size v == size t'\n                                                           && v == tBounded'}","ident":"tBounded'","stop":{"line":357,"column":57}},{"start":{"line":358,"column":9},"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | x <= VV})] | sumSizeList v == sumSizeList ts'}","ident":"tl","stop":{"line":358,"column":11}},{"start":{"line":358,"column":14},"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | x <= VV})] | sumSizeList v == sumSizeList ts'}","ident":"_","stop":{"line":358,"column":55}},{"start":{"line":358,"column":47},"ann":"{VV : a | VV == root t\n          && VV == x}","ident":"x","stop":{"line":358,"column":48}},{"start":{"line":358,"column":49},"ann":"{VV : a | VV == root t'\n          && VV == x'}","ident":"x'","stop":{"line":358,"column":51}},{"start":{"line":358,"column":52},"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | root t' <= VV})] | len v >= 0\n                                                             && lubRank v >= 0\n                                                             && sumSizeList v >= 0\n                                                             && maxRankList v >= 0\n                                                             && v == ts'}","ident":"ts'","stop":{"line":358,"column":55}},{"start":{"line":359,"column":6},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":359,"column":7}},{"start":{"line":359,"column":9},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x <= VV}) | size v == size tBounded'\n                                                     && v == hd}","ident":"hd","stop":{"line":359,"column":11}},{"start":{"line":359,"column":12},"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | x <= VV})] | sumSizeList v == sumSizeList ts'\n                                                       && lubRank v >= 0\n                                                       && sumSizeList v >= 0\n                                                       && len v >= 0\n                                                       && maxRankList v >= 0\n                                                       && v == tl}","ident":"tl","stop":{"line":359,"column":14}},{"start":{"line":361,"column":9},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x' <= VV}) | size v == size tBounded}","ident":"hd","stop":{"line":361,"column":11}},{"start":{"line":361,"column":14},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x' <= VV}) | size v == size tBounded}","ident":"_","stop":{"line":361,"column":56}},{"start":{"line":361,"column":43},"ann":"{VV : a | VV == root t'\n          && VV == x'}","ident":"x'","stop":{"line":361,"column":45}},{"start":{"line":361,"column":46},"ann":"{VV : a | VV == root t\n          && VV == x}","ident":"x","stop":{"line":361,"column":47}},{"start":{"line":361,"column":48},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t <= VV}) | size v == size t\n                                                          && v == tBounded}","ident":"tBounded","stop":{"line":361,"column":56}},{"start":{"line":362,"column":6},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t'}","ident":"t'","stop":{"line":362,"column":8}},{"start":{"line":362,"column":10},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x' <= VV}) | size v == size tBounded\n                                                      && v == hd}","ident":"hd","stop":{"line":362,"column":12}},{"start":{"line":362,"column":13},"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | root t' <= VV})] | len v >= 0\n                                                             && lubRank v >= 0\n                                                             && sumSizeList v >= 0\n                                                             && maxRankList v >= 0\n                                                             && v == ts'}","ident":"ts'","stop":{"line":362,"column":16}},{"start":{"line":375,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Heap a) -> x3:(Data.Heap.Binominal.Heap a) -> {VV : (Data.Heap.Binominal.Heap a) | heapSize VV == heapSize x2 + heapSize x3}","ident":"Data.Heap.Binominal.merge","stop":{"line":375,"column":6}},{"start":{"line":375,"column":31},"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {v : (Data.Heap.Binominal.Heap a) | unheap v == x1\n                                                                         && heapSize v == sumSizeList x1}","ident":"Data.Heap.Binominal.Heap","stop":{"line":375,"column":52}},{"start":{"line":375,"column":36},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList ts1 + sumSizeList ts2}","ident":"lq_anf$##7205759403792806070","stop":{"line":375,"column":52}},{"start":{"line":375,"column":44},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts1}","ident":"ts1","stop":{"line":375,"column":47}},{"start":{"line":375,"column":48},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts2}","ident":"ts2","stop":{"line":375,"column":51}},{"start":{"line":379,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:[(Data.Heap.Binominal.Tree a)] -> x3:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList x2 + sumSizeList x3}","ident":"Data.Heap.Binominal.merge'","stop":{"line":379,"column":7}},{"start":{"line":379,"column":8},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"ts1","stop":{"line":379,"column":11}},{"start":{"line":379,"column":17},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts1}","ident":"ts1","stop":{"line":379,"column":20}},{"start":{"line":380,"column":17},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0}","ident":"ds_d39Y","stop":{"line":380,"column":20}},{"start":{"line":382,"column":5},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == len (subtrees t1)\n                     && v == rank t1}","ident":"lq_anf$##7205759403792806054","stop":{"line":382,"column":12}},{"start":{"line":382,"column":10},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1}","ident":"t1","stop":{"line":382,"column":12}},{"start":{"line":382,"column":15},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == len (subtrees t2)\n                     && v == rank t2}","ident":"lq_anf$##7205759403792806055","stop":{"line":382,"column":22}},{"start":{"line":382,"column":20},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2}","ident":"t2","stop":{"line":382,"column":22}},{"start":{"line":382,"column":25},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1}","ident":"t1","stop":{"line":382,"column":27}},{"start":{"line":382,"column":30},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"lq_anf$##7205759403792806065","stop":{"line":382,"column":45}},{"start":{"line":382,"column":37},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts1'}","ident":"ts1'","stop":{"line":382,"column":41}},{"start":{"line":382,"column":42},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0}","ident":"ds_d39Y","stop":{"line":382,"column":45}},{"start":{"line":383,"column":5},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == len (subtrees t2)\n                     && v == rank t2}","ident":"lq_anf$##7205759403792806058","stop":{"line":383,"column":12}},{"start":{"line":383,"column":10},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2}","ident":"t2","stop":{"line":383,"column":12}},{"start":{"line":383,"column":15},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == len (subtrees t1)\n                     && v == rank t1}","ident":"lq_anf$##7205759403792806059","stop":{"line":383,"column":22}},{"start":{"line":383,"column":20},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1}","ident":"t1","stop":{"line":383,"column":22}},{"start":{"line":383,"column":25},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2}","ident":"t2","stop":{"line":383,"column":27}},{"start":{"line":383,"column":30},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList ts1 + sumSizeList ts2'}","ident":"lq_anf$##7205759403792806064","stop":{"line":383,"column":45}},{"start":{"line":383,"column":37},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts1}","ident":"ts1","stop":{"line":383,"column":40}},{"start":{"line":383,"column":41},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts2'}","ident":"ts2'","stop":{"line":383,"column":45}},{"start":{"line":384,"column":25},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Tree a) -> x3:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == size x2 + sumSizeList x3}","ident":"Data.Heap.Binominal.insert'","stop":{"line":384,"column":64}},{"start":{"line":384,"column":33},"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t1 + size t2}","ident":"lq_anf$##7205759403792806062","stop":{"line":384,"column":45}},{"start":{"line":384,"column":39},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1}","ident":"t1","stop":{"line":384,"column":41}},{"start":{"line":384,"column":42},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2}","ident":"t2","stop":{"line":384,"column":44}},{"start":{"line":384,"column":46},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList ts1' + sumSizeList ts2'}","ident":"lq_anf$##7205759403792806063","stop":{"line":384,"column":64}},{"start":{"line":384,"column":54},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts1'}","ident":"ts1'","stop":{"line":384,"column":58}},{"start":{"line":384,"column":59},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts2'}","ident":"ts2'","stop":{"line":384,"column":63}},{"start":{"line":400,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Heap a) -> {VV : [a]<\\x1 VV -> {VV : a | x1 <= VV}> | len VV == heapSize x2}","ident":"Data.Heap.Binominal.heapSort","stop":{"line":400,"column":9}},{"start":{"line":400,"column":22},"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | Set_emp (listElts v)\n                                            && len v == 0\n                                            && lubRank v == 0\n                                            && sumSizeList v == 0\n                                            && maxRankList v == 0}","ident":"_","stop":{"line":400,"column":24}},{"start":{"line":402,"column":8},"ann":"a","ident":"minElt","stop":{"line":402,"column":14}},{"start":{"line":402,"column":16},"ann":"(Data.Heap.Binominal.Heap {VV : a | minElt <= VV\n                                    && VV >= minElt})","ident":"h'","stop":{"line":402,"column":18}},{"start":{"line":402,"column":22},"ann":"(a, (Data.Heap.Binominal.Heap {VV : a | fst x4 <= VV}))","ident":"_","stop":{"line":402,"column":34}},{"start":{"line":402,"column":33},"ann":"{v : (Data.Heap.Binominal.Heap a) | heapSize v >= 0}","ident":"ds_d3bS","stop":{"line":402,"column":34}},{"start":{"line":403,"column":3},"ann":"{VV : a | VV == minElt}","ident":"minElt","stop":{"line":403,"column":9}},{"start":{"line":403,"column":12},"ann":"{VV : [a]<\\x1 VV -> {VV : a | x1 <= VV}> | len VV == heapSize h'}","ident":"lq_anf$##7205759403792806150","stop":{"line":403,"column":23}},{"start":{"line":403,"column":21},"ann":"{v : (Data.Heap.Binominal.Heap {VV : a | minElt <= VV\n                                         && VV >= minElt}) | heapSize v >= 0\n                                                             && v == h'}","ident":"h'","stop":{"line":403,"column":23}},{"start":{"line":407,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:[a] -> {VV : [a]<\\x1 VV -> {VV : a | x1 <= VV}> | len VV == len x2}","ident":"Data.Heap.Binominal.sortUsingHeap","stop":{"line":407,"column":14}},{"start":{"line":407,"column":17},"ann":"x1:(Data.Heap.Binominal.Heap a) -> {v : [a]<\\x5 VV -> {VV : a | x5 <= VV}> | len v == heapSize x1}","ident":"lq_anf$##7205759403792806151","stop":{"line":407,"column":25}},{"start":{"line":407,"column":28},"ann":"x1:[a] -> {v : (Data.Heap.Binominal.Heap a) | heapSize v == len x1}","ident":"lq_anf$##7205759403792806152","stop":{"line":407,"column":36}}],"errors":[]}