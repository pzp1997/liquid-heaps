{"status":"safe","types":{"268":{"15":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == rank t2}","ident":"lq_anf$##7205759403792805268","row":268,"col":15},"37":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts1'}","ident":"ts1'","row":268,"col":37},"25":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1}","ident":"t1","row":268,"col":25},"30":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"lq_anf$##7205759403792805278","row":268,"col":30},"20":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2}","ident":"t2","row":268,"col":20},"5":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == rank t1}","ident":"lq_anf$##7205759403792805267","row":268,"col":5},"42":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0}","ident":"ds_d2Yv","row":268,"col":42},"10":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1}","ident":"t1","row":268,"col":10}},"150":{"44":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts'}","ident":"ts'","row":150,"col":44},"40":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t'}","ident":"t'","row":150,"col":40},"38":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":150,"col":38},"24":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Tree a) -> x3:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == size x2 + sumSizeList x3}","ident":"Data.Heap.Binominal.insert'","row":150,"col":24},"32":{"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t + size t'}","ident":"lq_anf$##7205759403792805254","row":150,"col":32}},"114":{"25":{"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t2BoundedByX2}","ident":"_","row":114,"col":25},"57":{"ann":"a","ident":"ds_d2Y4","row":114,"col":57},"60":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2BoundedByX2}","ident":"t2BoundedByX2","row":114,"col":60},"9":{"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t2BoundedByX2}","ident":"t2BoundedByX1","row":114,"col":9},"54":{"ann":"a","ident":"ds_d2Y0","row":114,"col":54}},"51":{"22":{"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {VV : GHC.Types.Int | VV == sumSizeList x1\n                                                           && VV >= 0\n                                                           && len x1 <= VV}","ident":"Data.Heap.Binominal.sumSizeList","row":51,"col":22},"1":{"ann":"forall a .\nx1:(Data.Heap.Binominal.Heap a) -> {VV : GHC.Types.Int | VV == heapSize x1\n                                                         && VV >= 0\n                                                         && len (unheap x1) <= VV}","ident":"Data.Heap.Binominal.heapSize","row":51,"col":1},"34":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts}","ident":"ts","row":51,"col":34}},"149":{"28":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0}","ident":"ds_d2Y9","row":149,"col":28},"14":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == rank t'}","ident":"lq_anf$##7205759403792805251","row":149,"col":14},"19":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t'}","ident":"t'","row":149,"col":19},"5":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == rank t}","ident":"lq_anf$##7205759403792805250","row":149,"col":5},"24":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":149,"col":24},"10":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":149,"col":10}},"294":{"28":{"ann":"x1:[a] -> {v : (Data.Heap.Binominal.Heap a) | heapSize v == len x1}","ident":"lq_anf$##7205759403792805339","row":294,"col":28},"17":{"ann":"x1:(Data.Heap.Binominal.Heap a) -> {v : [a]<\\x5 VV -> {VV : a | x5 <= VV}> | len v == heapSize x1}","ident":"lq_anf$##7205759403792805338","row":294,"col":17},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:[a] -> {VV : [a]<\\x1 VV -> {VV : a | x1 <= VV}> | len VV == len x2}","ident":"Data.Heap.Binominal.sortUsingHeap","row":294,"col":1}},"160":{"15":{"ann":"forall a . {v : (Data.Heap.Binominal.Heap a) | heapSize v == 0}","ident":"_","row":160,"col":15},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:[a] -> {v : (Data.Heap.Binominal.Heap a) | heapSize v == len x2}","ident":"Data.Heap.Binominal.fromList","row":160,"col":1}},"241":{"6":{"ann":"{VV : a | VV == root t\n          && VV == x}","ident":"x","row":241,"col":6},"10":{"ann":"{VV : a | VV == root t'\n          && VV == x'}","ident":"x'","row":241,"col":10}},"156":{"14":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805308","row":156,"col":14},"22":{"ann":"{v : [a] | len v >= 0\n           && sumSizeList v >= 0\n           && v == xs}","ident":"xs","row":156,"col":22},"18":{"ann":"{v : GHC.Types.Int | v == len xs\n                     && v >= 0}","ident":"lq_anf$##7205759403792805309","row":156,"col":18}},"112":{"5":{"ann":"a","ident":"ds_d2Y0","row":112,"col":5},"11":{"ann":"a","ident":"ds_d2Y4","row":112,"col":11}},"270":{"25":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Tree a) -> x3:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == size x2 + sumSizeList x3}","ident":"Data.Heap.Binominal.insert'","row":270,"col":25},"59":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts2'}","ident":"ts2'","row":270,"col":59},"39":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1}","ident":"t1","row":270,"col":39},"46":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList ts1' + sumSizeList ts2'}","ident":"lq_anf$##7205759403792805276","row":270,"col":46},"33":{"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t1 + size t2}","ident":"lq_anf$##7205759403792805275","row":270,"col":33},"42":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2}","ident":"t2","row":270,"col":42},"54":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts1'}","ident":"ts1'","row":270,"col":54}},"287":{"22":{"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | len v == 0\n                                            && sumSizeList v == 0}","ident":"_","row":287,"col":22},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Heap a) -> {VV : [a]<\\x1 VV -> {VV : a | x1 <= VV}> | len VV == heapSize x2}","ident":"Data.Heap.Binominal.heapSort","row":287,"col":1}},"269":{"15":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == rank t1}","ident":"lq_anf$##7205759403792805272","row":269,"col":15},"37":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts1}","ident":"ts1","row":269,"col":37},"25":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2}","ident":"t2","row":269,"col":25},"30":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList ts1 + sumSizeList ts2'}","ident":"lq_anf$##7205759403792805277","row":269,"col":30},"20":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1}","ident":"t1","row":269,"col":20},"5":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == rank t2}","ident":"lq_anf$##7205759403792805271","row":269,"col":5},"41":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts2'}","ident":"ts2'","row":269,"col":41},"10":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2}","ident":"t2","row":269,"col":10}},"115":{"14":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805244","row":115,"col":14},"17":{"ann":"a","ident":"ds_d2Y0","row":115,"col":17},"35":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0}","ident":"ds_d2Y1","row":115,"col":35},"40":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805247","row":115,"col":40},"20":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | head v == t2BoundedByX1}","ident":"lq_anf$##7205759403792805246","row":115,"col":20},"41":{"ann":"{v : GHC.Types.Int | 1 <= v}","ident":"ds_d2Y2","row":115,"col":41},"11":{"ann":"{v : GHC.Types.Int | v >= 0}","ident":"ds_d2XZ","row":115,"col":11},"47":{"ann":"{v : GHC.Types.Int | 1 <= v}","ident":"ds_d2Y6","row":115,"col":47},"21":{"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t2BoundedByX2\n                                    && v == t2BoundedByX1}","ident":"t2BoundedByX1","row":115,"col":21},"10":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805245","row":115,"col":10}},"234":{"22":{"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | len v == 0\n                                            && sumSizeList v == 0}","ident":"_","row":234,"col":22},"19":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":234,"col":19},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:{v : [(Data.Heap.Binominal.Tree a)] | 0 < len v} -> {v : ((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | root (fst v) <= VV})]) | size (fst v) + sumSizeList (snd v) == sumSizeList x2}","ident":"Data.Heap.Binominal.deleteMin'","row":234,"col":1},"18":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v == 0\n                                      && sumSizeList v == 0}","ident":"lq_anf$##7205759403792805291","row":234,"col":18}},"123":{"14":{"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | len v == 0\n                                            && sumSizeList v == 0}","ident":"_","row":123,"col":14},"1":{"ann":"forall a . {v : (Data.Heap.Binominal.Heap a) | heapSize v == 0}","ident":"Data.Heap.Binominal.empty","row":123,"col":1}},"118":{"25":{"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t1BoundedByX1}","ident":"_","row":118,"col":25},"57":{"ann":"a","ident":"ds_d2Y0","row":118,"col":57},"60":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1BoundedByX1}","ident":"t1BoundedByX1","row":118,"col":60},"9":{"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t1BoundedByX1}","ident":"t1BoundedByX2","row":118,"col":9},"54":{"ann":"a","ident":"ds_d2Y4","row":118,"col":54}},"239":{"7":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t <= VV}) | size v == size t}","ident":"tBounded","row":239,"col":7},"18":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t <= VV}) | size v == size t}","ident":"_","row":239,"col":18},"46":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":239,"col":46}},"113":{"25":{"ann":"(Data.Heap.Binominal.Tree a)","ident":"_","row":113,"col":25},"53":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2}","ident":"lq_anf$##7205759403792805235","row":113,"col":53},"9":{"ann":"(Data.Heap.Binominal.Tree a)","ident":"t2BoundedByX2","row":113,"col":9}},"209":{"44":{"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | len v == 0\n                                            && sumSizeList v == 0}","ident":"_","row":209,"col":44},"17":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"xs","row":209,"col":17},"1":{"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList x1}","ident":"Data.Heap.Binominal.reverseHeapList","row":209,"col":1},"41":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == xs}","ident":"xs","row":209,"col":41}},"131":{"28":{"ann":"{VV : a | VV == x}","ident":"x","row":131,"col":28},"30":{"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | len v == 0\n                                            && sumSizeList v == 0}","ident":"_","row":131,"col":30},"1":{"ann":"forall a .\na -> {v : (Data.Heap.Binominal.Heap a) | heapSize v == 1}","ident":"Data.Heap.Binominal.singleton","row":131,"col":1},"26":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805298","row":131,"col":26},"20":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"lq_anf$##7205759403792805304","row":131,"col":20},"11":{"ann":"a","ident":"x","row":131,"col":11},"33":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805301","row":131,"col":33},"21":{"ann":"{v : (Data.Heap.Binominal.Tree a) | root v == x}","ident":"lq_anf$##7205759403792805302","row":131,"col":21}},"86":{"30":{"ann":"a","ident":"x","row":86,"col":30},"1":{"ann":"forall a .\nx1:a -> x2:{VV : a | x1 <= VV} -> x3:(Data.Heap.Binominal.Tree {VV : a | x2 <= VV}) -> {VV : (Data.Heap.Binominal.Tree {VV : a | x1 <= VV}) | size VV == size x3}","ident":"Data.Heap.Binominal.boundedTreeTransitivityLemma","row":86,"col":1},"34":{"ann":"(Data.Heap.Binominal.Tree {VV : a | y <= VV})","ident":"tree","row":86,"col":34},"32":{"ann":"{VV : a | x <= VV}","ident":"y","row":86,"col":32}},"237":{"7":{"ann":"{VV : a | VV == root t}","ident":"x","row":237,"col":7},"16":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":237,"col":16},"11":{"ann":"{VV : a | VV == root t}","ident":"_","row":237,"col":11}},"248":{"13":{"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | root t' <= VV})] | len v >= 0\n                                                             && sumSizeList v >= 0\n                                                             && v == ts'}","ident":"ts'","row":248,"col":13},"6":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t'}","ident":"t'","row":248,"col":6},"10":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x' <= VV}) | size v == size tBounded\n                                                      && v == hd}","ident":"hd","row":248,"col":10}},"247":{"48":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t <= VV}) | size v == size t\n                                                          && v == tBounded}","ident":"tBounded","row":247,"col":48},"43":{"ann":"{VV : a | VV == root t'\n          && VV == x'}","ident":"x'","row":247,"col":43},"14":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x' <= VV}) | size v == size tBounded}","ident":"_","row":247,"col":14},"46":{"ann":"{VV : a | VV == root t\n          && VV == x}","ident":"x","row":247,"col":46},"9":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x' <= VV}) | size v == size tBounded}","ident":"hd","row":247,"col":9}},"45":{"1":{"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {VV : GHC.Types.Int | VV == sumSizeList x1\n                                                           && VV >= 0\n                                                           && len x1 <= VV}","ident":"Data.Heap.Binominal.sumSizeList","row":45,"col":1},"18":{"ann":"{v : GHC.Prim.Int# | v == 0}","ident":"lq_anf$##7205759403792805226","row":45,"col":18}},"203":{"37":{"ann":"forall a .\nx1:{v : (Data.Heap.Binominal.Heap a) | 0 < len (unheap v)} -> {v : [(Data.Heap.Binominal.Tree a)] | 0 < len v\n                                                                                                    && sumSizeList v == heapSize x1}","ident":"_","row":203,"col":37},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\n{VV : (Data.Heap.Binominal.Heap a) | 0 < len (unheap VV)} -> a","ident":"Data.Heap.Binominal.minimum","row":203,"col":1},"18":{"ann":"forall a b . x1:(a, b) -> {VV : a | VV == fst x1}","ident":"_","row":203,"col":18},"11":{"ann":"forall a .\nx1:(Data.Heap.Binominal.Tree a) -> {VV : a | VV == root x1}","ident":"_","row":203,"col":11},"24":{"ann":"x1:{v : [(Data.Heap.Binominal.Tree a)] | 0 < len v} -> {v : ((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | root (fst x15) <= VV})]) | size (fst v) + sumSizeList (snd v) == sumSizeList x1}","ident":"lq_anf$##7205759403792805318","row":203,"col":24}},"90":{"36":{"ann":"{VV : a | x <= VV}","ident":"y","row":90,"col":36},"1":{"ann":"forall a .\nx1:a -> x2:{VV : a | x1 <= VV} -> x3:[(Data.Heap.Binominal.Tree {VV : a | x2 <= VV})] -> {v : [(Data.Heap.Binominal.Tree {VV : a | x1 <= VV})] | sumSizeList v == sumSizeList x3}","ident":"Data.Heap.Binominal.boundedTreeListTransitivityLemma","row":90,"col":1},"34":{"ann":"a","ident":"x","row":90,"col":34},"38":{"ann":"[(Data.Heap.Binominal.Tree {VV : a | y <= VV})]","ident":"ts","row":90,"col":38}},"265":{"17":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts1}","ident":"ts1","row":265,"col":17},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:[(Data.Heap.Binominal.Tree a)] -> x3:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList x2 + sumSizeList x3}","ident":"Data.Heap.Binominal.merge'","row":265,"col":1},"8":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"ts1","row":265,"col":8}},"1":{"1":{"ann":"GHC.Types.Module","ident":"Data.Heap.Binominal.$trModule","row":1,"col":1}},"119":{"14":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805239","row":119,"col":14},"17":{"ann":"a","ident":"ds_d2Y4","row":119,"col":17},"35":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0}","ident":"ds_d2Y5","row":119,"col":35},"40":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805242","row":119,"col":40},"20":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | head v == t1BoundedByX2}","ident":"lq_anf$##7205759403792805241","row":119,"col":20},"41":{"ann":"{v : GHC.Types.Int | 1 <= v}","ident":"ds_d2Y2","row":119,"col":41},"11":{"ann":"{v : GHC.Types.Int | v >= 0}","ident":"ds_d2Y3","row":119,"col":11},"47":{"ann":"{v : GHC.Types.Int | 1 <= v}","ident":"ds_d2Y6","row":119,"col":47},"21":{"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t1BoundedByX1\n                                    && v == t1BoundedByX2}","ident":"t1BoundedByX2","row":119,"col":21},"10":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805240","row":119,"col":10}},"238":{"7":{"ann":"{VV : a | VV == root t'}","ident":"x'","row":238,"col":7},"12":{"ann":"{VV : a | VV == root t'}","ident":"_","row":238,"col":12},"17":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t'}","ident":"t'","row":238,"col":17}},"224":{"16":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList ts1}","ident":"lq_anf$##7205759403792805326","row":224,"col":16},"8":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"lq_anf$##7205759403792805327","row":224,"col":8},"33":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts1}","ident":"ts1","row":224,"col":33},"38":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts2}","ident":"ts2","row":224,"col":38}},"127":{"19":{"ann":"{v : (Data.Heap.Binominal.Heap a) | heapSize v >= 0\n                                    && v == h}","ident":"h","row":127,"col":19},"1":{"ann":"forall a .\nx1:(Data.Heap.Binominal.Heap a) -> {v : GHC.Types.Bool | v <=> heapSize x1 == 0}","ident":"Data.Heap.Binominal.null","row":127,"col":1},"24":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805232","row":127,"col":24},"6":{"ann":"(Data.Heap.Binominal.Heap a)","ident":"h","row":127,"col":6},"10":{"ann":"{v : GHC.Types.Int | v == heapSize h\n                     && v >= 0\n                     && len (unheap h) <= v}","ident":"lq_anf$##7205759403792805230","row":127,"col":10}},"236":{"19":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:{v : [(Data.Heap.Binominal.Tree a)] | 0 < len v} -> {v : ((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | root (fst v) <= VV})]) | size (fst v) + sumSizeList (snd v) == sumSizeList x2}","ident":"Data.Heap.Binominal.deleteMin'","row":236,"col":19},"12":{"ann":"{VV : [(Data.Heap.Binominal.Tree {VV : a | root t' <= VV})] | len VV >= 0}","ident":"ts'","row":236,"col":12},"30":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0}","ident":"ds_d2ZA","row":236,"col":30},"8":{"ann":"(Data.Heap.Binominal.Tree a)","ident":"t'","row":236,"col":8}},"214":{"56":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == x}","ident":"x","row":214,"col":56},"52":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == xs}","ident":"xs","row":214,"col":52},"58":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == acc}","ident":"acc","row":214,"col":58},"55":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | tail v == acc\n                                      && head v == x\n                                      && len v == 1 + len acc\n                                      && sumSizeList v == size x + sumSizeList acc}","ident":"lq_anf$##7205759403792805311","row":214,"col":55},"33":{"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> x2:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList x1 + sumSizeList x2}","ident":"Data.Heap.Binominal.reverseHeapListAux","row":214,"col":33}},"117":{"25":{"ann":"(Data.Heap.Binominal.Tree a)","ident":"_","row":117,"col":25},"53":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1}","ident":"lq_anf$##7205759403792805234","row":117,"col":53},"9":{"ann":"(Data.Heap.Binominal.Tree a)","ident":"t1BoundedByX1","row":117,"col":9}},"266":{"17":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0}","ident":"ds_d2Yv","row":266,"col":17}},"103":{"1":{"ann":"forall a b .\nx1:a -> (Data.Heap.Binominal.Tree {VV : a | x1 <= VV}) -> b -> b","ident":"Data.Heap.Binominal.assertBoundedTree","row":103,"col":1},"23":{"ann":"a","ident":"x","row":103,"col":23}},"147":{"17":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":147,"col":17},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Tree a) -> x3:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == size x2 + sumSizeList x3}","ident":"Data.Heap.Binominal.insert'","row":147,"col":1},"16":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v == 0\n                                      && sumSizeList v == 0}","ident":"lq_anf$##7205759403792805249","row":147,"col":16},"9":{"ann":"(Data.Heap.Binominal.Tree a)","ident":"t","row":147,"col":9}},"244":{"14":{"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | x <= VV})] | sumSizeList v == sumSizeList ts'}","ident":"_","row":244,"col":14},"49":{"ann":"{VV : a | VV == root t'\n          && VV == x'}","ident":"x'","row":244,"col":49},"52":{"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | root t' <= VV})] | len v >= 0\n                                                             && sumSizeList v >= 0\n                                                             && v == ts'}","ident":"ts'","row":244,"col":52},"47":{"ann":"{VV : a | VV == root t\n          && VV == x}","ident":"x","row":244,"col":47},"9":{"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | x <= VV})] | sumSizeList v == sumSizeList ts'}","ident":"tl","row":244,"col":9}},"222":{"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:{VV : (Data.Heap.Binominal.Heap a) | 0 < len (unheap VV)} -> {v : (Data.Heap.Binominal.Heap a) | 1 + heapSize v == heapSize x2}","ident":"Data.Heap.Binominal.deleteMin","row":222,"col":1},"11":{"ann":"{VV : (Data.Heap.Binominal.Heap a) | 0 < len (unheap VV)}","ident":"h","row":222,"col":11}},"46":{"43":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && v == xs}","ident":"xs","row":46,"col":43},"31":{"ann":"{v : GHC.Types.Int | v == sumSizeList xs\n                     && v >= 0\n                     && len xs <= v}","ident":"lq_anf$##7205759403792805228","row":46,"col":31},"22":{"ann":"{v : GHC.Types.Int | 1 <= v\n                     && v == 1 + sumSizeList (subtrees x)\n                     && v == size x}","ident":"lq_anf$##7205759403792805227","row":46,"col":22},"27":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == x}","ident":"x","row":46,"col":27}},"261":{"48":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts2}","ident":"ts2","row":261,"col":48},"31":{"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {v : (Data.Heap.Binominal.Heap a) | unheap v == x1\n                                                                         && heapSize v == sumSizeList x1}","ident":"Data.Heap.Binominal.Heap","row":261,"col":31},"36":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList ts1 + sumSizeList ts2}","ident":"lq_anf$##7205759403792805283","row":261,"col":36},"44":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts1}","ident":"ts1","row":261,"col":44},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Heap a) -> x3:(Data.Heap.Binominal.Heap a) -> {VV : (Data.Heap.Binominal.Heap a) | heapSize VV == heapSize x2 + heapSize x3}","ident":"Data.Heap.Binominal.merge","row":261,"col":1}},"243":{"48":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t' <= VV}) | size v == size t'\n                                                           && v == tBounded'}","ident":"tBounded'","row":243,"col":48},"43":{"ann":"{VV : a | VV == root t\n          && VV == x}","ident":"x","row":243,"col":43},"14":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x <= VV}) | size v == size tBounded'}","ident":"_","row":243,"col":14},"45":{"ann":"{VV : a | VV == root t'\n          && VV == x'}","ident":"x'","row":243,"col":45},"9":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x <= VV}) | size v == size tBounded'}","ident":"hd","row":243,"col":9}},"99":{"1":{"ann":"forall a . {v : GHC.Types.Bool | v} -> a -> a","ident":"Data.Heap.Binominal.assert","row":99,"col":1},"10":{"ann":"a","ident":"x","row":99,"col":10}},"80":{"1":{"ann":"forall a .\nx1:(Data.Heap.Binominal.Tree a) -> {VV : (Data.Heap.Binominal.Tree {VV : a | root x1 <= VV}) | size VV == size x1}","ident":"Data.Heap.Binominal.treeIsBoundedByItsRootLemma","row":80,"col":1}},"213":{"29":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == acc}","ident":"acc","row":213,"col":29},"1":{"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> x2:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList x1 + sumSizeList x2}","ident":"Data.Heap.Binominal.reverseHeapListAux","row":213,"col":1},"23":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"acc","row":213,"col":23}},"228":{"12":{"ann":"{VV : (Data.Heap.Binominal.Heap a) | 0 < len (unheap VV)}","ident":"h","row":228,"col":12},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:{VV : (Data.Heap.Binominal.Heap a) | 0 < len (unheap VV)} -> {v : (a, (Data.Heap.Binominal.Heap {VV : a | fst v <= VV})) | 1 + heapSize (snd v) == heapSize x2}","ident":"Data.Heap.Binominal.deleteMin2","row":228,"col":1}},"245":{"12":{"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | x <= VV})] | sumSizeList v == sumSizeList ts'\n                                                       && len v >= 0\n                                                       && sumSizeList v >= 0\n                                                       && v == tl}","ident":"tl","row":245,"col":12},"6":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":245,"col":6},"9":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x <= VV}) | size v == size tBounded'\n                                                     && v == hd}","ident":"hd","row":245,"col":9}},"223":{"31":{"ann":"((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | root (fst x9) <= VV})])","ident":"lq_anf$##7205759403792805323","row":223,"col":31},"58":{"ann":"{v : (Data.Heap.Binominal.Heap a) | 0 < len (unheap v)\n                                    && heapSize v >= 0\n                                    && v == h}","ident":"h","row":223,"col":58},"42":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | 0 < len v\n                                      && sumSizeList v == heapSize h}","ident":"lq_anf$##7205759403792805322","row":223,"col":42}},"290":{"12":{"ann":"{VV : [a]<\\x1 VV -> {VV : a | x1 <= VV}> | len VV == heapSize h'}","ident":"lq_anf$##7205759403792805337","row":290,"col":12},"3":{"ann":"{VV : a | VV == minElt}","ident":"minElt","row":290,"col":3},"21":{"ann":"{v : (Data.Heap.Binominal.Heap {VV : a | minElt <= VV\n                                         && VV >= minElt}) | heapSize v >= 0\n                                                             && v == h'}","ident":"h'","row":290,"col":21}},"289":{"22":{"ann":"(a, (Data.Heap.Binominal.Heap {VV : a | fst x4 <= VV}))","ident":"_","row":289,"col":22},"16":{"ann":"(Data.Heap.Binominal.Heap {VV : a | minElt <= VV\n                                    && VV >= minElt})","ident":"h'","row":289,"col":16},"8":{"ann":"a","ident":"minElt","row":289,"col":8},"33":{"ann":"{v : (Data.Heap.Binominal.Heap a) | heapSize v >= 0}","ident":"ds_d30p","row":289,"col":33}},"218":{"1":{"ann":"forall a .\nx1:{VV : (Data.Heap.Binominal.Heap a) | 0 < len (unheap VV)} -> {v : [(Data.Heap.Binominal.Tree a)] | 0 < len v\n                                                                                                      && sumSizeList v == heapSize x1}","ident":"Data.Heap.Binominal.unheapNonempty","row":218,"col":1},"34":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts}","ident":"lq_anf$##7205759403792805314","row":218,"col":34}},"143":{"36":{"ann":"{v : (Data.Heap.Binominal.Tree a) | root v == x}","ident":"lq_anf$##7205759403792805261","row":143,"col":36},"49":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805260","row":143,"col":49},"22":{"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {v : (Data.Heap.Binominal.Heap a) | unheap v == x1\n                                                                         && heapSize v == sumSizeList x1}","ident":"Data.Heap.Binominal.Heap","row":143,"col":22},"44":{"ann":"{VV : a | VV == x}","ident":"x","row":143,"col":44},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\na -> x3:(Data.Heap.Binominal.Heap a) -> {v : (Data.Heap.Binominal.Heap a) | 1 + heapSize x3 == heapSize v}","ident":"Data.Heap.Binominal.insert","row":143,"col":1},"52":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts}","ident":"ts","row":143,"col":52},"46":{"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | len v == 0\n                                            && sumSizeList v == 0}","ident":"_","row":143,"col":46},"27":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"lq_anf$##7205759403792805262","row":143,"col":27},"8":{"ann":"a","ident":"x","row":143,"col":8},"42":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805257","row":143,"col":42}},"240":{"7":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t' <= VV}) | size v == size t'}","ident":"tBounded'","row":240,"col":7},"19":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t' <= VV}) | size v == size t'}","ident":"_","row":240,"col":19},"47":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t'}","ident":"t'","row":240,"col":47}},"161":{"28":{"ann":"{v : (Data.Heap.Binominal.Heap a) | heapSize v == len xs}","ident":"lq_anf$##7205759403792805296","row":161,"col":28},"19":{"ann":"{v : (GHC.Classes.Ord a) | v == $dOrd_a2KK}","ident":"$dOrd_a2KK","row":161,"col":19},"26":{"ann":"{VV : a | VV == x}","ident":"x","row":161,"col":26},"38":{"ann":"{v : [a] | len v >= 0\n           && sumSizeList v >= 0\n           && v == xs}","ident":"xs","row":161,"col":38}},"107":{"1":{"ann":"forall a b .\nx1:a -> [(Data.Heap.Binominal.Tree {VV : a | x1 <= VV})] -> b -> b","ident":"Data.Heap.Binominal.assertBoundedTreeList","row":107,"col":1},"27":{"ann":"a","ident":"x","row":107,"col":27}},"111":{"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Tree a) -> x3:(Data.Heap.Binominal.Tree a) -> {v : (Data.Heap.Binominal.Tree a) | size v == size x2 + size x3}","ident":"Data.Heap.Binominal.link","row":111,"col":1},"59":{"ann":"(Data.Heap.Binominal.Tree a)","ident":"t2","row":111,"col":59},"6":{"ann":"(Data.Heap.Binominal.Tree a)","ident":"t1","row":111,"col":6}},"230":{"25":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList ts1}","ident":"lq_anf$##7205759403792805332","row":230,"col":25},"12":{"ann":"(Data.Heap.Binominal.Heap a)","ident":"lq_anf$##7205759403792805334","row":230,"col":12},"17":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"lq_anf$##7205759403792805333","row":230,"col":17},"4":{"ann":"{VV : a | VV == minElt}","ident":"minElt","row":230,"col":4},"47":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts2}","ident":"ts2","row":230,"col":47},"42":{"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | minElt <= VV})] | len v >= 0\n                                                            && sumSizeList v >= 0\n                                                            && v == ts1}","ident":"ts1","row":230,"col":42}},"229":{"36":{"ann":"((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | root (fst x9) <= VV})])","ident":"lq_anf$##7205759403792805329","row":229,"col":36},"63":{"ann":"{v : (Data.Heap.Binominal.Heap a) | 0 < len (unheap v)\n                                    && heapSize v >= 0\n                                    && v == h}","ident":"h","row":229,"col":63},"47":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | 0 < len v\n                                      && sumSizeList v == heapSize h}","ident":"lq_anf$##7205759403792805328","row":229,"col":47}},"81":{"43":{"ann":"{v : GHC.Types.Int | 1 <= v}","ident":"ds_d2XC","row":81,"col":43},"14":{"ann":"{v : GHC.Types.Int | v >= 0}","ident":"ds_d2Xz","row":81,"col":14},"22":{"ann":"a","ident":"ds_d2XA","row":81,"col":22},"34":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0}","ident":"ds_d2XB","row":81,"col":34},"3":{"ann":"forall a .\nx1:{v : GHC.Types.Int | v >= 0} -> x2:a -> x3:[(Data.Heap.Binominal.Tree {VV : a | x2 <= VV})] -> x4:{v : GHC.Types.Int | 1 <= v\n                                                                                                                          && v == 1 + sumSizeList x3} -> {v : (Data.Heap.Binominal.Tree a) | size v == x4\n                                                                                                                                                                                             && subtrees v == x3\n                                                                                                                                                                                             && root v == x2\n                                                                                                                                                                                             && rank v == x1}","ident":"Data.Heap.Binominal.Node","row":81,"col":3}},"155":{"1":{"ann":"forall a .\nx1:[a] -> {VV : GHC.Types.Int | VV == len x1\n                                && VV >= 0}","ident":"Data.Heap.Binominal.len","row":155,"col":1},"10":{"ann":"{v : GHC.Prim.Int# | v == 0}","ident":"lq_anf$##7205759403792805306","row":155,"col":10}}},"sptypes":[{"start":{"line":1,"column":1},"ann":"GHC.Types.Module","ident":"Data.Heap.Binominal.$trModule","stop":{"line":1,"column":1}},{"start":{"line":45,"column":1},"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {VV : GHC.Types.Int | VV == sumSizeList x1\n                                                           && VV >= 0\n                                                           && len x1 <= VV}","ident":"Data.Heap.Binominal.sumSizeList","stop":{"line":45,"column":12}},{"start":{"line":45,"column":18},"ann":"{v : GHC.Prim.Int# | v == 0}","ident":"lq_anf$##7205759403792805226","stop":{"line":45,"column":19}},{"start":{"line":46,"column":22},"ann":"{v : GHC.Types.Int | 1 <= v\n                     && v == 1 + sumSizeList (subtrees x)\n                     && v == size x}","ident":"lq_anf$##7205759403792805227","stop":{"line":46,"column":28}},{"start":{"line":46,"column":27},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == x}","ident":"x","stop":{"line":46,"column":28}},{"start":{"line":46,"column":31},"ann":"{v : GHC.Types.Int | v == sumSizeList xs\n                     && v >= 0\n                     && len xs <= v}","ident":"lq_anf$##7205759403792805228","stop":{"line":46,"column":45}},{"start":{"line":46,"column":43},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && v == xs}","ident":"xs","stop":{"line":46,"column":45}},{"start":{"line":51,"column":1},"ann":"forall a .\nx1:(Data.Heap.Binominal.Heap a) -> {VV : GHC.Types.Int | VV == heapSize x1\n                                                         && VV >= 0\n                                                         && len (unheap x1) <= VV}","ident":"Data.Heap.Binominal.heapSize","stop":{"line":51,"column":9}},{"start":{"line":51,"column":22},"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {VV : GHC.Types.Int | VV == sumSizeList x1\n                                                           && VV >= 0\n                                                           && len x1 <= VV}","ident":"Data.Heap.Binominal.sumSizeList","stop":{"line":51,"column":36}},{"start":{"line":51,"column":34},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts}","ident":"ts","stop":{"line":51,"column":36}},{"start":{"line":80,"column":1},"ann":"forall a .\nx1:(Data.Heap.Binominal.Tree a) -> {VV : (Data.Heap.Binominal.Tree {VV : a | root x1 <= VV}) | size VV == size x1}","ident":"Data.Heap.Binominal.treeIsBoundedByItsRootLemma","stop":{"line":80,"column":28}},{"start":{"line":81,"column":3},"ann":"forall a .\nx1:{v : GHC.Types.Int | v >= 0} -> x2:a -> x3:[(Data.Heap.Binominal.Tree {VV : a | x2 <= VV})] -> x4:{v : GHC.Types.Int | 1 <= v\n                                                                                                                          && v == 1 + sumSizeList x3} -> {v : (Data.Heap.Binominal.Tree a) | size v == x4\n                                                                                                                                                                                             && subtrees v == x3\n                                                                                                                                                                                             && root v == x2\n                                                                                                                                                                                             && rank v == x1}","ident":"Data.Heap.Binominal.Node","stop":{"line":81,"column":46}},{"start":{"line":81,"column":14},"ann":"{v : GHC.Types.Int | v >= 0}","ident":"ds_d2Xz","stop":{"line":81,"column":15}},{"start":{"line":81,"column":22},"ann":"a","ident":"ds_d2XA","stop":{"line":81,"column":23}},{"start":{"line":81,"column":34},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0}","ident":"ds_d2XB","stop":{"line":81,"column":36}},{"start":{"line":81,"column":43},"ann":"{v : GHC.Types.Int | 1 <= v}","ident":"ds_d2XC","stop":{"line":81,"column":45}},{"start":{"line":86,"column":1},"ann":"forall a .\nx1:a -> x2:{VV : a | x1 <= VV} -> x3:(Data.Heap.Binominal.Tree {VV : a | x2 <= VV}) -> {VV : (Data.Heap.Binominal.Tree {VV : a | x1 <= VV}) | size VV == size x3}","ident":"Data.Heap.Binominal.boundedTreeTransitivityLemma","stop":{"line":86,"column":29}},{"start":{"line":86,"column":30},"ann":"a","ident":"x","stop":{"line":86,"column":31}},{"start":{"line":86,"column":32},"ann":"{VV : a | x <= VV}","ident":"y","stop":{"line":86,"column":33}},{"start":{"line":86,"column":34},"ann":"(Data.Heap.Binominal.Tree {VV : a | y <= VV})","ident":"tree","stop":{"line":86,"column":38}},{"start":{"line":90,"column":1},"ann":"forall a .\nx1:a -> x2:{VV : a | x1 <= VV} -> x3:[(Data.Heap.Binominal.Tree {VV : a | x2 <= VV})] -> {v : [(Data.Heap.Binominal.Tree {VV : a | x1 <= VV})] | sumSizeList v == sumSizeList x3}","ident":"Data.Heap.Binominal.boundedTreeListTransitivityLemma","stop":{"line":90,"column":33}},{"start":{"line":90,"column":34},"ann":"a","ident":"x","stop":{"line":90,"column":35}},{"start":{"line":90,"column":36},"ann":"{VV : a | x <= VV}","ident":"y","stop":{"line":90,"column":37}},{"start":{"line":90,"column":38},"ann":"[(Data.Heap.Binominal.Tree {VV : a | y <= VV})]","ident":"ts","stop":{"line":90,"column":40}},{"start":{"line":99,"column":1},"ann":"forall a . {v : GHC.Types.Bool | v} -> a -> a","ident":"Data.Heap.Binominal.assert","stop":{"line":99,"column":7}},{"start":{"line":99,"column":10},"ann":"a","ident":"x","stop":{"line":99,"column":11}},{"start":{"line":103,"column":1},"ann":"forall a b .\nx1:a -> (Data.Heap.Binominal.Tree {VV : a | x1 <= VV}) -> b -> b","ident":"Data.Heap.Binominal.assertBoundedTree","stop":{"line":103,"column":18}},{"start":{"line":103,"column":23},"ann":"a","ident":"x","stop":{"line":103,"column":24}},{"start":{"line":107,"column":1},"ann":"forall a b .\nx1:a -> [(Data.Heap.Binominal.Tree {VV : a | x1 <= VV})] -> b -> b","ident":"Data.Heap.Binominal.assertBoundedTreeList","stop":{"line":107,"column":22}},{"start":{"line":107,"column":27},"ann":"a","ident":"x","stop":{"line":107,"column":28}},{"start":{"line":111,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Tree a) -> x3:(Data.Heap.Binominal.Tree a) -> {v : (Data.Heap.Binominal.Tree a) | size v == size x2 + size x3}","ident":"Data.Heap.Binominal.link","stop":{"line":111,"column":5}},{"start":{"line":111,"column":6},"ann":"(Data.Heap.Binominal.Tree a)","ident":"t1","stop":{"line":111,"column":8}},{"start":{"line":111,"column":59},"ann":"(Data.Heap.Binominal.Tree a)","ident":"t2","stop":{"line":111,"column":61}},{"start":{"line":112,"column":5},"ann":"a","ident":"ds_d2Y0","stop":{"line":112,"column":7}},{"start":{"line":112,"column":11},"ann":"a","ident":"ds_d2Y4","stop":{"line":112,"column":13}},{"start":{"line":113,"column":9},"ann":"(Data.Heap.Binominal.Tree a)","ident":"t2BoundedByX2","stop":{"line":113,"column":22}},{"start":{"line":113,"column":25},"ann":"(Data.Heap.Binominal.Tree a)","ident":"_","stop":{"line":113,"column":55}},{"start":{"line":113,"column":53},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2}","ident":"lq_anf$##7205759403792805235","stop":{"line":113,"column":55}},{"start":{"line":114,"column":9},"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t2BoundedByX2}","ident":"t2BoundedByX1","stop":{"line":114,"column":22}},{"start":{"line":114,"column":25},"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t2BoundedByX2}","ident":"_","stop":{"line":114,"column":73}},{"start":{"line":114,"column":54},"ann":"a","ident":"ds_d2Y0","stop":{"line":114,"column":56}},{"start":{"line":114,"column":57},"ann":"a","ident":"ds_d2Y4","stop":{"line":114,"column":59}},{"start":{"line":114,"column":60},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2BoundedByX2}","ident":"t2BoundedByX2","stop":{"line":114,"column":73}},{"start":{"line":115,"column":10},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805245","stop":{"line":115,"column":16}},{"start":{"line":115,"column":11},"ann":"{v : GHC.Types.Int | v >= 0}","ident":"ds_d2XZ","stop":{"line":115,"column":13}},{"start":{"line":115,"column":14},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805244","stop":{"line":115,"column":15}},{"start":{"line":115,"column":17},"ann":"a","ident":"ds_d2Y0","stop":{"line":115,"column":19}},{"start":{"line":115,"column":20},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | head v == t2BoundedByX1}","ident":"lq_anf$##7205759403792805246","stop":{"line":115,"column":39}},{"start":{"line":115,"column":21},"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t2BoundedByX2\n                                    && v == t2BoundedByX1}","ident":"t2BoundedByX1","stop":{"line":115,"column":34}},{"start":{"line":115,"column":35},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0}","ident":"ds_d2Y1","stop":{"line":115,"column":38}},{"start":{"line":115,"column":40},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805247","stop":{"line":115,"column":51}},{"start":{"line":115,"column":41},"ann":"{v : GHC.Types.Int | 1 <= v}","ident":"ds_d2Y2","stop":{"line":115,"column":44}},{"start":{"line":115,"column":47},"ann":"{v : GHC.Types.Int | 1 <= v}","ident":"ds_d2Y6","stop":{"line":115,"column":50}},{"start":{"line":117,"column":9},"ann":"(Data.Heap.Binominal.Tree a)","ident":"t1BoundedByX1","stop":{"line":117,"column":22}},{"start":{"line":117,"column":25},"ann":"(Data.Heap.Binominal.Tree a)","ident":"_","stop":{"line":117,"column":55}},{"start":{"line":117,"column":53},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1}","ident":"lq_anf$##7205759403792805234","stop":{"line":117,"column":55}},{"start":{"line":118,"column":9},"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t1BoundedByX1}","ident":"t1BoundedByX2","stop":{"line":118,"column":22}},{"start":{"line":118,"column":25},"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t1BoundedByX1}","ident":"_","stop":{"line":118,"column":73}},{"start":{"line":118,"column":54},"ann":"a","ident":"ds_d2Y4","stop":{"line":118,"column":56}},{"start":{"line":118,"column":57},"ann":"a","ident":"ds_d2Y0","stop":{"line":118,"column":59}},{"start":{"line":118,"column":60},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1BoundedByX1}","ident":"t1BoundedByX1","stop":{"line":118,"column":73}},{"start":{"line":119,"column":10},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805240","stop":{"line":119,"column":16}},{"start":{"line":119,"column":11},"ann":"{v : GHC.Types.Int | v >= 0}","ident":"ds_d2Y3","stop":{"line":119,"column":13}},{"start":{"line":119,"column":14},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805239","stop":{"line":119,"column":15}},{"start":{"line":119,"column":17},"ann":"a","ident":"ds_d2Y4","stop":{"line":119,"column":19}},{"start":{"line":119,"column":20},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | head v == t1BoundedByX2}","ident":"lq_anf$##7205759403792805241","stop":{"line":119,"column":39}},{"start":{"line":119,"column":21},"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t1BoundedByX1\n                                    && v == t1BoundedByX2}","ident":"t1BoundedByX2","stop":{"line":119,"column":34}},{"start":{"line":119,"column":35},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0}","ident":"ds_d2Y5","stop":{"line":119,"column":38}},{"start":{"line":119,"column":40},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805242","stop":{"line":119,"column":51}},{"start":{"line":119,"column":41},"ann":"{v : GHC.Types.Int | 1 <= v}","ident":"ds_d2Y2","stop":{"line":119,"column":44}},{"start":{"line":119,"column":47},"ann":"{v : GHC.Types.Int | 1 <= v}","ident":"ds_d2Y6","stop":{"line":119,"column":50}},{"start":{"line":123,"column":1},"ann":"forall a . {v : (Data.Heap.Binominal.Heap a) | heapSize v == 0}","ident":"Data.Heap.Binominal.empty","stop":{"line":123,"column":6}},{"start":{"line":123,"column":14},"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | len v == 0\n                                            && sumSizeList v == 0}","ident":"_","stop":{"line":123,"column":16}},{"start":{"line":127,"column":1},"ann":"forall a .\nx1:(Data.Heap.Binominal.Heap a) -> {v : GHC.Types.Bool | v <=> heapSize x1 == 0}","ident":"Data.Heap.Binominal.null","stop":{"line":127,"column":5}},{"start":{"line":127,"column":6},"ann":"(Data.Heap.Binominal.Heap a)","ident":"h","stop":{"line":127,"column":7}},{"start":{"line":127,"column":10},"ann":"{v : GHC.Types.Int | v == heapSize h\n                     && v >= 0\n                     && len (unheap h) <= v}","ident":"lq_anf$##7205759403792805230","stop":{"line":127,"column":20}},{"start":{"line":127,"column":19},"ann":"{v : (Data.Heap.Binominal.Heap a) | heapSize v >= 0\n                                    && v == h}","ident":"h","stop":{"line":127,"column":20}},{"start":{"line":127,"column":24},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805232","stop":{"line":127,"column":25}},{"start":{"line":131,"column":1},"ann":"forall a .\na -> {v : (Data.Heap.Binominal.Heap a) | heapSize v == 1}","ident":"Data.Heap.Binominal.singleton","stop":{"line":131,"column":10}},{"start":{"line":131,"column":11},"ann":"a","ident":"x","stop":{"line":131,"column":12}},{"start":{"line":131,"column":20},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"lq_anf$##7205759403792805304","stop":{"line":131,"column":35}},{"start":{"line":131,"column":21},"ann":"{v : (Data.Heap.Binominal.Tree a) | root v == x}","ident":"lq_anf$##7205759403792805302","stop":{"line":131,"column":34}},{"start":{"line":131,"column":26},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805298","stop":{"line":131,"column":27}},{"start":{"line":131,"column":28},"ann":"{VV : a | VV == x}","ident":"x","stop":{"line":131,"column":29}},{"start":{"line":131,"column":30},"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | len v == 0\n                                            && sumSizeList v == 0}","ident":"_","stop":{"line":131,"column":32}},{"start":{"line":131,"column":33},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805301","stop":{"line":131,"column":34}},{"start":{"line":143,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\na -> x3:(Data.Heap.Binominal.Heap a) -> {v : (Data.Heap.Binominal.Heap a) | 1 + heapSize x3 == heapSize v}","ident":"Data.Heap.Binominal.insert","stop":{"line":143,"column":7}},{"start":{"line":143,"column":8},"ann":"a","ident":"x","stop":{"line":143,"column":9}},{"start":{"line":143,"column":22},"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {v : (Data.Heap.Binominal.Heap a) | unheap v == x1\n                                                                         && heapSize v == sumSizeList x1}","ident":"Data.Heap.Binominal.Heap","stop":{"line":143,"column":55}},{"start":{"line":143,"column":27},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"lq_anf$##7205759403792805262","stop":{"line":143,"column":55}},{"start":{"line":143,"column":36},"ann":"{v : (Data.Heap.Binominal.Tree a) | root v == x}","ident":"lq_anf$##7205759403792805261","stop":{"line":143,"column":51}},{"start":{"line":143,"column":42},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805257","stop":{"line":143,"column":43}},{"start":{"line":143,"column":44},"ann":"{VV : a | VV == x}","ident":"x","stop":{"line":143,"column":45}},{"start":{"line":143,"column":46},"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | len v == 0\n                                            && sumSizeList v == 0}","ident":"_","stop":{"line":143,"column":48}},{"start":{"line":143,"column":49},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805260","stop":{"line":143,"column":50}},{"start":{"line":143,"column":52},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts}","ident":"ts","stop":{"line":143,"column":54}},{"start":{"line":147,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Tree a) -> x3:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == size x2 + sumSizeList x3}","ident":"Data.Heap.Binominal.insert'","stop":{"line":147,"column":8}},{"start":{"line":147,"column":9},"ann":"(Data.Heap.Binominal.Tree a)","ident":"t","stop":{"line":147,"column":10}},{"start":{"line":147,"column":16},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v == 0\n                                      && sumSizeList v == 0}","ident":"lq_anf$##7205759403792805249","stop":{"line":147,"column":19}},{"start":{"line":147,"column":17},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":147,"column":18}},{"start":{"line":149,"column":5},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == rank t}","ident":"lq_anf$##7205759403792805250","stop":{"line":149,"column":11}},{"start":{"line":149,"column":10},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":149,"column":11}},{"start":{"line":149,"column":14},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == rank t'}","ident":"lq_anf$##7205759403792805251","stop":{"line":149,"column":21}},{"start":{"line":149,"column":19},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t'}","ident":"t'","stop":{"line":149,"column":21}},{"start":{"line":149,"column":24},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":149,"column":25}},{"start":{"line":149,"column":28},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0}","ident":"ds_d2Y9","stop":{"line":149,"column":30}},{"start":{"line":150,"column":24},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Tree a) -> x3:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == size x2 + sumSizeList x3}","ident":"Data.Heap.Binominal.insert'","stop":{"line":150,"column":47}},{"start":{"line":150,"column":32},"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t + size t'}","ident":"lq_anf$##7205759403792805254","stop":{"line":150,"column":43}},{"start":{"line":150,"column":38},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":150,"column":39}},{"start":{"line":150,"column":40},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t'}","ident":"t'","stop":{"line":150,"column":42}},{"start":{"line":150,"column":44},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts'}","ident":"ts'","stop":{"line":150,"column":47}},{"start":{"line":155,"column":1},"ann":"forall a .\nx1:[a] -> {VV : GHC.Types.Int | VV == len x1\n                                && VV >= 0}","ident":"Data.Heap.Binominal.len","stop":{"line":155,"column":4}},{"start":{"line":155,"column":10},"ann":"{v : GHC.Prim.Int# | v == 0}","ident":"lq_anf$##7205759403792805306","stop":{"line":155,"column":11}},{"start":{"line":156,"column":14},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805308","stop":{"line":156,"column":15}},{"start":{"line":156,"column":18},"ann":"{v : GHC.Types.Int | v == len xs\n                     && v >= 0}","ident":"lq_anf$##7205759403792805309","stop":{"line":156,"column":24}},{"start":{"line":156,"column":22},"ann":"{v : [a] | len v >= 0\n           && sumSizeList v >= 0\n           && v == xs}","ident":"xs","stop":{"line":156,"column":24}},{"start":{"line":160,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:[a] -> {v : (Data.Heap.Binominal.Heap a) | heapSize v == len x2}","ident":"Data.Heap.Binominal.fromList","stop":{"line":160,"column":9}},{"start":{"line":160,"column":15},"ann":"forall a . {v : (Data.Heap.Binominal.Heap a) | heapSize v == 0}","ident":"_","stop":{"line":160,"column":20}},{"start":{"line":161,"column":19},"ann":"{v : (GHC.Classes.Ord a) | v == $dOrd_a2KK}","ident":"$dOrd_a2KK","stop":{"line":161,"column":41}},{"start":{"line":161,"column":26},"ann":"{VV : a | VV == x}","ident":"x","stop":{"line":161,"column":27}},{"start":{"line":161,"column":28},"ann":"{v : (Data.Heap.Binominal.Heap a) | heapSize v == len xs}","ident":"lq_anf$##7205759403792805296","stop":{"line":161,"column":41}},{"start":{"line":161,"column":38},"ann":"{v : [a] | len v >= 0\n           && sumSizeList v >= 0\n           && v == xs}","ident":"xs","stop":{"line":161,"column":40}},{"start":{"line":203,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\n{VV : (Data.Heap.Binominal.Heap a) | 0 < len (unheap VV)} -> a","ident":"Data.Heap.Binominal.minimum","stop":{"line":203,"column":8}},{"start":{"line":203,"column":11},"ann":"forall a .\nx1:(Data.Heap.Binominal.Tree a) -> {VV : a | VV == root x1}","ident":"_","stop":{"line":203,"column":15}},{"start":{"line":203,"column":18},"ann":"forall a b . x1:(a, b) -> {VV : a | VV == fst x1}","ident":"_","stop":{"line":203,"column":21}},{"start":{"line":203,"column":24},"ann":"x1:{v : [(Data.Heap.Binominal.Tree a)] | 0 < len v} -> {v : ((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | root (fst x15) <= VV})]) | size (fst v) + sumSizeList (snd v) == sumSizeList x1}","ident":"lq_anf$##7205759403792805318","stop":{"line":203,"column":34}},{"start":{"line":203,"column":37},"ann":"forall a .\nx1:{v : (Data.Heap.Binominal.Heap a) | 0 < len (unheap v)} -> {v : [(Data.Heap.Binominal.Tree a)] | 0 < len v\n                                                                                                    && sumSizeList v == heapSize x1}","ident":"_","stop":{"line":203,"column":51}},{"start":{"line":209,"column":1},"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList x1}","ident":"Data.Heap.Binominal.reverseHeapList","stop":{"line":209,"column":16}},{"start":{"line":209,"column":17},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"xs","stop":{"line":209,"column":19}},{"start":{"line":209,"column":41},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == xs}","ident":"xs","stop":{"line":209,"column":43}},{"start":{"line":209,"column":44},"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | len v == 0\n                                            && sumSizeList v == 0}","ident":"_","stop":{"line":209,"column":46}},{"start":{"line":213,"column":1},"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> x2:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList x1 + sumSizeList x2}","ident":"Data.Heap.Binominal.reverseHeapListAux","stop":{"line":213,"column":19}},{"start":{"line":213,"column":23},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"acc","stop":{"line":213,"column":26}},{"start":{"line":213,"column":29},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == acc}","ident":"acc","stop":{"line":213,"column":32}},{"start":{"line":214,"column":33},"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> x2:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList x1 + sumSizeList x2}","ident":"Data.Heap.Binominal.reverseHeapListAux","stop":{"line":214,"column":62}},{"start":{"line":214,"column":52},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == xs}","ident":"xs","stop":{"line":214,"column":54}},{"start":{"line":214,"column":55},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | tail v == acc\n                                      && head v == x\n                                      && len v == 1 + len acc\n                                      && sumSizeList v == size x + sumSizeList acc}","ident":"lq_anf$##7205759403792805311","stop":{"line":214,"column":62}},{"start":{"line":214,"column":56},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == x}","ident":"x","stop":{"line":214,"column":57}},{"start":{"line":214,"column":58},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == acc}","ident":"acc","stop":{"line":214,"column":61}},{"start":{"line":218,"column":1},"ann":"forall a .\nx1:{VV : (Data.Heap.Binominal.Heap a) | 0 < len (unheap VV)} -> {v : [(Data.Heap.Binominal.Tree a)] | 0 < len v\n                                                                                                      && sumSizeList v == heapSize x1}","ident":"Data.Heap.Binominal.unheapNonempty","stop":{"line":218,"column":15}},{"start":{"line":218,"column":34},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts}","ident":"lq_anf$##7205759403792805314","stop":{"line":218,"column":36}},{"start":{"line":222,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:{VV : (Data.Heap.Binominal.Heap a) | 0 < len (unheap VV)} -> {v : (Data.Heap.Binominal.Heap a) | 1 + heapSize v == heapSize x2}","ident":"Data.Heap.Binominal.deleteMin","stop":{"line":222,"column":10}},{"start":{"line":222,"column":11},"ann":"{VV : (Data.Heap.Binominal.Heap a) | 0 < len (unheap VV)}","ident":"h","stop":{"line":222,"column":12}},{"start":{"line":223,"column":31},"ann":"((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | root (fst x9) <= VV})])","ident":"lq_anf$##7205759403792805323","stop":{"line":223,"column":60}},{"start":{"line":223,"column":42},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | 0 < len v\n                                      && sumSizeList v == heapSize h}","ident":"lq_anf$##7205759403792805322","stop":{"line":223,"column":60}},{"start":{"line":223,"column":58},"ann":"{v : (Data.Heap.Binominal.Heap a) | 0 < len (unheap v)\n                                    && heapSize v >= 0\n                                    && v == h}","ident":"h","stop":{"line":223,"column":59}},{"start":{"line":224,"column":8},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"lq_anf$##7205759403792805327","stop":{"line":224,"column":42}},{"start":{"line":224,"column":16},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList ts1}","ident":"lq_anf$##7205759403792805326","stop":{"line":224,"column":37}},{"start":{"line":224,"column":33},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts1}","ident":"ts1","stop":{"line":224,"column":36}},{"start":{"line":224,"column":38},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts2}","ident":"ts2","stop":{"line":224,"column":41}},{"start":{"line":228,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:{VV : (Data.Heap.Binominal.Heap a) | 0 < len (unheap VV)} -> {v : (a, (Data.Heap.Binominal.Heap {VV : a | fst v <= VV})) | 1 + heapSize (snd v) == heapSize x2}","ident":"Data.Heap.Binominal.deleteMin2","stop":{"line":228,"column":11}},{"start":{"line":228,"column":12},"ann":"{VV : (Data.Heap.Binominal.Heap a) | 0 < len (unheap VV)}","ident":"h","stop":{"line":228,"column":13}},{"start":{"line":229,"column":36},"ann":"((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | root (fst x9) <= VV})])","ident":"lq_anf$##7205759403792805329","stop":{"line":229,"column":65}},{"start":{"line":229,"column":47},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | 0 < len v\n                                      && sumSizeList v == heapSize h}","ident":"lq_anf$##7205759403792805328","stop":{"line":229,"column":65}},{"start":{"line":229,"column":63},"ann":"{v : (Data.Heap.Binominal.Heap a) | 0 < len (unheap v)\n                                    && heapSize v >= 0\n                                    && v == h}","ident":"h","stop":{"line":229,"column":64}},{"start":{"line":230,"column":4},"ann":"{VV : a | VV == minElt}","ident":"minElt","stop":{"line":230,"column":10}},{"start":{"line":230,"column":12},"ann":"(Data.Heap.Binominal.Heap a)","ident":"lq_anf$##7205759403792805334","stop":{"line":230,"column":51}},{"start":{"line":230,"column":17},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"lq_anf$##7205759403792805333","stop":{"line":230,"column":51}},{"start":{"line":230,"column":25},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList ts1}","ident":"lq_anf$##7205759403792805332","stop":{"line":230,"column":46}},{"start":{"line":230,"column":42},"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | minElt <= VV})] | len v >= 0\n                                                            && sumSizeList v >= 0\n                                                            && v == ts1}","ident":"ts1","stop":{"line":230,"column":45}},{"start":{"line":230,"column":47},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts2}","ident":"ts2","stop":{"line":230,"column":50}},{"start":{"line":234,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:{v : [(Data.Heap.Binominal.Tree a)] | 0 < len v} -> {v : ((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | root (fst v) <= VV})]) | size (fst v) + sumSizeList (snd v) == sumSizeList x2}","ident":"Data.Heap.Binominal.deleteMin'","stop":{"line":234,"column":11}},{"start":{"line":234,"column":18},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v == 0\n                                      && sumSizeList v == 0}","ident":"lq_anf$##7205759403792805291","stop":{"line":234,"column":25}},{"start":{"line":234,"column":19},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":234,"column":20}},{"start":{"line":234,"column":22},"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | len v == 0\n                                            && sumSizeList v == 0}","ident":"_","stop":{"line":234,"column":24}},{"start":{"line":236,"column":8},"ann":"(Data.Heap.Binominal.Tree a)","ident":"t'","stop":{"line":236,"column":10}},{"start":{"line":236,"column":12},"ann":"{VV : [(Data.Heap.Binominal.Tree {VV : a | root t' <= VV})] | len VV >= 0}","ident":"ts'","stop":{"line":236,"column":15}},{"start":{"line":236,"column":19},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:{v : [(Data.Heap.Binominal.Tree a)] | 0 < len v} -> {v : ((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | root (fst v) <= VV})]) | size (fst v) + sumSizeList (snd v) == sumSizeList x2}","ident":"Data.Heap.Binominal.deleteMin'","stop":{"line":236,"column":32}},{"start":{"line":236,"column":30},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0}","ident":"ds_d2ZA","stop":{"line":236,"column":32}},{"start":{"line":237,"column":7},"ann":"{VV : a | VV == root t}","ident":"x","stop":{"line":237,"column":8}},{"start":{"line":237,"column":11},"ann":"{VV : a | VV == root t}","ident":"_","stop":{"line":237,"column":17}},{"start":{"line":237,"column":16},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":237,"column":17}},{"start":{"line":238,"column":7},"ann":"{VV : a | VV == root t'}","ident":"x'","stop":{"line":238,"column":9}},{"start":{"line":238,"column":12},"ann":"{VV : a | VV == root t'}","ident":"_","stop":{"line":238,"column":19}},{"start":{"line":238,"column":17},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t'}","ident":"t'","stop":{"line":238,"column":19}},{"start":{"line":239,"column":7},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t <= VV}) | size v == size t}","ident":"tBounded","stop":{"line":239,"column":15}},{"start":{"line":239,"column":18},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t <= VV}) | size v == size t}","ident":"_","stop":{"line":239,"column":47}},{"start":{"line":239,"column":46},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":239,"column":47}},{"start":{"line":240,"column":7},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t' <= VV}) | size v == size t'}","ident":"tBounded'","stop":{"line":240,"column":16}},{"start":{"line":240,"column":19},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t' <= VV}) | size v == size t'}","ident":"_","stop":{"line":240,"column":49}},{"start":{"line":240,"column":47},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t'}","ident":"t'","stop":{"line":240,"column":49}},{"start":{"line":241,"column":6},"ann":"{VV : a | VV == root t\n          && VV == x}","ident":"x","stop":{"line":241,"column":7}},{"start":{"line":241,"column":10},"ann":"{VV : a | VV == root t'\n          && VV == x'}","ident":"x'","stop":{"line":241,"column":12}},{"start":{"line":243,"column":9},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x <= VV}) | size v == size tBounded'}","ident":"hd","stop":{"line":243,"column":11}},{"start":{"line":243,"column":14},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x <= VV}) | size v == size tBounded'}","ident":"_","stop":{"line":243,"column":57}},{"start":{"line":243,"column":43},"ann":"{VV : a | VV == root t\n          && VV == x}","ident":"x","stop":{"line":243,"column":44}},{"start":{"line":243,"column":45},"ann":"{VV : a | VV == root t'\n          && VV == x'}","ident":"x'","stop":{"line":243,"column":47}},{"start":{"line":243,"column":48},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t' <= VV}) | size v == size t'\n                                                           && v == tBounded'}","ident":"tBounded'","stop":{"line":243,"column":57}},{"start":{"line":244,"column":9},"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | x <= VV})] | sumSizeList v == sumSizeList ts'}","ident":"tl","stop":{"line":244,"column":11}},{"start":{"line":244,"column":14},"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | x <= VV})] | sumSizeList v == sumSizeList ts'}","ident":"_","stop":{"line":244,"column":55}},{"start":{"line":244,"column":47},"ann":"{VV : a | VV == root t\n          && VV == x}","ident":"x","stop":{"line":244,"column":48}},{"start":{"line":244,"column":49},"ann":"{VV : a | VV == root t'\n          && VV == x'}","ident":"x'","stop":{"line":244,"column":51}},{"start":{"line":244,"column":52},"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | root t' <= VV})] | len v >= 0\n                                                             && sumSizeList v >= 0\n                                                             && v == ts'}","ident":"ts'","stop":{"line":244,"column":55}},{"start":{"line":245,"column":6},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":245,"column":7}},{"start":{"line":245,"column":9},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x <= VV}) | size v == size tBounded'\n                                                     && v == hd}","ident":"hd","stop":{"line":245,"column":11}},{"start":{"line":245,"column":12},"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | x <= VV})] | sumSizeList v == sumSizeList ts'\n                                                       && len v >= 0\n                                                       && sumSizeList v >= 0\n                                                       && v == tl}","ident":"tl","stop":{"line":245,"column":14}},{"start":{"line":247,"column":9},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x' <= VV}) | size v == size tBounded}","ident":"hd","stop":{"line":247,"column":11}},{"start":{"line":247,"column":14},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x' <= VV}) | size v == size tBounded}","ident":"_","stop":{"line":247,"column":56}},{"start":{"line":247,"column":43},"ann":"{VV : a | VV == root t'\n          && VV == x'}","ident":"x'","stop":{"line":247,"column":45}},{"start":{"line":247,"column":46},"ann":"{VV : a | VV == root t\n          && VV == x}","ident":"x","stop":{"line":247,"column":47}},{"start":{"line":247,"column":48},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t <= VV}) | size v == size t\n                                                          && v == tBounded}","ident":"tBounded","stop":{"line":247,"column":56}},{"start":{"line":248,"column":6},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t'}","ident":"t'","stop":{"line":248,"column":8}},{"start":{"line":248,"column":10},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x' <= VV}) | size v == size tBounded\n                                                      && v == hd}","ident":"hd","stop":{"line":248,"column":12}},{"start":{"line":248,"column":13},"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | root t' <= VV})] | len v >= 0\n                                                             && sumSizeList v >= 0\n                                                             && v == ts'}","ident":"ts'","stop":{"line":248,"column":16}},{"start":{"line":261,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Heap a) -> x3:(Data.Heap.Binominal.Heap a) -> {VV : (Data.Heap.Binominal.Heap a) | heapSize VV == heapSize x2 + heapSize x3}","ident":"Data.Heap.Binominal.merge","stop":{"line":261,"column":6}},{"start":{"line":261,"column":31},"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {v : (Data.Heap.Binominal.Heap a) | unheap v == x1\n                                                                         && heapSize v == sumSizeList x1}","ident":"Data.Heap.Binominal.Heap","stop":{"line":261,"column":52}},{"start":{"line":261,"column":36},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList ts1 + sumSizeList ts2}","ident":"lq_anf$##7205759403792805283","stop":{"line":261,"column":52}},{"start":{"line":261,"column":44},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts1}","ident":"ts1","stop":{"line":261,"column":47}},{"start":{"line":261,"column":48},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts2}","ident":"ts2","stop":{"line":261,"column":51}},{"start":{"line":265,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:[(Data.Heap.Binominal.Tree a)] -> x3:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList x2 + sumSizeList x3}","ident":"Data.Heap.Binominal.merge'","stop":{"line":265,"column":7}},{"start":{"line":265,"column":8},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"ts1","stop":{"line":265,"column":11}},{"start":{"line":265,"column":17},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts1}","ident":"ts1","stop":{"line":265,"column":20}},{"start":{"line":266,"column":17},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0}","ident":"ds_d2Yv","stop":{"line":266,"column":20}},{"start":{"line":268,"column":5},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == rank t1}","ident":"lq_anf$##7205759403792805267","stop":{"line":268,"column":12}},{"start":{"line":268,"column":10},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1}","ident":"t1","stop":{"line":268,"column":12}},{"start":{"line":268,"column":15},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == rank t2}","ident":"lq_anf$##7205759403792805268","stop":{"line":268,"column":22}},{"start":{"line":268,"column":20},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2}","ident":"t2","stop":{"line":268,"column":22}},{"start":{"line":268,"column":25},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1}","ident":"t1","stop":{"line":268,"column":27}},{"start":{"line":268,"column":30},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"lq_anf$##7205759403792805278","stop":{"line":268,"column":45}},{"start":{"line":268,"column":37},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts1'}","ident":"ts1'","stop":{"line":268,"column":41}},{"start":{"line":268,"column":42},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0}","ident":"ds_d2Yv","stop":{"line":268,"column":45}},{"start":{"line":269,"column":5},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == rank t2}","ident":"lq_anf$##7205759403792805271","stop":{"line":269,"column":12}},{"start":{"line":269,"column":10},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2}","ident":"t2","stop":{"line":269,"column":12}},{"start":{"line":269,"column":15},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == rank t1}","ident":"lq_anf$##7205759403792805272","stop":{"line":269,"column":22}},{"start":{"line":269,"column":20},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1}","ident":"t1","stop":{"line":269,"column":22}},{"start":{"line":269,"column":25},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2}","ident":"t2","stop":{"line":269,"column":27}},{"start":{"line":269,"column":30},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList ts1 + sumSizeList ts2'}","ident":"lq_anf$##7205759403792805277","stop":{"line":269,"column":45}},{"start":{"line":269,"column":37},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts1}","ident":"ts1","stop":{"line":269,"column":40}},{"start":{"line":269,"column":41},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts2'}","ident":"ts2'","stop":{"line":269,"column":45}},{"start":{"line":270,"column":25},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Tree a) -> x3:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == size x2 + sumSizeList x3}","ident":"Data.Heap.Binominal.insert'","stop":{"line":270,"column":64}},{"start":{"line":270,"column":33},"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t1 + size t2}","ident":"lq_anf$##7205759403792805275","stop":{"line":270,"column":45}},{"start":{"line":270,"column":39},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1}","ident":"t1","stop":{"line":270,"column":41}},{"start":{"line":270,"column":42},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2}","ident":"t2","stop":{"line":270,"column":44}},{"start":{"line":270,"column":46},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList ts1' + sumSizeList ts2'}","ident":"lq_anf$##7205759403792805276","stop":{"line":270,"column":64}},{"start":{"line":270,"column":54},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts1'}","ident":"ts1'","stop":{"line":270,"column":58}},{"start":{"line":270,"column":59},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts2'}","ident":"ts2'","stop":{"line":270,"column":63}},{"start":{"line":287,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Heap a) -> {VV : [a]<\\x1 VV -> {VV : a | x1 <= VV}> | len VV == heapSize x2}","ident":"Data.Heap.Binominal.heapSort","stop":{"line":287,"column":9}},{"start":{"line":287,"column":22},"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | len v == 0\n                                            && sumSizeList v == 0}","ident":"_","stop":{"line":287,"column":24}},{"start":{"line":289,"column":8},"ann":"a","ident":"minElt","stop":{"line":289,"column":14}},{"start":{"line":289,"column":16},"ann":"(Data.Heap.Binominal.Heap {VV : a | minElt <= VV\n                                    && VV >= minElt})","ident":"h'","stop":{"line":289,"column":18}},{"start":{"line":289,"column":22},"ann":"(a, (Data.Heap.Binominal.Heap {VV : a | fst x4 <= VV}))","ident":"_","stop":{"line":289,"column":34}},{"start":{"line":289,"column":33},"ann":"{v : (Data.Heap.Binominal.Heap a) | heapSize v >= 0}","ident":"ds_d30p","stop":{"line":289,"column":34}},{"start":{"line":290,"column":3},"ann":"{VV : a | VV == minElt}","ident":"minElt","stop":{"line":290,"column":9}},{"start":{"line":290,"column":12},"ann":"{VV : [a]<\\x1 VV -> {VV : a | x1 <= VV}> | len VV == heapSize h'}","ident":"lq_anf$##7205759403792805337","stop":{"line":290,"column":23}},{"start":{"line":290,"column":21},"ann":"{v : (Data.Heap.Binominal.Heap {VV : a | minElt <= VV\n                                         && VV >= minElt}) | heapSize v >= 0\n                                                             && v == h'}","ident":"h'","stop":{"line":290,"column":23}},{"start":{"line":294,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:[a] -> {VV : [a]<\\x1 VV -> {VV : a | x1 <= VV}> | len VV == len x2}","ident":"Data.Heap.Binominal.sortUsingHeap","stop":{"line":294,"column":14}},{"start":{"line":294,"column":17},"ann":"x1:(Data.Heap.Binominal.Heap a) -> {v : [a]<\\x5 VV -> {VV : a | x5 <= VV}> | len v == heapSize x1}","ident":"lq_anf$##7205759403792805338","stop":{"line":294,"column":25}},{"start":{"line":294,"column":28},"ann":"x1:[a] -> {v : (Data.Heap.Binominal.Heap a) | heapSize v == len x1}","ident":"lq_anf$##7205759403792805339","stop":{"line":294,"column":36}}],"errors":[]}