{"status":"safe","types":{"114":{"30":{"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | Set_emp (listElts v)\n                                            && len v == 0\n                                            && sumSizeList v == 0}","ident":"_","row":114,"col":30},"1":{"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> [{t : (Data.Heap.Binominal.Tree a) | size t <= sumSizeList x1}]","ident":"Data.Heap.Binominal.boundedSizeSubtreeLemma","row":114,"col":1}},"217":{"44":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == ts'}","ident":"ts'","row":217,"col":44},"40":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t'}","ident":"t'","row":217,"col":40},"38":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":217,"col":38},"24":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Tree a) -> x3:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == size x2 + sumSizeList x3}","ident":"Data.Heap.Binominal.insert'","row":217,"col":24},"32":{"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t + size t'}","ident":"lq_anf$##7205759403792807068","row":217,"col":32}},"185":{"25":{"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t1BoundedByX1}","ident":"_","row":185,"col":25},"57":{"ann":"a","ident":"ds_d3qT","row":185,"col":57},"60":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1BoundedByX1}","ident":"t1BoundedByX1","row":185,"col":60},"9":{"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t1BoundedByX1}","ident":"t1BoundedByX2","row":185,"col":9},"54":{"ann":"a","ident":"ds_d3qX","row":185,"col":54}},"106":{"28":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == ts}","ident":"ts","row":106,"col":28},"19":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"ts","row":106,"col":19},"17":{"ann":"(Data.Heap.Binominal.Tree a)","ident":"t","row":106,"col":17},"1":{"ann":"forall a .\nx1:{VV : GHC.Types.Int | VV >= 0} -> {VV : (Data.Heap.Binominal.Tree a) | size VV <= x1} -> [{t : (Data.Heap.Binominal.Tree a) | size t <= x1}] -> [{t : (Data.Heap.Binominal.Tree a) | size t <= x1}]","ident":"Data.Heap.Binominal.consTreeLemma","row":106,"col":1},"24":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":106,"col":24}},"304":{"7":{"ann":"{VV : a | VV == root t}","ident":"x","row":304,"col":7},"16":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":304,"col":16},"11":{"ann":"{VV : a | VV == root t}","ident":"_","row":304,"col":11}},"179":{"5":{"ann":"a","ident":"ds_d3qT","row":179,"col":5},"11":{"ann":"a","ident":"ds_d3qX","row":179,"col":11}},"227":{"15":{"ann":"forall a . {v : (Data.Heap.Binominal.Heap a) | heapSize v == 0}","ident":"_","row":227,"col":15},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:[a] -> {v : (Data.Heap.Binominal.Heap a) | heapSize v == len x2}","ident":"Data.Heap.Binominal.fromList","row":227,"col":1}},"280":{"29":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == acc}","ident":"acc","row":280,"col":29},"1":{"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> x2:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList x1 + sumSizeList x2}","ident":"Data.Heap.Binominal.reverseHeapListAux","row":280,"col":1},"23":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"acc","row":280,"col":23}},"156":{"28":{"ann":"{v : GHC.Types.Int | 1 <= v}","ident":"lq_anf$##7205759403792807122","row":156,"col":28},"23":{"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | x <= VV})] | sumSizeList v >= 0\n                                                       && len v >= 0\n                                                       && v == ts}","ident":"ts","row":156,"col":23},"11":{"ann":"{v : GHC.Types.Int | v == sumSizeList ts\n                     && v >= 0\n                     && len ts <= v}","ident":"lq_anf$##7205759403792807121","row":156,"col":11},"33":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t\n                                    && size v == sz\n                                    && subtrees v == ts\n                                    && root v == x\n                                    && rank v == r\n                                    && v == Node r x ts sz}","ident":"lq_anf$##7205759403792807118","row":156,"col":33},"3":{"ann":"(Data.Set.Internal.Set a) -> (Data.Set.Internal.Set a)","ident":"lq_anf$##7205759403792807124","row":156,"col":3},"10":{"ann":"GHC.Types.Bool","ident":"lq_anf$##7205759403792807123","row":156,"col":10}},"174":{"1":{"ann":"forall a b .\nx1:a -> [(Data.Heap.Binominal.Tree {VV : a | x1 <= VV})] -> b -> b","ident":"Data.Heap.Binominal.assertBoundedTreeList","row":174,"col":1},"27":{"ann":"a","ident":"x","row":174,"col":27}},"332":{"17":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == ts1}","ident":"ts1","row":332,"col":17},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:[(Data.Heap.Binominal.Tree a)] -> x3:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList x2 + sumSizeList x3}","ident":"Data.Heap.Binominal.merge'","row":332,"col":1},"8":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"ts1","row":332,"col":8}},"310":{"48":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t' <= VV}) | size v == size t'\n                                                           && v == tBounded'}","ident":"tBounded'","row":310,"col":48},"43":{"ann":"{VV : a | VV == root t\n          && VV == x}","ident":"x","row":310,"col":43},"14":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x <= VV}) | size v == size tBounded'}","ident":"_","row":310,"col":14},"45":{"ann":"{VV : a | VV == root t'\n          && VV == x'}","ident":"x'","row":310,"col":45},"9":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x <= VV}) | size v == size tBounded'}","ident":"hd","row":310,"col":9}},"270":{"37":{"ann":"forall a .\nx1:{v : (Data.Heap.Binominal.Heap a) | 0 < len (unheap v)} -> {v : [(Data.Heap.Binominal.Tree a)] | 0 < len v\n                                                                                                    && sumSizeList v == heapSize x1}","ident":"_","row":270,"col":37},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\n{VV : (Data.Heap.Binominal.Heap a) | 0 < len (unheap VV)} -> a","ident":"Data.Heap.Binominal.minimum","row":270,"col":1},"18":{"ann":"forall a b . x1:(a, b) -> {VV : a | VV == fst x1}","ident":"_","row":270,"col":18},"11":{"ann":"forall a .\nx1:(Data.Heap.Binominal.Tree a) -> {VV : a | VV == root x1}","ident":"_","row":270,"col":11},"24":{"ann":"x1:{v : [(Data.Heap.Binominal.Tree a)] | 0 < len v} -> {v : ((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | root (fst x15) <= VV})]) | size (fst v) + sumSizeList (snd v) == sumSizeList x1}","ident":"lq_anf$##7205759403792807154","row":270,"col":24}},"184":{"25":{"ann":"(Data.Heap.Binominal.Tree a)","ident":"_","row":184,"col":25},"53":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1}","ident":"lq_anf$##7205759403792807048","row":184,"col":53},"9":{"ann":"(Data.Heap.Binominal.Tree a)","ident":"t1BoundedByX1","row":184,"col":9}},"85":{"30":{"ann":"a","ident":"x","row":85,"col":30},"1":{"ann":"forall a .\nx1:a -> x2:{VV : a | x1 <= VV} -> x3:(Data.Heap.Binominal.Tree {VV : a | x2 <= VV}) -> {VV : (Data.Heap.Binominal.Tree {VV : a | x1 <= VV}) | size VV == size x3}","ident":"Data.Heap.Binominal.boundedTreeTransitivityLemma","row":85,"col":1},"34":{"ann":"(Data.Heap.Binominal.Tree {VV : a | y <= VV})","ident":"tree","row":85,"col":34},"32":{"ann":"{VV : a | x <= VV}","ident":"y","row":85,"col":32}},"353":{"22":{"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | Set_emp (listElts v)\n                                            && len v == 0\n                                            && sumSizeList v == 0}","ident":"_","row":353,"col":22},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Heap a) -> {VV : [a]<\\x1 VV -> {VV : a | x1 <= VV}> | len VV == heapSize x2}","ident":"Data.Heap.Binominal.heapSort","row":353,"col":1}},"335":{"15":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == rank t2}","ident":"lq_anf$##7205759403792807082","row":335,"col":15},"37":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == ts1'}","ident":"ts1'","row":335,"col":37},"25":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1}","ident":"t1","row":335,"col":25},"30":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"lq_anf$##7205759403792807092","row":335,"col":30},"20":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2}","ident":"t2","row":335,"col":20},"5":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == rank t1}","ident":"lq_anf$##7205759403792807081","row":335,"col":5},"42":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0}","ident":"ds_d3ro","row":335,"col":42},"10":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1}","ident":"t1","row":335,"col":10}},"50":{"22":{"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {VV : GHC.Types.Int | VV == sumSizeList x1\n                                                           && VV >= 0\n                                                           && len x1 <= VV}","ident":"Data.Heap.Binominal.sumSizeList","row":50,"col":22},"1":{"ann":"forall a .\nx1:(Data.Heap.Binominal.Heap a) -> {VV : GHC.Types.Int | VV == heapSize x1\n                                                         && VV >= 0\n                                                         && len (unheap x1) <= VV}","ident":"Data.Heap.Binominal.heapSize","row":50,"col":1},"34":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == ts}","ident":"ts","row":50,"col":34}},"216":{"28":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0}","ident":"ds_d3r2","row":216,"col":28},"14":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == rank t'}","ident":"lq_anf$##7205759403792807065","row":216,"col":14},"19":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t'}","ident":"t'","row":216,"col":19},"5":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == rank t}","ident":"lq_anf$##7205759403792807064","row":216,"col":5},"24":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":216,"col":24},"10":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":216,"col":10}},"303":{"19":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:{v : [(Data.Heap.Binominal.Tree a)] | 0 < len v} -> {v : ((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | root (fst v) <= VV})]) | size (fst v) + sumSizeList (snd v) == sumSizeList x2}","ident":"Data.Heap.Binominal.deleteMin'","row":303,"col":19},"12":{"ann":"{VV : [(Data.Heap.Binominal.Tree {VV : a | root t' <= VV})] | len VV >= 0}","ident":"ts'","row":303,"col":12},"30":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0}","ident":"ds_d3st","row":303,"col":30},"8":{"ann":"(Data.Heap.Binominal.Tree a)","ident":"t'","row":303,"col":8}},"118":{"7":{"ann":"{v : GHC.Types.Int | v == sumSizeList ts\n                     && v >= 0\n                     && len ts <= v}","ident":"sizets","row":118,"col":7},"28":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == ts}","ident":"ts","row":118,"col":28},"16":{"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {VV : GHC.Types.Int | VV == sumSizeList x1\n                                                           && VV >= 0\n                                                           && len x1 <= VV}","ident":"Data.Heap.Binominal.sumSizeList","row":118,"col":16}},"44":{"1":{"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {VV : GHC.Types.Int | VV == sumSizeList x1\n                                                           && VV >= 0\n                                                           && len x1 <= VV}","ident":"Data.Heap.Binominal.sumSizeList","row":44,"col":1},"18":{"ann":"{v : GHC.Prim.Int# | v == 0}","ident":"lq_anf$##7205759403792807040","row":44,"col":18}},"190":{"14":{"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | Set_emp (listElts v)\n                                            && len v == 0\n                                            && sumSizeList v == 0}","ident":"_","row":190,"col":14},"1":{"ann":"forall a . {v : (Data.Heap.Binominal.Heap a) | heapSize v == 0}","ident":"Data.Heap.Binominal.empty","row":190,"col":1}},"308":{"6":{"ann":"{VV : a | VV == root t\n          && VV == x}","ident":"x","row":308,"col":6},"10":{"ann":"{VV : a | VV == root t'\n          && VV == x'}","ident":"x'","row":308,"col":10}},"157":{"15":{"ann":"x1:(Data.Set.Internal.Set a) -> x2:(Data.Set.Internal.Set a) -> {v : (Data.Set.Internal.Set a) | v == Set_cup x1 x2}","ident":"lq_anf$##7205759403792807125","row":157,"col":15},"36":{"ann":"{VV : a | VV == x}","ident":"x","row":157,"col":36},"44":{"ann":"(Data.Heap.Binominal.Tree a) -> (Data.Set.Internal.Set a)","ident":"lq_anf$##7205759403792807127","row":157,"col":44},"53":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == boundByOverallSize}","ident":"boundByOverallSize","row":157,"col":53},"23":{"ann":"{v : (Data.Set.Internal.Set a) | v == Set_sng x}","ident":"lq_anf$##7205759403792807126","row":157,"col":23},"39":{"ann":"{v : [(Data.Set.Internal.Set a)] | len v == len boundByOverallSize}","ident":"lq_anf$##7205759403792807128","row":157,"col":39},"3":{"ann":"(Data.Set.Internal.Set a)","ident":"lq_anf$##7205759403792807129","row":157,"col":3}},"355":{"22":{"ann":"(a, (Data.Heap.Binominal.Heap {VV : a | fst x4 <= VV}))","ident":"_","row":355,"col":22},"16":{"ann":"(Data.Heap.Binominal.Heap {VV : a | minElt <= VV\n                                    && VV >= minElt})","ident":"h'","row":355,"col":16},"8":{"ann":"a","ident":"minElt","row":355,"col":8},"33":{"ann":"{v : (Data.Heap.Binominal.Heap a) | heapSize v >= 0}","ident":"ds_d3ti","row":355,"col":33}},"333":{"17":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0}","ident":"ds_d3ro","row":333,"col":17}},"311":{"14":{"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | x <= VV})] | sumSizeList v == sumSizeList ts'}","ident":"_","row":311,"col":14},"49":{"ann":"{VV : a | VV == root t'\n          && VV == x'}","ident":"x'","row":311,"col":49},"52":{"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | root t' <= VV})] | len v >= 0\n                                                             && sumSizeList v >= 0\n                                                             && v == ts'}","ident":"ts'","row":311,"col":52},"47":{"ann":"{VV : a | VV == root t\n          && VV == x}","ident":"x","row":311,"col":47},"9":{"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | x <= VV})] | sumSizeList v == sumSizeList ts'}","ident":"tl","row":311,"col":9}},"210":{"36":{"ann":"{v : (Data.Heap.Binominal.Tree a) | root v == x}","ident":"lq_anf$##7205759403792807075","row":210,"col":36},"49":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792807074","row":210,"col":49},"22":{"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {v : (Data.Heap.Binominal.Heap a) | unheap v == x1\n                                                                         && heapSize v == sumSizeList x1}","ident":"Data.Heap.Binominal.Heap","row":210,"col":22},"44":{"ann":"{VV : a | VV == x}","ident":"x","row":210,"col":44},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\na -> x3:(Data.Heap.Binominal.Heap a) -> {v : (Data.Heap.Binominal.Heap a) | 1 + heapSize x3 == heapSize v}","ident":"Data.Heap.Binominal.insert","row":210,"col":1},"52":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == ts}","ident":"ts","row":210,"col":52},"46":{"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | Set_emp (listElts v)\n                                            && len v == 0\n                                            && sumSizeList v == 0}","ident":"_","row":210,"col":46},"27":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"lq_anf$##7205759403792807076","row":210,"col":27},"8":{"ann":"a","ident":"x","row":210,"col":8},"42":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792807071","row":210,"col":42}},"182":{"14":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792807058","row":182,"col":14},"17":{"ann":"a","ident":"ds_d3qT","row":182,"col":17},"35":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0}","ident":"ds_d3qU","row":182,"col":35},"40":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792807061","row":182,"col":40},"20":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | head v == t2BoundedByX1}","ident":"lq_anf$##7205759403792807060","row":182,"col":20},"41":{"ann":"{v : GHC.Types.Int | 1 <= v}","ident":"ds_d3qV","row":182,"col":41},"11":{"ann":"{v : GHC.Types.Int | v >= 0}","ident":"ds_d3qS","row":182,"col":11},"47":{"ann":"{v : GHC.Types.Int | 1 <= v}","ident":"ds_d3qZ","row":182,"col":47},"21":{"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t2BoundedByX2\n                                    && v == t2BoundedByX1}","ident":"t2BoundedByX1","row":182,"col":21},"10":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792807059","row":182,"col":10}},"276":{"44":{"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | Set_emp (listElts v)\n                                            && len v == 0\n                                            && sumSizeList v == 0}","ident":"_","row":276,"col":44},"17":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"xs","row":276,"col":17},"1":{"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList x1}","ident":"Data.Heap.Binominal.reverseHeapList","row":276,"col":1},"41":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == xs}","ident":"xs","row":276,"col":41}},"281":{"56":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == x}","ident":"x","row":281,"col":56},"52":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == xs}","ident":"xs","row":281,"col":52},"58":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == acc}","ident":"acc","row":281,"col":58},"55":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | tail v == acc\n                                      && head v == x\n                                      && listElts v == Set_cup (Set_sng x) (listElts acc)\n                                      && len v == 1 + len acc\n                                      && sumSizeList v == size x + sumSizeList acc}","ident":"lq_anf$##7205759403792807147","row":281,"col":55},"33":{"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> x2:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList x1 + sumSizeList x2}","ident":"Data.Heap.Binominal.reverseHeapListAux","row":281,"col":33}},"152":{"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\n(Data.Heap.Binominal.Tree a) -> (Data.Set.Internal.Set a)","ident":"Data.Heap.Binominal.eltsTree","row":152,"col":1},"10":{"ann":"(Data.Heap.Binominal.Tree a)","ident":"t","row":152,"col":10}},"336":{"15":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == rank t1}","ident":"lq_anf$##7205759403792807086","row":336,"col":15},"37":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == ts1}","ident":"ts1","row":336,"col":37},"25":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2}","ident":"t2","row":336,"col":25},"30":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList ts1 + sumSizeList ts2'}","ident":"lq_anf$##7205759403792807091","row":336,"col":30},"20":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1}","ident":"t1","row":336,"col":20},"5":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == rank t2}","ident":"lq_anf$##7205759403792807085","row":336,"col":5},"41":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == ts2'}","ident":"ts2'","row":336,"col":41},"10":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2}","ident":"t2","row":336,"col":10}},"170":{"1":{"ann":"forall a b .\nx1:a -> (Data.Heap.Binominal.Tree {VV : a | x1 <= VV}) -> b -> b","ident":"Data.Heap.Binominal.assertBoundedTree","row":170,"col":1},"23":{"ann":"a","ident":"x","row":170,"col":23}},"116":{"7":{"ann":"[{v : (Data.Heap.Binominal.Tree a) | size v <= sumSizeList ts}]","ident":"ih","row":116,"col":7},"36":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == ts}","ident":"ts","row":116,"col":36},"12":{"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> [{t : (Data.Heap.Binominal.Tree a) | size t <= sumSizeList x1}]","ident":"Data.Heap.Binominal.boundedSizeSubtreeLemma","row":116,"col":12}},"314":{"48":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t <= VV}) | size v == size t\n                                                          && v == tBounded}","ident":"tBounded","row":314,"col":48},"43":{"ann":"{VV : a | VV == root t'\n          && VV == x'}","ident":"x'","row":314,"col":43},"14":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x' <= VV}) | size v == size tBounded}","ident":"_","row":314,"col":14},"46":{"ann":"{VV : a | VV == root t\n          && VV == x}","ident":"x","row":314,"col":46},"9":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x' <= VV}) | size v == size tBounded}","ident":"hd","row":314,"col":9}},"45":{"43":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && v == xs}","ident":"xs","row":45,"col":43},"31":{"ann":"{v : GHC.Types.Int | v == sumSizeList xs\n                     && v >= 0\n                     && len xs <= v}","ident":"lq_anf$##7205759403792807042","row":45,"col":31},"22":{"ann":"{v : GHC.Types.Int | 1 <= v\n                     && v == 1 + sumSizeList (subtrees x)\n                     && v == size x}","ident":"lq_anf$##7205759403792807041","row":45,"col":22},"27":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == x}","ident":"x","row":45,"col":27}},"89":{"36":{"ann":"{VV : a | x <= VV}","ident":"y","row":89,"col":36},"1":{"ann":"forall a .\nx1:a -> x2:{VV : a | x1 <= VV} -> x3:[(Data.Heap.Binominal.Tree {VV : a | x2 <= VV})] -> {v : [(Data.Heap.Binominal.Tree {VV : a | x1 <= VV})] | sumSizeList v == sumSizeList x3}","ident":"Data.Heap.Binominal.boundedTreeListTransitivityLemma","row":89,"col":1},"34":{"ann":"a","ident":"x","row":89,"col":34},"38":{"ann":"[(Data.Heap.Binominal.Tree {VV : a | y <= VV})]","ident":"ts","row":89,"col":38}},"166":{"1":{"ann":"forall a . {v : GHC.Types.Bool | v} -> a -> a","ident":"Data.Heap.Binominal.assert","row":166,"col":1},"10":{"ann":"a","ident":"x","row":166,"col":10}},"1":{"1":{"ann":"GHC.Types.Module","ident":"Data.Heap.Binominal.$trModule","row":1,"col":1}},"119":{"48":{"ann":"{v : GHC.Types.Int | v == sumSizeList ts\n                     && v >= 0\n                     && len ts <= v\n                     && v == sizets}","ident":"sizets","row":119,"col":48},"7":{"ann":"[{v : (Data.Heap.Binominal.Tree a) | size v <= sizetts}]","ident":"refinedSubtrees","row":119,"col":7},"25":{"ann":"[{v : (Data.Heap.Binominal.Tree a) | size v <= sizetts}]","ident":"_","row":119,"col":25},"58":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == size t + sumSizeList ts\n                     && sumSizeList ts < v\n                     && v == sizetts}","ident":"sizetts","row":119,"col":58},"55":{"ann":"{v : [{v : (Data.Heap.Binominal.Tree a) | size v <= sumSizeList ts}] | sumSizeList v >= 0\n                                                                       && len v >= 0\n                                                                       && v == ih}","ident":"ih","row":119,"col":55}},"297":{"25":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList ts1}","ident":"lq_anf$##7205759403792807168","row":297,"col":25},"12":{"ann":"(Data.Heap.Binominal.Heap a)","ident":"lq_anf$##7205759403792807170","row":297,"col":12},"17":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"lq_anf$##7205759403792807169","row":297,"col":17},"4":{"ann":"{VV : a | VV == minElt}","ident":"minElt","row":297,"col":4},"47":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == ts2}","ident":"ts2","row":297,"col":47},"42":{"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | minElt <= VV})] | sumSizeList v >= 0\n                                                            && len v >= 0\n                                                            && v == ts1}","ident":"ts1","row":297,"col":42}},"95":{"15":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | tail v == xs\n                                      && head v == x\n                                      && listElts v == Set_cup (Set_sng x) (listElts xs)\n                                      && len v == 1 + len xs\n                                      && sumSizeList v == size x + sumSizeList xs}","ident":"lq_anf$##7205759403792807115","row":95,"col":15},"16":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == x}","ident":"x","row":95,"col":16},"20":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == xs}","ident":"xs","row":95,"col":20},"3":{"ann":"{v : GHC.Types.Int | v >= 0}","ident":"lq_anf$##7205759403792807116","row":95,"col":3}},"194":{"19":{"ann":"{v : (Data.Heap.Binominal.Heap a) | heapSize v >= 0\n                                    && v == h}","ident":"h","row":194,"col":19},"1":{"ann":"forall a .\nx1:(Data.Heap.Binominal.Heap a) -> {v : GHC.Types.Bool | v <=> heapSize x1 == 0}","ident":"Data.Heap.Binominal.null","row":194,"col":1},"24":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792807046","row":194,"col":24},"6":{"ann":"(Data.Heap.Binominal.Heap a)","ident":"h","row":194,"col":6},"10":{"ann":"{v : GHC.Types.Int | v == heapSize h\n                     && v >= 0\n                     && len (unheap h) <= v}","ident":"lq_anf$##7205759403792807044","row":194,"col":10}},"307":{"7":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t' <= VV}) | size v == size t'}","ident":"tBounded'","row":307,"col":7},"19":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t' <= VV}) | size v == size t'}","ident":"_","row":307,"col":19},"47":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t'}","ident":"t'","row":307,"col":47}},"214":{"17":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":214,"col":17},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Tree a) -> x3:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == size x2 + sumSizeList x3}","ident":"Data.Heap.Binominal.insert'","row":214,"col":1},"16":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | Set_emp (listElts v)\n                                      && len v == 0\n                                      && sumSizeList v == 0}","ident":"lq_anf$##7205759403792807063","row":214,"col":16},"9":{"ann":"(Data.Heap.Binominal.Tree a)","ident":"t","row":214,"col":9}},"186":{"14":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792807053","row":186,"col":14},"17":{"ann":"a","ident":"ds_d3qX","row":186,"col":17},"35":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0}","ident":"ds_d3qY","row":186,"col":35},"40":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792807056","row":186,"col":40},"20":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | head v == t1BoundedByX2}","ident":"lq_anf$##7205759403792807055","row":186,"col":20},"41":{"ann":"{v : GHC.Types.Int | 1 <= v}","ident":"ds_d3qV","row":186,"col":41},"11":{"ann":"{v : GHC.Types.Int | v >= 0}","ident":"ds_d3qW","row":186,"col":11},"47":{"ann":"{v : GHC.Types.Int | 1 <= v}","ident":"ds_d3qZ","row":186,"col":47},"21":{"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t1BoundedByX1\n                                    && v == t1BoundedByX2}","ident":"t1BoundedByX2","row":186,"col":21},"10":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792807054","row":186,"col":10}},"285":{"1":{"ann":"forall a .\nx1:{VV : (Data.Heap.Binominal.Heap a) | 0 < len (unheap VV)} -> {v : [(Data.Heap.Binominal.Tree a)] | 0 < len v\n                                                                                                      && sumSizeList v == heapSize x1}","ident":"Data.Heap.Binominal.unheapNonempty","row":285,"col":1},"34":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == ts}","ident":"lq_anf$##7205759403792807150","row":285,"col":34}},"153":{"7":{"ann":"[{v : (Data.Heap.Binominal.Tree a) | size v <= sumSizeList ts}]","ident":"boundBySumSizeList","row":153,"col":7},"28":{"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> [{t : (Data.Heap.Binominal.Tree a) | size t <= sumSizeList x1}]","ident":"Data.Heap.Binominal.boundedSizeSubtreeLemma","row":153,"col":28},"53":{"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | x <= VV})] | sumSizeList v >= 0\n                                                       && len v >= 0\n                                                       && v == ts}","ident":"ts","row":153,"col":53}},"337":{"25":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Tree a) -> x3:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == size x2 + sumSizeList x3}","ident":"Data.Heap.Binominal.insert'","row":337,"col":25},"59":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == ts2'}","ident":"ts2'","row":337,"col":59},"39":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1}","ident":"t1","row":337,"col":39},"46":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList ts1' + sumSizeList ts2'}","ident":"lq_anf$##7205759403792807090","row":337,"col":46},"33":{"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t1 + size t2}","ident":"lq_anf$##7205759403792807089","row":337,"col":33},"42":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2}","ident":"t2","row":337,"col":42},"54":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == ts1'}","ident":"ts1'","row":337,"col":54}},"117":{"7":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == size t + sumSizeList ts\n                     && sumSizeList ts < v}","ident":"sizetts","row":117,"col":7},"36":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == ts}","ident":"ts","row":117,"col":36},"17":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == size t + sumSizeList ts\n                     && sumSizeList ts < v}","ident":"_","row":117,"col":17},"34":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":117,"col":34}},"315":{"13":{"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | root t' <= VV})] | len v >= 0\n                                                             && sumSizeList v >= 0\n                                                             && v == ts'}","ident":"ts'","row":315,"col":13},"6":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t'}","ident":"t'","row":315,"col":6},"10":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x' <= VV}) | size v == size tBounded\n                                                      && v == hd}","ident":"hd","row":315,"col":10}},"301":{"22":{"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | Set_emp (listElts v)\n                                            && len v == 0\n                                            && sumSizeList v == 0}","ident":"_","row":301,"col":22},"19":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":301,"col":19},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:{v : [(Data.Heap.Binominal.Tree a)] | 0 < len v} -> {v : ((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | root (fst v) <= VV})]) | size (fst v) + sumSizeList (snd v) == sumSizeList x2}","ident":"Data.Heap.Binominal.deleteMin'","row":301,"col":1},"18":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | Set_emp (listElts v)\n                                      && len v == 0\n                                      && sumSizeList v == 0}","ident":"lq_anf$##7205759403792807105","row":301,"col":18}},"147":{"36":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"ts","row":147,"col":36},"1":{"ann":"forall a .\nx1:{VV : GHC.Types.Int | VV >= 0} -> [{VV : (Data.Heap.Binominal.Tree a) | size VV <= x1}] -> x3:{VV : GHC.Types.Int | VV >= 0\n                                                                                                                       && x1 < VV} -> [{VV : (Data.Heap.Binominal.Tree a) | size VV < x3}]","ident":"Data.Heap.Binominal.strictTransitivitySizeBoundLemma","row":147,"col":1}},"222":{"1":{"ann":"forall a .\nx1:[a] -> {VV : GHC.Types.Int | VV == len x1\n                                && VV >= 0}","ident":"Data.Heap.Binominal.len","row":222,"col":1},"10":{"ann":"{v : GHC.Prim.Int# | v == 0}","ident":"lq_anf$##7205759403792807142","row":222,"col":10}},"291":{"16":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList ts1}","ident":"lq_anf$##7205759403792807162","row":291,"col":16},"8":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"lq_anf$##7205759403792807163","row":291,"col":8},"33":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == ts1}","ident":"ts1","row":291,"col":33},"38":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == ts2}","ident":"ts2","row":291,"col":38}},"93":{"1":{"ann":"forall a .\nx1:(Data.Heap.Binominal.Tree a) -> x2:[(Data.Heap.Binominal.Tree a)] -> {VV : GHC.Types.Int | VV >= 0\n                                                                                              && VV == size x1 + sumSizeList x2\n                                                                                              && sumSizeList x2 < VV}","ident":"Data.Heap.Binominal.sublistSizeLemma","row":93,"col":1},"18":{"ann":"(Data.Heap.Binominal.Tree a)","ident":"x","row":93,"col":18},"20":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"xs","row":93,"col":20}},"94":{"15":{"ann":"{v : GHC.Types.Int | 1 <= v\n                     && v == 1 + sumSizeList (subtrees x)\n                     && v == size x}","ident":"lq_anf$##7205759403792807112","row":94,"col":15},"20":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == x}","ident":"x","row":94,"col":20},"11":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792807111","row":94,"col":11},"3":{"ann":"GHC.Types.Int -> GHC.Types.Int","ident":"lq_anf$##7205759403792807114","row":94,"col":3},"10":{"ann":"GHC.Types.Bool","ident":"lq_anf$##7205759403792807113","row":94,"col":10}},"306":{"7":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t <= VV}) | size v == size t}","ident":"tBounded","row":306,"col":7},"18":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t <= VV}) | size v == size t}","ident":"_","row":306,"col":18},"46":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":306,"col":46}},"360":{"28":{"ann":"x1:[a] -> {v : (Data.Heap.Binominal.Heap a) | heapSize v == len x1}","ident":"lq_anf$##7205759403792807175","row":360,"col":28},"17":{"ann":"x1:(Data.Heap.Binominal.Heap a) -> {v : [a]<\\x5 VV -> {VV : a | x5 <= VV}> | len v == heapSize x1}","ident":"lq_anf$##7205759403792807174","row":360,"col":17},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:[a] -> {VV : [a]<\\x1 VV -> {VV : a | x1 <= VV}> | len VV == len x2}","ident":"Data.Heap.Binominal.sortUsingHeap","row":360,"col":1}},"296":{"36":{"ann":"((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | root (fst x9) <= VV})])","ident":"lq_anf$##7205759403792807165","row":296,"col":36},"63":{"ann":"{v : (Data.Heap.Binominal.Heap a) | 0 < len (unheap v)\n                                    && heapSize v >= 0\n                                    && v == h}","ident":"h","row":296,"col":63},"47":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | 0 < len v\n                                      && sumSizeList v == heapSize h}","ident":"lq_anf$##7205759403792807164","row":296,"col":47}},"198":{"28":{"ann":"{VV : a | VV == x}","ident":"x","row":198,"col":28},"30":{"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | Set_emp (listElts v)\n                                            && len v == 0\n                                            && sumSizeList v == 0}","ident":"_","row":198,"col":30},"1":{"ann":"forall a .\na -> {v : (Data.Heap.Binominal.Heap a) | heapSize v == 1}","ident":"Data.Heap.Binominal.singleton","row":198,"col":1},"26":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792807134","row":198,"col":26},"20":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"lq_anf$##7205759403792807140","row":198,"col":20},"11":{"ann":"a","ident":"x","row":198,"col":11},"33":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792807137","row":198,"col":33},"21":{"ann":"{v : (Data.Heap.Binominal.Tree a) | root v == x}","ident":"lq_anf$##7205759403792807138","row":198,"col":21}},"80":{"43":{"ann":"{v : GHC.Types.Int | 1 <= v}","ident":"ds_d3qv","row":80,"col":43},"14":{"ann":"{v : GHC.Types.Int | v >= 0}","ident":"ds_d3qs","row":80,"col":14},"22":{"ann":"a","ident":"ds_d3qt","row":80,"col":22},"34":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0}","ident":"ds_d3qu","row":80,"col":34},"3":{"ann":"forall a .\nx1:{v : GHC.Types.Int | v >= 0} -> x2:a -> x3:[(Data.Heap.Binominal.Tree {VV : a | x2 <= VV})] -> x4:{v : GHC.Types.Int | 1 <= v\n                                                                                                                          && v == 1 + sumSizeList x3} -> {v : (Data.Heap.Binominal.Tree a) | size v == x4\n                                                                                                                                                                                             && subtrees v == x3\n                                                                                                                                                                                             && root v == x2\n                                                                                                                                                                                             && rank v == x1}","ident":"Data.Heap.Binominal.Node","row":80,"col":3}},"154":{"61":{"ann":"{v : GHC.Types.Int | v == sumSizeList ts\n                     && v >= 0\n                     && len ts <= v}","ident":"lq_anf$##7205759403792807119","row":154,"col":61},"7":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"boundByOverallSize","row":154,"col":7},"78":{"ann":"{v : [{v : (Data.Heap.Binominal.Tree a) | size v <= sumSizeList ts}] | sumSizeList v >= 0\n                                                                       && len v >= 0\n                                                                       && v == boundBySumSizeList}","ident":"boundBySumSizeList","row":154,"col":78},"28":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"_","row":154,"col":28},"74":{"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | x <= VV})] | sumSizeList v >= 0\n                                                       && len v >= 0\n                                                       && v == ts}","ident":"ts","row":154,"col":74},"103":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t\n                                    && size v == sz\n                                    && subtrees v == ts\n                                    && root v == x\n                                    && rank v == r\n                                    && v == Node r x ts sz}","ident":"lq_anf$##7205759403792807118","row":154,"col":103},"97":{"ann":"{v : GHC.Types.Int | 1 <= v}","ident":"lq_anf$##7205759403792807120","row":154,"col":97}},"356":{"12":{"ann":"{VV : [a]<\\x1 VV -> {VV : a | x1 <= VV}> | len VV == heapSize h'}","ident":"lq_anf$##7205759403792807173","row":356,"col":12},"3":{"ann":"{VV : a | VV == minElt}","ident":"minElt","row":356,"col":3},"21":{"ann":"{v : (Data.Heap.Binominal.Heap {VV : a | minElt <= VV\n                                         && VV >= minElt}) | heapSize v >= 0\n                                                             && v == h'}","ident":"h'","row":356,"col":21}},"110":{"22":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == h}","ident":"h","row":110,"col":22},"1":{"ann":"forall a .\nx1:{VV : GHC.Types.Int | VV >= 0} -> {VV : [{t : (Data.Heap.Binominal.Tree a) | size t < x1}] | VV /= []} -> {t : (Data.Heap.Binominal.Tree a) | size t < x1}","ident":"Data.Heap.Binominal.testTrick","row":110,"col":1}},"312":{"12":{"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | x <= VV})] | sumSizeList v == sumSizeList ts'\n                                                       && sumSizeList v >= 0\n                                                       && len v >= 0\n                                                       && v == tl}","ident":"tl","row":312,"col":12},"6":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":312,"col":6},"9":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x <= VV}) | size v == size tBounded'\n                                                     && v == hd}","ident":"hd","row":312,"col":9}},"228":{"28":{"ann":"{v : (Data.Heap.Binominal.Heap a) | heapSize v == len xs}","ident":"lq_anf$##7205759403792807132","row":228,"col":28},"19":{"ann":"{v : (GHC.Classes.Ord a) | v == $dOrd_a3aC}","ident":"$dOrd_a3aC","row":228,"col":19},"26":{"ann":"{VV : a | VV == x}","ident":"x","row":228,"col":26},"38":{"ann":"{v : [a] | sumSizeList v >= 0\n           && len v >= 0\n           && v == xs}","ident":"xs","row":228,"col":38}},"181":{"25":{"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t2BoundedByX2}","ident":"_","row":181,"col":25},"57":{"ann":"a","ident":"ds_d3qX","row":181,"col":57},"60":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2BoundedByX2}","ident":"t2BoundedByX2","row":181,"col":60},"9":{"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t2BoundedByX2}","ident":"t2BoundedByX1","row":181,"col":9},"54":{"ann":"a","ident":"ds_d3qT","row":181,"col":54}},"223":{"14":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792807144","row":223,"col":14},"22":{"ann":"{v : [a] | sumSizeList v >= 0\n           && len v >= 0\n           && v == xs}","ident":"xs","row":223,"col":22},"18":{"ann":"{v : GHC.Types.Int | v == len xs\n                     && v >= 0}","ident":"lq_anf$##7205759403792807145","row":223,"col":18}},"290":{"31":{"ann":"((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | root (fst x9) <= VV})])","ident":"lq_anf$##7205759403792807159","row":290,"col":31},"58":{"ann":"{v : (Data.Heap.Binominal.Heap a) | 0 < len (unheap v)\n                                    && heapSize v >= 0\n                                    && v == h}","ident":"h","row":290,"col":58},"42":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | 0 < len v\n                                      && sumSizeList v == heapSize h}","ident":"lq_anf$##7205759403792807158","row":290,"col":42}},"289":{"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:{VV : (Data.Heap.Binominal.Heap a) | 0 < len (unheap VV)} -> {v : (Data.Heap.Binominal.Heap a) | 1 + heapSize v == heapSize x2}","ident":"Data.Heap.Binominal.deleteMin","row":289,"col":1},"11":{"ann":"{VV : (Data.Heap.Binominal.Heap a) | 0 < len (unheap VV)}","ident":"h","row":289,"col":11}},"102":{"1":{"ann":"forall a .\nx1:{VV : GHC.Types.Int | VV >= 0} -> [{t : (Data.Heap.Binominal.Tree a) | size t <= x1}] -> x3:{VV : GHC.Types.Int | VV >= 0\n                                                                                                                     && x1 <= VV} -> [{t : (Data.Heap.Binominal.Tree a) | size t <= x3}]","ident":"Data.Heap.Binominal.subtreeTransitiveLemma","row":102,"col":1},"26":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"ts","row":102,"col":26}},"120":{"25":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":120,"col":25},"17":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == size t + sumSizeList ts\n                     && sumSizeList ts < v\n                     && v == sizetts}","ident":"sizetts","row":120,"col":17},"27":{"ann":"{v : [{v : (Data.Heap.Binominal.Tree a) | size v <= sizetts}] | sumSizeList v >= 0\n                                                                && len v >= 0\n                                                                && v == refinedSubtrees}","ident":"refinedSubtrees","row":120,"col":27}},"79":{"1":{"ann":"forall a .\nx1:(Data.Heap.Binominal.Tree a) -> {VV : (Data.Heap.Binominal.Tree {VV : a | root x1 <= VV}) | size VV == size x1}","ident":"Data.Heap.Binominal.treeIsBoundedByItsRootLemma","row":79,"col":1}},"295":{"12":{"ann":"{VV : (Data.Heap.Binominal.Heap a) | 0 < len (unheap VV)}","ident":"h","row":295,"col":12},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:{VV : (Data.Heap.Binominal.Heap a) | 0 < len (unheap VV)} -> {v : (a, (Data.Heap.Binominal.Heap {VV : a | fst v <= VV})) | 1 + heapSize (snd v) == heapSize x2}","ident":"Data.Heap.Binominal.deleteMin2","row":295,"col":1}},"305":{"7":{"ann":"{VV : a | VV == root t'}","ident":"x'","row":305,"col":7},"12":{"ann":"{VV : a | VV == root t'}","ident":"_","row":305,"col":12},"17":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t'}","ident":"t'","row":305,"col":17}},"178":{"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Tree a) -> x3:(Data.Heap.Binominal.Tree a) -> {v : (Data.Heap.Binominal.Tree a) | size v == size x2 + size x3}","ident":"Data.Heap.Binominal.link","row":178,"col":1},"59":{"ann":"(Data.Heap.Binominal.Tree a)","ident":"t2","row":178,"col":59},"6":{"ann":"(Data.Heap.Binominal.Tree a)","ident":"t1","row":178,"col":6}},"180":{"25":{"ann":"(Data.Heap.Binominal.Tree a)","ident":"_","row":180,"col":25},"53":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2}","ident":"lq_anf$##7205759403792807049","row":180,"col":53},"9":{"ann":"(Data.Heap.Binominal.Tree a)","ident":"t2BoundedByX2","row":180,"col":9}},"328":{"48":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == ts2}","ident":"ts2","row":328,"col":48},"31":{"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {v : (Data.Heap.Binominal.Heap a) | unheap v == x1\n                                                                         && heapSize v == sumSizeList x1}","ident":"Data.Heap.Binominal.Heap","row":328,"col":31},"36":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList ts1 + sumSizeList ts2}","ident":"lq_anf$##7205759403792807097","row":328,"col":36},"44":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == ts1}","ident":"ts1","row":328,"col":44},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Heap a) -> x3:(Data.Heap.Binominal.Heap a) -> {VV : (Data.Heap.Binominal.Heap a) | heapSize VV == heapSize x2 + heapSize x3}","ident":"Data.Heap.Binominal.merge","row":328,"col":1}}},"sptypes":[{"start":{"line":1,"column":1},"ann":"GHC.Types.Module","ident":"Data.Heap.Binominal.$trModule","stop":{"line":1,"column":1}},{"start":{"line":44,"column":1},"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {VV : GHC.Types.Int | VV == sumSizeList x1\n                                                           && VV >= 0\n                                                           && len x1 <= VV}","ident":"Data.Heap.Binominal.sumSizeList","stop":{"line":44,"column":12}},{"start":{"line":44,"column":18},"ann":"{v : GHC.Prim.Int# | v == 0}","ident":"lq_anf$##7205759403792807040","stop":{"line":44,"column":19}},{"start":{"line":45,"column":22},"ann":"{v : GHC.Types.Int | 1 <= v\n                     && v == 1 + sumSizeList (subtrees x)\n                     && v == size x}","ident":"lq_anf$##7205759403792807041","stop":{"line":45,"column":28}},{"start":{"line":45,"column":27},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == x}","ident":"x","stop":{"line":45,"column":28}},{"start":{"line":45,"column":31},"ann":"{v : GHC.Types.Int | v == sumSizeList xs\n                     && v >= 0\n                     && len xs <= v}","ident":"lq_anf$##7205759403792807042","stop":{"line":45,"column":45}},{"start":{"line":45,"column":43},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && v == xs}","ident":"xs","stop":{"line":45,"column":45}},{"start":{"line":50,"column":1},"ann":"forall a .\nx1:(Data.Heap.Binominal.Heap a) -> {VV : GHC.Types.Int | VV == heapSize x1\n                                                         && VV >= 0\n                                                         && len (unheap x1) <= VV}","ident":"Data.Heap.Binominal.heapSize","stop":{"line":50,"column":9}},{"start":{"line":50,"column":22},"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {VV : GHC.Types.Int | VV == sumSizeList x1\n                                                           && VV >= 0\n                                                           && len x1 <= VV}","ident":"Data.Heap.Binominal.sumSizeList","stop":{"line":50,"column":36}},{"start":{"line":50,"column":34},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == ts}","ident":"ts","stop":{"line":50,"column":36}},{"start":{"line":79,"column":1},"ann":"forall a .\nx1:(Data.Heap.Binominal.Tree a) -> {VV : (Data.Heap.Binominal.Tree {VV : a | root x1 <= VV}) | size VV == size x1}","ident":"Data.Heap.Binominal.treeIsBoundedByItsRootLemma","stop":{"line":79,"column":28}},{"start":{"line":80,"column":3},"ann":"forall a .\nx1:{v : GHC.Types.Int | v >= 0} -> x2:a -> x3:[(Data.Heap.Binominal.Tree {VV : a | x2 <= VV})] -> x4:{v : GHC.Types.Int | 1 <= v\n                                                                                                                          && v == 1 + sumSizeList x3} -> {v : (Data.Heap.Binominal.Tree a) | size v == x4\n                                                                                                                                                                                             && subtrees v == x3\n                                                                                                                                                                                             && root v == x2\n                                                                                                                                                                                             && rank v == x1}","ident":"Data.Heap.Binominal.Node","stop":{"line":80,"column":46}},{"start":{"line":80,"column":14},"ann":"{v : GHC.Types.Int | v >= 0}","ident":"ds_d3qs","stop":{"line":80,"column":15}},{"start":{"line":80,"column":22},"ann":"a","ident":"ds_d3qt","stop":{"line":80,"column":23}},{"start":{"line":80,"column":34},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0}","ident":"ds_d3qu","stop":{"line":80,"column":36}},{"start":{"line":80,"column":43},"ann":"{v : GHC.Types.Int | 1 <= v}","ident":"ds_d3qv","stop":{"line":80,"column":45}},{"start":{"line":85,"column":1},"ann":"forall a .\nx1:a -> x2:{VV : a | x1 <= VV} -> x3:(Data.Heap.Binominal.Tree {VV : a | x2 <= VV}) -> {VV : (Data.Heap.Binominal.Tree {VV : a | x1 <= VV}) | size VV == size x3}","ident":"Data.Heap.Binominal.boundedTreeTransitivityLemma","stop":{"line":85,"column":29}},{"start":{"line":85,"column":30},"ann":"a","ident":"x","stop":{"line":85,"column":31}},{"start":{"line":85,"column":32},"ann":"{VV : a | x <= VV}","ident":"y","stop":{"line":85,"column":33}},{"start":{"line":85,"column":34},"ann":"(Data.Heap.Binominal.Tree {VV : a | y <= VV})","ident":"tree","stop":{"line":85,"column":38}},{"start":{"line":89,"column":1},"ann":"forall a .\nx1:a -> x2:{VV : a | x1 <= VV} -> x3:[(Data.Heap.Binominal.Tree {VV : a | x2 <= VV})] -> {v : [(Data.Heap.Binominal.Tree {VV : a | x1 <= VV})] | sumSizeList v == sumSizeList x3}","ident":"Data.Heap.Binominal.boundedTreeListTransitivityLemma","stop":{"line":89,"column":33}},{"start":{"line":89,"column":34},"ann":"a","ident":"x","stop":{"line":89,"column":35}},{"start":{"line":89,"column":36},"ann":"{VV : a | x <= VV}","ident":"y","stop":{"line":89,"column":37}},{"start":{"line":89,"column":38},"ann":"[(Data.Heap.Binominal.Tree {VV : a | y <= VV})]","ident":"ts","stop":{"line":89,"column":40}},{"start":{"line":93,"column":1},"ann":"forall a .\nx1:(Data.Heap.Binominal.Tree a) -> x2:[(Data.Heap.Binominal.Tree a)] -> {VV : GHC.Types.Int | VV >= 0\n                                                                                              && VV == size x1 + sumSizeList x2\n                                                                                              && sumSizeList x2 < VV}","ident":"Data.Heap.Binominal.sublistSizeLemma","stop":{"line":93,"column":17}},{"start":{"line":93,"column":18},"ann":"(Data.Heap.Binominal.Tree a)","ident":"x","stop":{"line":93,"column":19}},{"start":{"line":93,"column":20},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"xs","stop":{"line":93,"column":22}},{"start":{"line":94,"column":3},"ann":"GHC.Types.Int -> GHC.Types.Int","ident":"lq_anf$##7205759403792807114","stop":{"line":94,"column":22}},{"start":{"line":94,"column":10},"ann":"GHC.Types.Bool","ident":"lq_anf$##7205759403792807113","stop":{"line":94,"column":22}},{"start":{"line":94,"column":11},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792807111","stop":{"line":94,"column":12}},{"start":{"line":94,"column":15},"ann":"{v : GHC.Types.Int | 1 <= v\n                     && v == 1 + sumSizeList (subtrees x)\n                     && v == size x}","ident":"lq_anf$##7205759403792807112","stop":{"line":94,"column":21}},{"start":{"line":94,"column":20},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == x}","ident":"x","stop":{"line":94,"column":21}},{"start":{"line":95,"column":3},"ann":"{v : GHC.Types.Int | v >= 0}","ident":"lq_anf$##7205759403792807116","stop":{"line":95,"column":23}},{"start":{"line":95,"column":15},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | tail v == xs\n                                      && head v == x\n                                      && listElts v == Set_cup (Set_sng x) (listElts xs)\n                                      && len v == 1 + len xs\n                                      && sumSizeList v == size x + sumSizeList xs}","ident":"lq_anf$##7205759403792807115","stop":{"line":95,"column":23}},{"start":{"line":95,"column":16},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == x}","ident":"x","stop":{"line":95,"column":17}},{"start":{"line":95,"column":20},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == xs}","ident":"xs","stop":{"line":95,"column":22}},{"start":{"line":102,"column":1},"ann":"forall a .\nx1:{VV : GHC.Types.Int | VV >= 0} -> [{t : (Data.Heap.Binominal.Tree a) | size t <= x1}] -> x3:{VV : GHC.Types.Int | VV >= 0\n                                                                                                                     && x1 <= VV} -> [{t : (Data.Heap.Binominal.Tree a) | size t <= x3}]","ident":"Data.Heap.Binominal.subtreeTransitiveLemma","stop":{"line":102,"column":23}},{"start":{"line":102,"column":26},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"ts","stop":{"line":102,"column":28}},{"start":{"line":106,"column":1},"ann":"forall a .\nx1:{VV : GHC.Types.Int | VV >= 0} -> {VV : (Data.Heap.Binominal.Tree a) | size VV <= x1} -> [{t : (Data.Heap.Binominal.Tree a) | size t <= x1}] -> [{t : (Data.Heap.Binominal.Tree a) | size t <= x1}]","ident":"Data.Heap.Binominal.consTreeLemma","stop":{"line":106,"column":14}},{"start":{"line":106,"column":17},"ann":"(Data.Heap.Binominal.Tree a)","ident":"t","stop":{"line":106,"column":18}},{"start":{"line":106,"column":19},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"ts","stop":{"line":106,"column":21}},{"start":{"line":106,"column":24},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":106,"column":25}},{"start":{"line":106,"column":28},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == ts}","ident":"ts","stop":{"line":106,"column":30}},{"start":{"line":110,"column":1},"ann":"forall a .\nx1:{VV : GHC.Types.Int | VV >= 0} -> {VV : [{t : (Data.Heap.Binominal.Tree a) | size t < x1}] | VV /= []} -> {t : (Data.Heap.Binominal.Tree a) | size t < x1}","ident":"Data.Heap.Binominal.testTrick","stop":{"line":110,"column":10}},{"start":{"line":110,"column":22},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == h}","ident":"h","stop":{"line":110,"column":23}},{"start":{"line":114,"column":1},"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> [{t : (Data.Heap.Binominal.Tree a) | size t <= sumSizeList x1}]","ident":"Data.Heap.Binominal.boundedSizeSubtreeLemma","stop":{"line":114,"column":24}},{"start":{"line":114,"column":30},"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | Set_emp (listElts v)\n                                            && len v == 0\n                                            && sumSizeList v == 0}","ident":"_","stop":{"line":114,"column":32}},{"start":{"line":116,"column":7},"ann":"[{v : (Data.Heap.Binominal.Tree a) | size v <= sumSizeList ts}]","ident":"ih","stop":{"line":116,"column":9}},{"start":{"line":116,"column":12},"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> [{t : (Data.Heap.Binominal.Tree a) | size t <= sumSizeList x1}]","ident":"Data.Heap.Binominal.boundedSizeSubtreeLemma","stop":{"line":116,"column":38}},{"start":{"line":116,"column":36},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == ts}","ident":"ts","stop":{"line":116,"column":38}},{"start":{"line":117,"column":7},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == size t + sumSizeList ts\n                     && sumSizeList ts < v}","ident":"sizetts","stop":{"line":117,"column":14}},{"start":{"line":117,"column":17},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == size t + sumSizeList ts\n                     && sumSizeList ts < v}","ident":"_","stop":{"line":117,"column":38}},{"start":{"line":117,"column":34},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":117,"column":35}},{"start":{"line":117,"column":36},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == ts}","ident":"ts","stop":{"line":117,"column":38}},{"start":{"line":118,"column":7},"ann":"{v : GHC.Types.Int | v == sumSizeList ts\n                     && v >= 0\n                     && len ts <= v}","ident":"sizets","stop":{"line":118,"column":13}},{"start":{"line":118,"column":16},"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {VV : GHC.Types.Int | VV == sumSizeList x1\n                                                           && VV >= 0\n                                                           && len x1 <= VV}","ident":"Data.Heap.Binominal.sumSizeList","stop":{"line":118,"column":30}},{"start":{"line":118,"column":28},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == ts}","ident":"ts","stop":{"line":118,"column":30}},{"start":{"line":119,"column":7},"ann":"[{v : (Data.Heap.Binominal.Tree a) | size v <= sizetts}]","ident":"refinedSubtrees","stop":{"line":119,"column":22}},{"start":{"line":119,"column":25},"ann":"[{v : (Data.Heap.Binominal.Tree a) | size v <= sizetts}]","ident":"_","stop":{"line":119,"column":65}},{"start":{"line":119,"column":48},"ann":"{v : GHC.Types.Int | v == sumSizeList ts\n                     && v >= 0\n                     && len ts <= v\n                     && v == sizets}","ident":"sizets","stop":{"line":119,"column":54}},{"start":{"line":119,"column":55},"ann":"{v : [{v : (Data.Heap.Binominal.Tree a) | size v <= sumSizeList ts}] | sumSizeList v >= 0\n                                                                       && len v >= 0\n                                                                       && v == ih}","ident":"ih","stop":{"line":119,"column":57}},{"start":{"line":119,"column":58},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == size t + sumSizeList ts\n                     && sumSizeList ts < v\n                     && v == sizetts}","ident":"sizetts","stop":{"line":119,"column":65}},{"start":{"line":120,"column":17},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == size t + sumSizeList ts\n                     && sumSizeList ts < v\n                     && v == sizetts}","ident":"sizetts","stop":{"line":120,"column":24}},{"start":{"line":120,"column":25},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":120,"column":26}},{"start":{"line":120,"column":27},"ann":"{v : [{v : (Data.Heap.Binominal.Tree a) | size v <= sizetts}] | sumSizeList v >= 0\n                                                                && len v >= 0\n                                                                && v == refinedSubtrees}","ident":"refinedSubtrees","stop":{"line":120,"column":42}},{"start":{"line":147,"column":1},"ann":"forall a .\nx1:{VV : GHC.Types.Int | VV >= 0} -> [{VV : (Data.Heap.Binominal.Tree a) | size VV <= x1}] -> x3:{VV : GHC.Types.Int | VV >= 0\n                                                                                                                       && x1 < VV} -> [{VV : (Data.Heap.Binominal.Tree a) | size VV < x3}]","ident":"Data.Heap.Binominal.strictTransitivitySizeBoundLemma","stop":{"line":147,"column":33}},{"start":{"line":147,"column":36},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"ts","stop":{"line":147,"column":38}},{"start":{"line":152,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\n(Data.Heap.Binominal.Tree a) -> (Data.Set.Internal.Set a)","ident":"Data.Heap.Binominal.eltsTree","stop":{"line":152,"column":9}},{"start":{"line":152,"column":10},"ann":"(Data.Heap.Binominal.Tree a)","ident":"t","stop":{"line":152,"column":11}},{"start":{"line":153,"column":7},"ann":"[{v : (Data.Heap.Binominal.Tree a) | size v <= sumSizeList ts}]","ident":"boundBySumSizeList","stop":{"line":153,"column":25}},{"start":{"line":153,"column":28},"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> [{t : (Data.Heap.Binominal.Tree a) | size t <= sumSizeList x1}]","ident":"Data.Heap.Binominal.boundedSizeSubtreeLemma","stop":{"line":153,"column":56}},{"start":{"line":153,"column":53},"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | x <= VV})] | sumSizeList v >= 0\n                                                       && len v >= 0\n                                                       && v == ts}","ident":"ts","stop":{"line":153,"column":55}},{"start":{"line":154,"column":7},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"boundByOverallSize","stop":{"line":154,"column":25}},{"start":{"line":154,"column":28},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"_","stop":{"line":154,"column":105}},{"start":{"line":154,"column":61},"ann":"{v : GHC.Types.Int | v == sumSizeList ts\n                     && v >= 0\n                     && len ts <= v}","ident":"lq_anf$##7205759403792807119","stop":{"line":154,"column":77}},{"start":{"line":154,"column":74},"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | x <= VV})] | sumSizeList v >= 0\n                                                       && len v >= 0\n                                                       && v == ts}","ident":"ts","stop":{"line":154,"column":76}},{"start":{"line":154,"column":78},"ann":"{v : [{v : (Data.Heap.Binominal.Tree a) | size v <= sumSizeList ts}] | sumSizeList v >= 0\n                                                                       && len v >= 0\n                                                                       && v == boundBySumSizeList}","ident":"boundBySumSizeList","stop":{"line":154,"column":96}},{"start":{"line":154,"column":97},"ann":"{v : GHC.Types.Int | 1 <= v}","ident":"lq_anf$##7205759403792807120","stop":{"line":154,"column":105}},{"start":{"line":154,"column":103},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t\n                                    && size v == sz\n                                    && subtrees v == ts\n                                    && root v == x\n                                    && rank v == r\n                                    && v == Node r x ts sz}","ident":"lq_anf$##7205759403792807118","stop":{"line":154,"column":104}},{"start":{"line":156,"column":3},"ann":"(Data.Set.Internal.Set a) -> (Data.Set.Internal.Set a)","ident":"lq_anf$##7205759403792807124","stop":{"line":156,"column":35}},{"start":{"line":156,"column":10},"ann":"GHC.Types.Bool","ident":"lq_anf$##7205759403792807123","stop":{"line":156,"column":35}},{"start":{"line":156,"column":11},"ann":"{v : GHC.Types.Int | v == sumSizeList ts\n                     && v >= 0\n                     && len ts <= v}","ident":"lq_anf$##7205759403792807121","stop":{"line":156,"column":25}},{"start":{"line":156,"column":23},"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | x <= VV})] | sumSizeList v >= 0\n                                                       && len v >= 0\n                                                       && v == ts}","ident":"ts","stop":{"line":156,"column":25}},{"start":{"line":156,"column":28},"ann":"{v : GHC.Types.Int | 1 <= v}","ident":"lq_anf$##7205759403792807122","stop":{"line":156,"column":34}},{"start":{"line":156,"column":33},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t\n                                    && size v == sz\n                                    && subtrees v == ts\n                                    && root v == x\n                                    && rank v == r\n                                    && v == Node r x ts sz}","ident":"lq_anf$##7205759403792807118","stop":{"line":156,"column":34}},{"start":{"line":157,"column":3},"ann":"(Data.Set.Internal.Set a)","ident":"lq_anf$##7205759403792807129","stop":{"line":157,"column":72}},{"start":{"line":157,"column":15},"ann":"x1:(Data.Set.Internal.Set a) -> x2:(Data.Set.Internal.Set a) -> {v : (Data.Set.Internal.Set a) | v == Set_cup x1 x2}","ident":"lq_anf$##7205759403792807125","stop":{"line":157,"column":22}},{"start":{"line":157,"column":23},"ann":"{v : (Data.Set.Internal.Set a) | v == Set_sng x}","ident":"lq_anf$##7205759403792807126","stop":{"line":157,"column":38}},{"start":{"line":157,"column":36},"ann":"{VV : a | VV == x}","ident":"x","stop":{"line":157,"column":37}},{"start":{"line":157,"column":39},"ann":"{v : [(Data.Set.Internal.Set a)] | len v == len boundByOverallSize}","ident":"lq_anf$##7205759403792807128","stop":{"line":157,"column":72}},{"start":{"line":157,"column":44},"ann":"(Data.Heap.Binominal.Tree a) -> (Data.Set.Internal.Set a)","ident":"lq_anf$##7205759403792807127","stop":{"line":157,"column":52}},{"start":{"line":157,"column":53},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == boundByOverallSize}","ident":"boundByOverallSize","stop":{"line":157,"column":71}},{"start":{"line":166,"column":1},"ann":"forall a . {v : GHC.Types.Bool | v} -> a -> a","ident":"Data.Heap.Binominal.assert","stop":{"line":166,"column":7}},{"start":{"line":166,"column":10},"ann":"a","ident":"x","stop":{"line":166,"column":11}},{"start":{"line":170,"column":1},"ann":"forall a b .\nx1:a -> (Data.Heap.Binominal.Tree {VV : a | x1 <= VV}) -> b -> b","ident":"Data.Heap.Binominal.assertBoundedTree","stop":{"line":170,"column":18}},{"start":{"line":170,"column":23},"ann":"a","ident":"x","stop":{"line":170,"column":24}},{"start":{"line":174,"column":1},"ann":"forall a b .\nx1:a -> [(Data.Heap.Binominal.Tree {VV : a | x1 <= VV})] -> b -> b","ident":"Data.Heap.Binominal.assertBoundedTreeList","stop":{"line":174,"column":22}},{"start":{"line":174,"column":27},"ann":"a","ident":"x","stop":{"line":174,"column":28}},{"start":{"line":178,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Tree a) -> x3:(Data.Heap.Binominal.Tree a) -> {v : (Data.Heap.Binominal.Tree a) | size v == size x2 + size x3}","ident":"Data.Heap.Binominal.link","stop":{"line":178,"column":5}},{"start":{"line":178,"column":6},"ann":"(Data.Heap.Binominal.Tree a)","ident":"t1","stop":{"line":178,"column":8}},{"start":{"line":178,"column":59},"ann":"(Data.Heap.Binominal.Tree a)","ident":"t2","stop":{"line":178,"column":61}},{"start":{"line":179,"column":5},"ann":"a","ident":"ds_d3qT","stop":{"line":179,"column":7}},{"start":{"line":179,"column":11},"ann":"a","ident":"ds_d3qX","stop":{"line":179,"column":13}},{"start":{"line":180,"column":9},"ann":"(Data.Heap.Binominal.Tree a)","ident":"t2BoundedByX2","stop":{"line":180,"column":22}},{"start":{"line":180,"column":25},"ann":"(Data.Heap.Binominal.Tree a)","ident":"_","stop":{"line":180,"column":55}},{"start":{"line":180,"column":53},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2}","ident":"lq_anf$##7205759403792807049","stop":{"line":180,"column":55}},{"start":{"line":181,"column":9},"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t2BoundedByX2}","ident":"t2BoundedByX1","stop":{"line":181,"column":22}},{"start":{"line":181,"column":25},"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t2BoundedByX2}","ident":"_","stop":{"line":181,"column":73}},{"start":{"line":181,"column":54},"ann":"a","ident":"ds_d3qT","stop":{"line":181,"column":56}},{"start":{"line":181,"column":57},"ann":"a","ident":"ds_d3qX","stop":{"line":181,"column":59}},{"start":{"line":181,"column":60},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2BoundedByX2}","ident":"t2BoundedByX2","stop":{"line":181,"column":73}},{"start":{"line":182,"column":10},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792807059","stop":{"line":182,"column":16}},{"start":{"line":182,"column":11},"ann":"{v : GHC.Types.Int | v >= 0}","ident":"ds_d3qS","stop":{"line":182,"column":13}},{"start":{"line":182,"column":14},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792807058","stop":{"line":182,"column":15}},{"start":{"line":182,"column":17},"ann":"a","ident":"ds_d3qT","stop":{"line":182,"column":19}},{"start":{"line":182,"column":20},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | head v == t2BoundedByX1}","ident":"lq_anf$##7205759403792807060","stop":{"line":182,"column":39}},{"start":{"line":182,"column":21},"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t2BoundedByX2\n                                    && v == t2BoundedByX1}","ident":"t2BoundedByX1","stop":{"line":182,"column":34}},{"start":{"line":182,"column":35},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0}","ident":"ds_d3qU","stop":{"line":182,"column":38}},{"start":{"line":182,"column":40},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792807061","stop":{"line":182,"column":51}},{"start":{"line":182,"column":41},"ann":"{v : GHC.Types.Int | 1 <= v}","ident":"ds_d3qV","stop":{"line":182,"column":44}},{"start":{"line":182,"column":47},"ann":"{v : GHC.Types.Int | 1 <= v}","ident":"ds_d3qZ","stop":{"line":182,"column":50}},{"start":{"line":184,"column":9},"ann":"(Data.Heap.Binominal.Tree a)","ident":"t1BoundedByX1","stop":{"line":184,"column":22}},{"start":{"line":184,"column":25},"ann":"(Data.Heap.Binominal.Tree a)","ident":"_","stop":{"line":184,"column":55}},{"start":{"line":184,"column":53},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1}","ident":"lq_anf$##7205759403792807048","stop":{"line":184,"column":55}},{"start":{"line":185,"column":9},"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t1BoundedByX1}","ident":"t1BoundedByX2","stop":{"line":185,"column":22}},{"start":{"line":185,"column":25},"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t1BoundedByX1}","ident":"_","stop":{"line":185,"column":73}},{"start":{"line":185,"column":54},"ann":"a","ident":"ds_d3qX","stop":{"line":185,"column":56}},{"start":{"line":185,"column":57},"ann":"a","ident":"ds_d3qT","stop":{"line":185,"column":59}},{"start":{"line":185,"column":60},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1BoundedByX1}","ident":"t1BoundedByX1","stop":{"line":185,"column":73}},{"start":{"line":186,"column":10},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792807054","stop":{"line":186,"column":16}},{"start":{"line":186,"column":11},"ann":"{v : GHC.Types.Int | v >= 0}","ident":"ds_d3qW","stop":{"line":186,"column":13}},{"start":{"line":186,"column":14},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792807053","stop":{"line":186,"column":15}},{"start":{"line":186,"column":17},"ann":"a","ident":"ds_d3qX","stop":{"line":186,"column":19}},{"start":{"line":186,"column":20},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | head v == t1BoundedByX2}","ident":"lq_anf$##7205759403792807055","stop":{"line":186,"column":39}},{"start":{"line":186,"column":21},"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t1BoundedByX1\n                                    && v == t1BoundedByX2}","ident":"t1BoundedByX2","stop":{"line":186,"column":34}},{"start":{"line":186,"column":35},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0}","ident":"ds_d3qY","stop":{"line":186,"column":38}},{"start":{"line":186,"column":40},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792807056","stop":{"line":186,"column":51}},{"start":{"line":186,"column":41},"ann":"{v : GHC.Types.Int | 1 <= v}","ident":"ds_d3qV","stop":{"line":186,"column":44}},{"start":{"line":186,"column":47},"ann":"{v : GHC.Types.Int | 1 <= v}","ident":"ds_d3qZ","stop":{"line":186,"column":50}},{"start":{"line":190,"column":1},"ann":"forall a . {v : (Data.Heap.Binominal.Heap a) | heapSize v == 0}","ident":"Data.Heap.Binominal.empty","stop":{"line":190,"column":6}},{"start":{"line":190,"column":14},"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | Set_emp (listElts v)\n                                            && len v == 0\n                                            && sumSizeList v == 0}","ident":"_","stop":{"line":190,"column":16}},{"start":{"line":194,"column":1},"ann":"forall a .\nx1:(Data.Heap.Binominal.Heap a) -> {v : GHC.Types.Bool | v <=> heapSize x1 == 0}","ident":"Data.Heap.Binominal.null","stop":{"line":194,"column":5}},{"start":{"line":194,"column":6},"ann":"(Data.Heap.Binominal.Heap a)","ident":"h","stop":{"line":194,"column":7}},{"start":{"line":194,"column":10},"ann":"{v : GHC.Types.Int | v == heapSize h\n                     && v >= 0\n                     && len (unheap h) <= v}","ident":"lq_anf$##7205759403792807044","stop":{"line":194,"column":20}},{"start":{"line":194,"column":19},"ann":"{v : (Data.Heap.Binominal.Heap a) | heapSize v >= 0\n                                    && v == h}","ident":"h","stop":{"line":194,"column":20}},{"start":{"line":194,"column":24},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792807046","stop":{"line":194,"column":25}},{"start":{"line":198,"column":1},"ann":"forall a .\na -> {v : (Data.Heap.Binominal.Heap a) | heapSize v == 1}","ident":"Data.Heap.Binominal.singleton","stop":{"line":198,"column":10}},{"start":{"line":198,"column":11},"ann":"a","ident":"x","stop":{"line":198,"column":12}},{"start":{"line":198,"column":20},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"lq_anf$##7205759403792807140","stop":{"line":198,"column":35}},{"start":{"line":198,"column":21},"ann":"{v : (Data.Heap.Binominal.Tree a) | root v == x}","ident":"lq_anf$##7205759403792807138","stop":{"line":198,"column":34}},{"start":{"line":198,"column":26},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792807134","stop":{"line":198,"column":27}},{"start":{"line":198,"column":28},"ann":"{VV : a | VV == x}","ident":"x","stop":{"line":198,"column":29}},{"start":{"line":198,"column":30},"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | Set_emp (listElts v)\n                                            && len v == 0\n                                            && sumSizeList v == 0}","ident":"_","stop":{"line":198,"column":32}},{"start":{"line":198,"column":33},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792807137","stop":{"line":198,"column":34}},{"start":{"line":210,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\na -> x3:(Data.Heap.Binominal.Heap a) -> {v : (Data.Heap.Binominal.Heap a) | 1 + heapSize x3 == heapSize v}","ident":"Data.Heap.Binominal.insert","stop":{"line":210,"column":7}},{"start":{"line":210,"column":8},"ann":"a","ident":"x","stop":{"line":210,"column":9}},{"start":{"line":210,"column":22},"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {v : (Data.Heap.Binominal.Heap a) | unheap v == x1\n                                                                         && heapSize v == sumSizeList x1}","ident":"Data.Heap.Binominal.Heap","stop":{"line":210,"column":55}},{"start":{"line":210,"column":27},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"lq_anf$##7205759403792807076","stop":{"line":210,"column":55}},{"start":{"line":210,"column":36},"ann":"{v : (Data.Heap.Binominal.Tree a) | root v == x}","ident":"lq_anf$##7205759403792807075","stop":{"line":210,"column":51}},{"start":{"line":210,"column":42},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792807071","stop":{"line":210,"column":43}},{"start":{"line":210,"column":44},"ann":"{VV : a | VV == x}","ident":"x","stop":{"line":210,"column":45}},{"start":{"line":210,"column":46},"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | Set_emp (listElts v)\n                                            && len v == 0\n                                            && sumSizeList v == 0}","ident":"_","stop":{"line":210,"column":48}},{"start":{"line":210,"column":49},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792807074","stop":{"line":210,"column":50}},{"start":{"line":210,"column":52},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == ts}","ident":"ts","stop":{"line":210,"column":54}},{"start":{"line":214,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Tree a) -> x3:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == size x2 + sumSizeList x3}","ident":"Data.Heap.Binominal.insert'","stop":{"line":214,"column":8}},{"start":{"line":214,"column":9},"ann":"(Data.Heap.Binominal.Tree a)","ident":"t","stop":{"line":214,"column":10}},{"start":{"line":214,"column":16},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | Set_emp (listElts v)\n                                      && len v == 0\n                                      && sumSizeList v == 0}","ident":"lq_anf$##7205759403792807063","stop":{"line":214,"column":19}},{"start":{"line":214,"column":17},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":214,"column":18}},{"start":{"line":216,"column":5},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == rank t}","ident":"lq_anf$##7205759403792807064","stop":{"line":216,"column":11}},{"start":{"line":216,"column":10},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":216,"column":11}},{"start":{"line":216,"column":14},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == rank t'}","ident":"lq_anf$##7205759403792807065","stop":{"line":216,"column":21}},{"start":{"line":216,"column":19},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t'}","ident":"t'","stop":{"line":216,"column":21}},{"start":{"line":216,"column":24},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":216,"column":25}},{"start":{"line":216,"column":28},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0}","ident":"ds_d3r2","stop":{"line":216,"column":30}},{"start":{"line":217,"column":24},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Tree a) -> x3:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == size x2 + sumSizeList x3}","ident":"Data.Heap.Binominal.insert'","stop":{"line":217,"column":47}},{"start":{"line":217,"column":32},"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t + size t'}","ident":"lq_anf$##7205759403792807068","stop":{"line":217,"column":43}},{"start":{"line":217,"column":38},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":217,"column":39}},{"start":{"line":217,"column":40},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t'}","ident":"t'","stop":{"line":217,"column":42}},{"start":{"line":217,"column":44},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == ts'}","ident":"ts'","stop":{"line":217,"column":47}},{"start":{"line":222,"column":1},"ann":"forall a .\nx1:[a] -> {VV : GHC.Types.Int | VV == len x1\n                                && VV >= 0}","ident":"Data.Heap.Binominal.len","stop":{"line":222,"column":4}},{"start":{"line":222,"column":10},"ann":"{v : GHC.Prim.Int# | v == 0}","ident":"lq_anf$##7205759403792807142","stop":{"line":222,"column":11}},{"start":{"line":223,"column":14},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792807144","stop":{"line":223,"column":15}},{"start":{"line":223,"column":18},"ann":"{v : GHC.Types.Int | v == len xs\n                     && v >= 0}","ident":"lq_anf$##7205759403792807145","stop":{"line":223,"column":24}},{"start":{"line":223,"column":22},"ann":"{v : [a] | sumSizeList v >= 0\n           && len v >= 0\n           && v == xs}","ident":"xs","stop":{"line":223,"column":24}},{"start":{"line":227,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:[a] -> {v : (Data.Heap.Binominal.Heap a) | heapSize v == len x2}","ident":"Data.Heap.Binominal.fromList","stop":{"line":227,"column":9}},{"start":{"line":227,"column":15},"ann":"forall a . {v : (Data.Heap.Binominal.Heap a) | heapSize v == 0}","ident":"_","stop":{"line":227,"column":20}},{"start":{"line":228,"column":19},"ann":"{v : (GHC.Classes.Ord a) | v == $dOrd_a3aC}","ident":"$dOrd_a3aC","stop":{"line":228,"column":41}},{"start":{"line":228,"column":26},"ann":"{VV : a | VV == x}","ident":"x","stop":{"line":228,"column":27}},{"start":{"line":228,"column":28},"ann":"{v : (Data.Heap.Binominal.Heap a) | heapSize v == len xs}","ident":"lq_anf$##7205759403792807132","stop":{"line":228,"column":41}},{"start":{"line":228,"column":38},"ann":"{v : [a] | sumSizeList v >= 0\n           && len v >= 0\n           && v == xs}","ident":"xs","stop":{"line":228,"column":40}},{"start":{"line":270,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\n{VV : (Data.Heap.Binominal.Heap a) | 0 < len (unheap VV)} -> a","ident":"Data.Heap.Binominal.minimum","stop":{"line":270,"column":8}},{"start":{"line":270,"column":11},"ann":"forall a .\nx1:(Data.Heap.Binominal.Tree a) -> {VV : a | VV == root x1}","ident":"_","stop":{"line":270,"column":15}},{"start":{"line":270,"column":18},"ann":"forall a b . x1:(a, b) -> {VV : a | VV == fst x1}","ident":"_","stop":{"line":270,"column":21}},{"start":{"line":270,"column":24},"ann":"x1:{v : [(Data.Heap.Binominal.Tree a)] | 0 < len v} -> {v : ((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | root (fst x15) <= VV})]) | size (fst v) + sumSizeList (snd v) == sumSizeList x1}","ident":"lq_anf$##7205759403792807154","stop":{"line":270,"column":34}},{"start":{"line":270,"column":37},"ann":"forall a .\nx1:{v : (Data.Heap.Binominal.Heap a) | 0 < len (unheap v)} -> {v : [(Data.Heap.Binominal.Tree a)] | 0 < len v\n                                                                                                    && sumSizeList v == heapSize x1}","ident":"_","stop":{"line":270,"column":51}},{"start":{"line":276,"column":1},"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList x1}","ident":"Data.Heap.Binominal.reverseHeapList","stop":{"line":276,"column":16}},{"start":{"line":276,"column":17},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"xs","stop":{"line":276,"column":19}},{"start":{"line":276,"column":41},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == xs}","ident":"xs","stop":{"line":276,"column":43}},{"start":{"line":276,"column":44},"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | Set_emp (listElts v)\n                                            && len v == 0\n                                            && sumSizeList v == 0}","ident":"_","stop":{"line":276,"column":46}},{"start":{"line":280,"column":1},"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> x2:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList x1 + sumSizeList x2}","ident":"Data.Heap.Binominal.reverseHeapListAux","stop":{"line":280,"column":19}},{"start":{"line":280,"column":23},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"acc","stop":{"line":280,"column":26}},{"start":{"line":280,"column":29},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == acc}","ident":"acc","stop":{"line":280,"column":32}},{"start":{"line":281,"column":33},"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> x2:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList x1 + sumSizeList x2}","ident":"Data.Heap.Binominal.reverseHeapListAux","stop":{"line":281,"column":62}},{"start":{"line":281,"column":52},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == xs}","ident":"xs","stop":{"line":281,"column":54}},{"start":{"line":281,"column":55},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | tail v == acc\n                                      && head v == x\n                                      && listElts v == Set_cup (Set_sng x) (listElts acc)\n                                      && len v == 1 + len acc\n                                      && sumSizeList v == size x + sumSizeList acc}","ident":"lq_anf$##7205759403792807147","stop":{"line":281,"column":62}},{"start":{"line":281,"column":56},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == x}","ident":"x","stop":{"line":281,"column":57}},{"start":{"line":281,"column":58},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == acc}","ident":"acc","stop":{"line":281,"column":61}},{"start":{"line":285,"column":1},"ann":"forall a .\nx1:{VV : (Data.Heap.Binominal.Heap a) | 0 < len (unheap VV)} -> {v : [(Data.Heap.Binominal.Tree a)] | 0 < len v\n                                                                                                      && sumSizeList v == heapSize x1}","ident":"Data.Heap.Binominal.unheapNonempty","stop":{"line":285,"column":15}},{"start":{"line":285,"column":34},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == ts}","ident":"lq_anf$##7205759403792807150","stop":{"line":285,"column":36}},{"start":{"line":289,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:{VV : (Data.Heap.Binominal.Heap a) | 0 < len (unheap VV)} -> {v : (Data.Heap.Binominal.Heap a) | 1 + heapSize v == heapSize x2}","ident":"Data.Heap.Binominal.deleteMin","stop":{"line":289,"column":10}},{"start":{"line":289,"column":11},"ann":"{VV : (Data.Heap.Binominal.Heap a) | 0 < len (unheap VV)}","ident":"h","stop":{"line":289,"column":12}},{"start":{"line":290,"column":31},"ann":"((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | root (fst x9) <= VV})])","ident":"lq_anf$##7205759403792807159","stop":{"line":290,"column":60}},{"start":{"line":290,"column":42},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | 0 < len v\n                                      && sumSizeList v == heapSize h}","ident":"lq_anf$##7205759403792807158","stop":{"line":290,"column":60}},{"start":{"line":290,"column":58},"ann":"{v : (Data.Heap.Binominal.Heap a) | 0 < len (unheap v)\n                                    && heapSize v >= 0\n                                    && v == h}","ident":"h","stop":{"line":290,"column":59}},{"start":{"line":291,"column":8},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"lq_anf$##7205759403792807163","stop":{"line":291,"column":42}},{"start":{"line":291,"column":16},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList ts1}","ident":"lq_anf$##7205759403792807162","stop":{"line":291,"column":37}},{"start":{"line":291,"column":33},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == ts1}","ident":"ts1","stop":{"line":291,"column":36}},{"start":{"line":291,"column":38},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == ts2}","ident":"ts2","stop":{"line":291,"column":41}},{"start":{"line":295,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:{VV : (Data.Heap.Binominal.Heap a) | 0 < len (unheap VV)} -> {v : (a, (Data.Heap.Binominal.Heap {VV : a | fst v <= VV})) | 1 + heapSize (snd v) == heapSize x2}","ident":"Data.Heap.Binominal.deleteMin2","stop":{"line":295,"column":11}},{"start":{"line":295,"column":12},"ann":"{VV : (Data.Heap.Binominal.Heap a) | 0 < len (unheap VV)}","ident":"h","stop":{"line":295,"column":13}},{"start":{"line":296,"column":36},"ann":"((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | root (fst x9) <= VV})])","ident":"lq_anf$##7205759403792807165","stop":{"line":296,"column":65}},{"start":{"line":296,"column":47},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | 0 < len v\n                                      && sumSizeList v == heapSize h}","ident":"lq_anf$##7205759403792807164","stop":{"line":296,"column":65}},{"start":{"line":296,"column":63},"ann":"{v : (Data.Heap.Binominal.Heap a) | 0 < len (unheap v)\n                                    && heapSize v >= 0\n                                    && v == h}","ident":"h","stop":{"line":296,"column":64}},{"start":{"line":297,"column":4},"ann":"{VV : a | VV == minElt}","ident":"minElt","stop":{"line":297,"column":10}},{"start":{"line":297,"column":12},"ann":"(Data.Heap.Binominal.Heap a)","ident":"lq_anf$##7205759403792807170","stop":{"line":297,"column":51}},{"start":{"line":297,"column":17},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"lq_anf$##7205759403792807169","stop":{"line":297,"column":51}},{"start":{"line":297,"column":25},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList ts1}","ident":"lq_anf$##7205759403792807168","stop":{"line":297,"column":46}},{"start":{"line":297,"column":42},"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | minElt <= VV})] | sumSizeList v >= 0\n                                                            && len v >= 0\n                                                            && v == ts1}","ident":"ts1","stop":{"line":297,"column":45}},{"start":{"line":297,"column":47},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == ts2}","ident":"ts2","stop":{"line":297,"column":50}},{"start":{"line":301,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:{v : [(Data.Heap.Binominal.Tree a)] | 0 < len v} -> {v : ((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | root (fst v) <= VV})]) | size (fst v) + sumSizeList (snd v) == sumSizeList x2}","ident":"Data.Heap.Binominal.deleteMin'","stop":{"line":301,"column":11}},{"start":{"line":301,"column":18},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | Set_emp (listElts v)\n                                      && len v == 0\n                                      && sumSizeList v == 0}","ident":"lq_anf$##7205759403792807105","stop":{"line":301,"column":25}},{"start":{"line":301,"column":19},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":301,"column":20}},{"start":{"line":301,"column":22},"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | Set_emp (listElts v)\n                                            && len v == 0\n                                            && sumSizeList v == 0}","ident":"_","stop":{"line":301,"column":24}},{"start":{"line":303,"column":8},"ann":"(Data.Heap.Binominal.Tree a)","ident":"t'","stop":{"line":303,"column":10}},{"start":{"line":303,"column":12},"ann":"{VV : [(Data.Heap.Binominal.Tree {VV : a | root t' <= VV})] | len VV >= 0}","ident":"ts'","stop":{"line":303,"column":15}},{"start":{"line":303,"column":19},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:{v : [(Data.Heap.Binominal.Tree a)] | 0 < len v} -> {v : ((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | root (fst v) <= VV})]) | size (fst v) + sumSizeList (snd v) == sumSizeList x2}","ident":"Data.Heap.Binominal.deleteMin'","stop":{"line":303,"column":32}},{"start":{"line":303,"column":30},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0}","ident":"ds_d3st","stop":{"line":303,"column":32}},{"start":{"line":304,"column":7},"ann":"{VV : a | VV == root t}","ident":"x","stop":{"line":304,"column":8}},{"start":{"line":304,"column":11},"ann":"{VV : a | VV == root t}","ident":"_","stop":{"line":304,"column":17}},{"start":{"line":304,"column":16},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":304,"column":17}},{"start":{"line":305,"column":7},"ann":"{VV : a | VV == root t'}","ident":"x'","stop":{"line":305,"column":9}},{"start":{"line":305,"column":12},"ann":"{VV : a | VV == root t'}","ident":"_","stop":{"line":305,"column":19}},{"start":{"line":305,"column":17},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t'}","ident":"t'","stop":{"line":305,"column":19}},{"start":{"line":306,"column":7},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t <= VV}) | size v == size t}","ident":"tBounded","stop":{"line":306,"column":15}},{"start":{"line":306,"column":18},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t <= VV}) | size v == size t}","ident":"_","stop":{"line":306,"column":47}},{"start":{"line":306,"column":46},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":306,"column":47}},{"start":{"line":307,"column":7},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t' <= VV}) | size v == size t'}","ident":"tBounded'","stop":{"line":307,"column":16}},{"start":{"line":307,"column":19},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t' <= VV}) | size v == size t'}","ident":"_","stop":{"line":307,"column":49}},{"start":{"line":307,"column":47},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t'}","ident":"t'","stop":{"line":307,"column":49}},{"start":{"line":308,"column":6},"ann":"{VV : a | VV == root t\n          && VV == x}","ident":"x","stop":{"line":308,"column":7}},{"start":{"line":308,"column":10},"ann":"{VV : a | VV == root t'\n          && VV == x'}","ident":"x'","stop":{"line":308,"column":12}},{"start":{"line":310,"column":9},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x <= VV}) | size v == size tBounded'}","ident":"hd","stop":{"line":310,"column":11}},{"start":{"line":310,"column":14},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x <= VV}) | size v == size tBounded'}","ident":"_","stop":{"line":310,"column":57}},{"start":{"line":310,"column":43},"ann":"{VV : a | VV == root t\n          && VV == x}","ident":"x","stop":{"line":310,"column":44}},{"start":{"line":310,"column":45},"ann":"{VV : a | VV == root t'\n          && VV == x'}","ident":"x'","stop":{"line":310,"column":47}},{"start":{"line":310,"column":48},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t' <= VV}) | size v == size t'\n                                                           && v == tBounded'}","ident":"tBounded'","stop":{"line":310,"column":57}},{"start":{"line":311,"column":9},"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | x <= VV})] | sumSizeList v == sumSizeList ts'}","ident":"tl","stop":{"line":311,"column":11}},{"start":{"line":311,"column":14},"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | x <= VV})] | sumSizeList v == sumSizeList ts'}","ident":"_","stop":{"line":311,"column":55}},{"start":{"line":311,"column":47},"ann":"{VV : a | VV == root t\n          && VV == x}","ident":"x","stop":{"line":311,"column":48}},{"start":{"line":311,"column":49},"ann":"{VV : a | VV == root t'\n          && VV == x'}","ident":"x'","stop":{"line":311,"column":51}},{"start":{"line":311,"column":52},"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | root t' <= VV})] | len v >= 0\n                                                             && sumSizeList v >= 0\n                                                             && v == ts'}","ident":"ts'","stop":{"line":311,"column":55}},{"start":{"line":312,"column":6},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":312,"column":7}},{"start":{"line":312,"column":9},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x <= VV}) | size v == size tBounded'\n                                                     && v == hd}","ident":"hd","stop":{"line":312,"column":11}},{"start":{"line":312,"column":12},"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | x <= VV})] | sumSizeList v == sumSizeList ts'\n                                                       && sumSizeList v >= 0\n                                                       && len v >= 0\n                                                       && v == tl}","ident":"tl","stop":{"line":312,"column":14}},{"start":{"line":314,"column":9},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x' <= VV}) | size v == size tBounded}","ident":"hd","stop":{"line":314,"column":11}},{"start":{"line":314,"column":14},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x' <= VV}) | size v == size tBounded}","ident":"_","stop":{"line":314,"column":56}},{"start":{"line":314,"column":43},"ann":"{VV : a | VV == root t'\n          && VV == x'}","ident":"x'","stop":{"line":314,"column":45}},{"start":{"line":314,"column":46},"ann":"{VV : a | VV == root t\n          && VV == x}","ident":"x","stop":{"line":314,"column":47}},{"start":{"line":314,"column":48},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t <= VV}) | size v == size t\n                                                          && v == tBounded}","ident":"tBounded","stop":{"line":314,"column":56}},{"start":{"line":315,"column":6},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t'}","ident":"t'","stop":{"line":315,"column":8}},{"start":{"line":315,"column":10},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x' <= VV}) | size v == size tBounded\n                                                      && v == hd}","ident":"hd","stop":{"line":315,"column":12}},{"start":{"line":315,"column":13},"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | root t' <= VV})] | len v >= 0\n                                                             && sumSizeList v >= 0\n                                                             && v == ts'}","ident":"ts'","stop":{"line":315,"column":16}},{"start":{"line":328,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Heap a) -> x3:(Data.Heap.Binominal.Heap a) -> {VV : (Data.Heap.Binominal.Heap a) | heapSize VV == heapSize x2 + heapSize x3}","ident":"Data.Heap.Binominal.merge","stop":{"line":328,"column":6}},{"start":{"line":328,"column":31},"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {v : (Data.Heap.Binominal.Heap a) | unheap v == x1\n                                                                         && heapSize v == sumSizeList x1}","ident":"Data.Heap.Binominal.Heap","stop":{"line":328,"column":52}},{"start":{"line":328,"column":36},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList ts1 + sumSizeList ts2}","ident":"lq_anf$##7205759403792807097","stop":{"line":328,"column":52}},{"start":{"line":328,"column":44},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == ts1}","ident":"ts1","stop":{"line":328,"column":47}},{"start":{"line":328,"column":48},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == ts2}","ident":"ts2","stop":{"line":328,"column":51}},{"start":{"line":332,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:[(Data.Heap.Binominal.Tree a)] -> x3:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList x2 + sumSizeList x3}","ident":"Data.Heap.Binominal.merge'","stop":{"line":332,"column":7}},{"start":{"line":332,"column":8},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"ts1","stop":{"line":332,"column":11}},{"start":{"line":332,"column":17},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == ts1}","ident":"ts1","stop":{"line":332,"column":20}},{"start":{"line":333,"column":17},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0}","ident":"ds_d3ro","stop":{"line":333,"column":20}},{"start":{"line":335,"column":5},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == rank t1}","ident":"lq_anf$##7205759403792807081","stop":{"line":335,"column":12}},{"start":{"line":335,"column":10},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1}","ident":"t1","stop":{"line":335,"column":12}},{"start":{"line":335,"column":15},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == rank t2}","ident":"lq_anf$##7205759403792807082","stop":{"line":335,"column":22}},{"start":{"line":335,"column":20},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2}","ident":"t2","stop":{"line":335,"column":22}},{"start":{"line":335,"column":25},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1}","ident":"t1","stop":{"line":335,"column":27}},{"start":{"line":335,"column":30},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"lq_anf$##7205759403792807092","stop":{"line":335,"column":45}},{"start":{"line":335,"column":37},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == ts1'}","ident":"ts1'","stop":{"line":335,"column":41}},{"start":{"line":335,"column":42},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0}","ident":"ds_d3ro","stop":{"line":335,"column":45}},{"start":{"line":336,"column":5},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == rank t2}","ident":"lq_anf$##7205759403792807085","stop":{"line":336,"column":12}},{"start":{"line":336,"column":10},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2}","ident":"t2","stop":{"line":336,"column":12}},{"start":{"line":336,"column":15},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == rank t1}","ident":"lq_anf$##7205759403792807086","stop":{"line":336,"column":22}},{"start":{"line":336,"column":20},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1}","ident":"t1","stop":{"line":336,"column":22}},{"start":{"line":336,"column":25},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2}","ident":"t2","stop":{"line":336,"column":27}},{"start":{"line":336,"column":30},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList ts1 + sumSizeList ts2'}","ident":"lq_anf$##7205759403792807091","stop":{"line":336,"column":45}},{"start":{"line":336,"column":37},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == ts1}","ident":"ts1","stop":{"line":336,"column":40}},{"start":{"line":336,"column":41},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == ts2'}","ident":"ts2'","stop":{"line":336,"column":45}},{"start":{"line":337,"column":25},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Tree a) -> x3:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == size x2 + sumSizeList x3}","ident":"Data.Heap.Binominal.insert'","stop":{"line":337,"column":64}},{"start":{"line":337,"column":33},"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t1 + size t2}","ident":"lq_anf$##7205759403792807089","stop":{"line":337,"column":45}},{"start":{"line":337,"column":39},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1}","ident":"t1","stop":{"line":337,"column":41}},{"start":{"line":337,"column":42},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2}","ident":"t2","stop":{"line":337,"column":44}},{"start":{"line":337,"column":46},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList ts1' + sumSizeList ts2'}","ident":"lq_anf$##7205759403792807090","stop":{"line":337,"column":64}},{"start":{"line":337,"column":54},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == ts1'}","ident":"ts1'","stop":{"line":337,"column":58}},{"start":{"line":337,"column":59},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == ts2'}","ident":"ts2'","stop":{"line":337,"column":63}},{"start":{"line":353,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Heap a) -> {VV : [a]<\\x1 VV -> {VV : a | x1 <= VV}> | len VV == heapSize x2}","ident":"Data.Heap.Binominal.heapSort","stop":{"line":353,"column":9}},{"start":{"line":353,"column":22},"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | Set_emp (listElts v)\n                                            && len v == 0\n                                            && sumSizeList v == 0}","ident":"_","stop":{"line":353,"column":24}},{"start":{"line":355,"column":8},"ann":"a","ident":"minElt","stop":{"line":355,"column":14}},{"start":{"line":355,"column":16},"ann":"(Data.Heap.Binominal.Heap {VV : a | minElt <= VV\n                                    && VV >= minElt})","ident":"h'","stop":{"line":355,"column":18}},{"start":{"line":355,"column":22},"ann":"(a, (Data.Heap.Binominal.Heap {VV : a | fst x4 <= VV}))","ident":"_","stop":{"line":355,"column":34}},{"start":{"line":355,"column":33},"ann":"{v : (Data.Heap.Binominal.Heap a) | heapSize v >= 0}","ident":"ds_d3ti","stop":{"line":355,"column":34}},{"start":{"line":356,"column":3},"ann":"{VV : a | VV == minElt}","ident":"minElt","stop":{"line":356,"column":9}},{"start":{"line":356,"column":12},"ann":"{VV : [a]<\\x1 VV -> {VV : a | x1 <= VV}> | len VV == heapSize h'}","ident":"lq_anf$##7205759403792807173","stop":{"line":356,"column":23}},{"start":{"line":356,"column":21},"ann":"{v : (Data.Heap.Binominal.Heap {VV : a | minElt <= VV\n                                         && VV >= minElt}) | heapSize v >= 0\n                                                             && v == h'}","ident":"h'","stop":{"line":356,"column":23}},{"start":{"line":360,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:[a] -> {VV : [a]<\\x1 VV -> {VV : a | x1 <= VV}> | len VV == len x2}","ident":"Data.Heap.Binominal.sortUsingHeap","stop":{"line":360,"column":14}},{"start":{"line":360,"column":17},"ann":"x1:(Data.Heap.Binominal.Heap a) -> {v : [a]<\\x5 VV -> {VV : a | x5 <= VV}> | len v == heapSize x1}","ident":"lq_anf$##7205759403792807174","stop":{"line":360,"column":25}},{"start":{"line":360,"column":28},"ann":"x1:[a] -> {v : (Data.Heap.Binominal.Heap a) | heapSize v == len x1}","ident":"lq_anf$##7205759403792807175","stop":{"line":360,"column":36}}],"errors":[]}