{"status":"safe","types":{"114":{"7":{"ann":"{v : GHC.Types.Int | v == sumSizeList ts\n                     && v >= 0\n                     && len ts <= v}","ident":"sizets","row":114,"col":7},"28":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts}","ident":"ts","row":114,"col":28},"16":{"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {VV : GHC.Types.Int | VV == sumSizeList x1\n                                                           && VV >= 0\n                                                           && len x1 <= VV}","ident":"Data.Heap.Binominal.sumSizeList","row":114,"col":16}},"235":{"44":{"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | Set_emp (listElts v)\n                                            && len v == 0\n                                            && sumSizeList v == 0}","ident":"_","row":235,"col":44},"17":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"xs","row":235,"col":17},"1":{"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList x1}","ident":"Data.Heap.Binominal.reverseHeapList","row":235,"col":1},"41":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == xs}","ident":"xs","row":235,"col":41}},"149":{"14":{"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | Set_emp (listElts v)\n                                            && len v == 0\n                                            && sumSizeList v == 0}","ident":"_","row":149,"col":14},"1":{"ann":"forall a . {v : (Data.Heap.Binominal.Heap a) | heapSize v == 0}","ident":"Data.Heap.Binominal.empty","row":149,"col":1}},"271":{"12":{"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | x <= VV})] | sumSizeList v == sumSizeList ts'\n                                                       && len v >= 0\n                                                       && sumSizeList v >= 0\n                                                       && v == tl}","ident":"tl","row":271,"col":12},"6":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":271,"col":6},"9":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x <= VV}) | size v == size tBounded'\n                                                     && v == hd}","ident":"hd","row":271,"col":9}},"294":{"15":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == rank t2}","ident":"lq_anf$##7205759403792805128","row":294,"col":15},"37":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts1'}","ident":"ts1'","row":294,"col":37},"25":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1}","ident":"t1","row":294,"col":25},"30":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"lq_anf$##7205759403792805138","row":294,"col":30},"20":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2}","ident":"t2","row":294,"col":20},"5":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == rank t1}","ident":"lq_anf$##7205759403792805127","row":294,"col":5},"42":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0}","ident":"ds_d2W4","row":294,"col":42},"10":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1}","ident":"t1","row":294,"col":10}},"263":{"7":{"ann":"{VV : a | VV == root t}","ident":"x","row":263,"col":7},"16":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":263,"col":16},"11":{"ann":"{VV : a | VV == root t}","ident":"_","row":263,"col":11}},"106":{"28":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts}","ident":"ts","row":106,"col":28},"19":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"ts","row":106,"col":19},"17":{"ann":"(Data.Heap.Binominal.Tree a)","ident":"t","row":106,"col":17},"1":{"ann":"forall a .\nx1:{VV : GHC.Types.Int | VV >= 0} -> {VV : (Data.Heap.Binominal.Tree a) | size VV <= x1} -> [{t : (Data.Heap.Binominal.Tree a) | size t <= x1}] -> [{t : (Data.Heap.Binominal.Tree a) | size t <= x1}]","ident":"Data.Heap.Binominal.consTreeLemma","row":106,"col":1},"24":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":106,"col":24}},"255":{"36":{"ann":"((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | root (fst x9) <= VV})])","ident":"lq_anf$##7205759403792805197","row":255,"col":36},"63":{"ann":"{v : (Data.Heap.Binominal.Heap a) | 0 < len (unheap v)\n                                    && heapSize v >= 0\n                                    && v == h}","ident":"h","row":255,"col":63},"47":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | 0 < len v\n                                      && sumSizeList v == heapSize h}","ident":"lq_anf$##7205759403792805196","row":255,"col":47}},"129":{"1":{"ann":"forall a b .\nx1:a -> (Data.Heap.Binominal.Tree {VV : a | x1 <= VV}) -> b -> b","ident":"Data.Heap.Binominal.assertBoundedTree","row":129,"col":1},"23":{"ann":"a","ident":"x","row":129,"col":23}},"112":{"7":{"ann":"[{v : (Data.Heap.Binominal.Tree a) | size v <= sumSizeList ts}]","ident":"ih","row":112,"col":7},"36":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts}","ident":"ts","row":112,"col":36},"12":{"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> [{t : (Data.Heap.Binominal.Tree a) | size t <= sumSizeList x1}]","ident":"Data.Heap.Binominal.boundedSizeSubtreeLemma","row":112,"col":12}},"270":{"14":{"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | x <= VV})] | sumSizeList v == sumSizeList ts'}","ident":"_","row":270,"col":14},"49":{"ann":"{VV : a | VV == root t'\n          && VV == x'}","ident":"x'","row":270,"col":49},"52":{"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | root t' <= VV})] | len v >= 0\n                                                             && sumSizeList v >= 0\n                                                             && v == ts'}","ident":"ts'","row":270,"col":52},"47":{"ann":"{VV : a | VV == root t\n          && VV == x}","ident":"x","row":270,"col":47},"9":{"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | x <= VV})] | sumSizeList v == sumSizeList ts'}","ident":"tl","row":270,"col":9}},"137":{"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Tree a) -> x3:(Data.Heap.Binominal.Tree a) -> {v : (Data.Heap.Binominal.Tree a) | size v == size x2 + size x3}","ident":"Data.Heap.Binominal.link","row":137,"col":1},"59":{"ann":"(Data.Heap.Binominal.Tree a)","ident":"t2","row":137,"col":59},"6":{"ann":"(Data.Heap.Binominal.Tree a)","ident":"t1","row":137,"col":6}},"287":{"48":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts2}","ident":"ts2","row":287,"col":48},"31":{"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {v : (Data.Heap.Binominal.Heap a) | unheap v == x1\n                                                                         && heapSize v == sumSizeList x1}","ident":"Data.Heap.Binominal.Heap","row":287,"col":31},"36":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList ts1 + sumSizeList ts2}","ident":"lq_anf$##7205759403792805143","row":287,"col":36},"44":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts1}","ident":"ts1","row":287,"col":44},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Heap a) -> x3:(Data.Heap.Binominal.Heap a) -> {VV : (Data.Heap.Binominal.Heap a) | heapSize VV == heapSize x2 + heapSize x3}","ident":"Data.Heap.Binominal.merge","row":287,"col":1}},"269":{"48":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t' <= VV}) | size v == size t'\n                                                           && v == tBounded'}","ident":"tBounded'","row":269,"col":48},"43":{"ann":"{VV : a | VV == root t\n          && VV == x}","ident":"x","row":269,"col":43},"14":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x <= VV}) | size v == size tBounded'}","ident":"_","row":269,"col":14},"45":{"ann":"{VV : a | VV == root t'\n          && VV == x'}","ident":"x'","row":269,"col":45},"9":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x <= VV}) | size v == size tBounded'}","ident":"hd","row":269,"col":9}},"85":{"30":{"ann":"a","ident":"x","row":85,"col":30},"1":{"ann":"forall a .\nx1:a -> x2:{VV : a | x1 <= VV} -> x3:(Data.Heap.Binominal.Tree {VV : a | x2 <= VV}) -> {VV : (Data.Heap.Binominal.Tree {VV : a | x1 <= VV}) | size VV == size x3}","ident":"Data.Heap.Binominal.boundedTreeTransitivityLemma","row":85,"col":1},"34":{"ann":"(Data.Heap.Binominal.Tree {VV : a | y <= VV})","ident":"tree","row":85,"col":34},"32":{"ann":"{VV : a | x <= VV}","ident":"y","row":85,"col":32}},"173":{"17":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":173,"col":17},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Tree a) -> x3:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == size x2 + sumSizeList x3}","ident":"Data.Heap.Binominal.insert'","row":173,"col":1},"16":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | Set_emp (listElts v)\n                                      && len v == 0\n                                      && sumSizeList v == 0}","ident":"lq_anf$##7205759403792805109","row":173,"col":16},"9":{"ann":"(Data.Heap.Binominal.Tree a)","ident":"t","row":173,"col":9}},"115":{"48":{"ann":"{v : GHC.Types.Int | v == sumSizeList ts\n                     && v >= 0\n                     && len ts <= v\n                     && v == sizets}","ident":"sizets","row":115,"col":48},"7":{"ann":"[{v : (Data.Heap.Binominal.Tree a) | size v <= sizetts}]","ident":"refinedSubtrees","row":115,"col":7},"25":{"ann":"[{v : (Data.Heap.Binominal.Tree a) | size v <= sizetts}]","ident":"_","row":115,"col":25},"58":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == size t + sumSizeList ts\n                     && sumSizeList ts < v\n                     && v == sizetts}","ident":"sizetts","row":115,"col":58},"55":{"ann":"{v : [{v : (Data.Heap.Binominal.Tree a) | size v <= sumSizeList ts}] | len v >= 0\n                                                                       && sumSizeList v >= 0\n                                                                       && v == ih}","ident":"ih","row":115,"col":55}},"50":{"22":{"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {VV : GHC.Types.Int | VV == sumSizeList x1\n                                                           && VV >= 0\n                                                           && len x1 <= VV}","ident":"Data.Heap.Binominal.sumSizeList","row":50,"col":22},"1":{"ann":"forall a .\nx1:(Data.Heap.Binominal.Heap a) -> {VV : GHC.Types.Int | VV == heapSize x1\n                                                         && VV >= 0\n                                                         && len (unheap x1) <= VV}","ident":"Data.Heap.Binominal.heapSize","row":50,"col":1},"34":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts}","ident":"ts","row":50,"col":34}},"239":{"29":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == acc}","ident":"acc","row":239,"col":29},"1":{"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> x2:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList x1 + sumSizeList x2}","ident":"Data.Heap.Binominal.reverseHeapListAux","row":239,"col":1},"23":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"acc","row":239,"col":23}},"145":{"14":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805099","row":145,"col":14},"17":{"ann":"a","ident":"ds_d2VD","row":145,"col":17},"35":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0}","ident":"ds_d2VE","row":145,"col":35},"40":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805102","row":145,"col":40},"20":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | head v == t1BoundedByX2}","ident":"lq_anf$##7205759403792805101","row":145,"col":20},"41":{"ann":"{v : GHC.Types.Int | 1 <= v}","ident":"ds_d2VB","row":145,"col":41},"11":{"ann":"{v : GHC.Types.Int | v >= 0}","ident":"ds_d2VC","row":145,"col":11},"47":{"ann":"{v : GHC.Types.Int | 1 <= v}","ident":"ds_d2VF","row":145,"col":47},"21":{"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t1BoundedByX1\n                                    && v == t1BoundedByX2}","ident":"t1BoundedByX2","row":145,"col":21},"10":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805100","row":145,"col":10}},"44":{"1":{"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {VV : GHC.Types.Int | VV == sumSizeList x1\n                                                           && VV >= 0\n                                                           && len x1 <= VV}","ident":"Data.Heap.Binominal.sumSizeList","row":44,"col":1},"18":{"ann":"{v : GHC.Prim.Int# | v == 0}","ident":"lq_anf$##7205759403792805086","row":44,"col":18}},"264":{"7":{"ann":"{VV : a | VV == root t'}","ident":"x'","row":264,"col":7},"12":{"ann":"{VV : a | VV == root t'}","ident":"_","row":264,"col":12},"17":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t'}","ident":"t'","row":264,"col":17}},"157":{"28":{"ann":"{VV : a | VV == x}","ident":"x","row":157,"col":28},"30":{"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | Set_emp (listElts v)\n                                            && len v == 0\n                                            && sumSizeList v == 0}","ident":"_","row":157,"col":30},"1":{"ann":"forall a .\na -> {v : (Data.Heap.Binominal.Heap a) | heapSize v == 1}","ident":"Data.Heap.Binominal.singleton","row":157,"col":1},"26":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805166","row":157,"col":26},"20":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"lq_anf$##7205759403792805172","row":157,"col":20},"11":{"ann":"a","ident":"x","row":157,"col":11},"33":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805169","row":157,"col":33},"21":{"ann":"{v : (Data.Heap.Binominal.Tree a) | root v == x}","ident":"lq_anf$##7205759403792805170","row":157,"col":21}},"175":{"28":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0}","ident":"ds_d2VI","row":175,"col":28},"14":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == rank t'}","ident":"lq_anf$##7205759403792805111","row":175,"col":14},"19":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t'}","ident":"t'","row":175,"col":19},"5":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == rank t}","ident":"lq_anf$##7205759403792805110","row":175,"col":5},"24":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":175,"col":24},"10":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":175,"col":10}},"113":{"7":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == size t + sumSizeList ts\n                     && sumSizeList ts < v}","ident":"sizetts","row":113,"col":7},"36":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts}","ident":"ts","row":113,"col":36},"17":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == size t + sumSizeList ts\n                     && sumSizeList ts < v}","ident":"_","row":113,"col":17},"34":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":113,"col":34}},"182":{"14":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805176","row":182,"col":14},"22":{"ann":"{v : [a] | sumSizeList v >= 0\n           && len v >= 0\n           && v == xs}","ident":"xs","row":182,"col":22},"18":{"ann":"{v : GHC.Types.Int | v == len xs\n                     && v >= 0}","ident":"lq_anf$##7205759403792805177","row":182,"col":18}},"254":{"12":{"ann":"{VV : (Data.Heap.Binominal.Heap a) | 0 < len (unheap VV)}","ident":"h","row":254,"col":12},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:{VV : (Data.Heap.Binominal.Heap a) | 0 < len (unheap VV)} -> {v : (a, (Data.Heap.Binominal.Heap {VV : a | fst v <= VV})) | 1 + heapSize (snd v) == heapSize x2}","ident":"Data.Heap.Binominal.deleteMin2","row":254,"col":1}},"169":{"36":{"ann":"{v : (Data.Heap.Binominal.Tree a) | root v == x}","ident":"lq_anf$##7205759403792805121","row":169,"col":36},"49":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805120","row":169,"col":49},"22":{"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {v : (Data.Heap.Binominal.Heap a) | unheap v == x1\n                                                                         && heapSize v == sumSizeList x1}","ident":"Data.Heap.Binominal.Heap","row":169,"col":22},"44":{"ann":"{VV : a | VV == x}","ident":"x","row":169,"col":44},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\na -> x3:(Data.Heap.Binominal.Heap a) -> {v : (Data.Heap.Binominal.Heap a) | 1 + heapSize x3 == heapSize v}","ident":"Data.Heap.Binominal.insert","row":169,"col":1},"52":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts}","ident":"ts","row":169,"col":52},"46":{"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | Set_emp (listElts v)\n                                            && len v == 0\n                                            && sumSizeList v == 0}","ident":"_","row":169,"col":46},"27":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"lq_anf$##7205759403792805122","row":169,"col":27},"8":{"ann":"a","ident":"x","row":169,"col":8},"42":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805117","row":169,"col":42}},"116":{"25":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":116,"col":25},"17":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == size t + sumSizeList ts\n                     && sumSizeList ts < v\n                     && v == sizetts}","ident":"sizetts","row":116,"col":17},"27":{"ann":"{v : [{v : (Data.Heap.Binominal.Tree a) | size v <= sizetts}] | len v >= 0\n                                                                && sumSizeList v >= 0\n                                                                && v == refinedSubtrees}","ident":"refinedSubtrees","row":116,"col":27}},"314":{"22":{"ann":"(a, (Data.Heap.Binominal.Heap {VV : a | fst x4 <= VV}))","ident":"_","row":314,"col":22},"16":{"ann":"(Data.Heap.Binominal.Heap {VV : a | minElt <= VV\n                                    && VV >= minElt})","ident":"h'","row":314,"col":16},"8":{"ann":"a","ident":"minElt","row":314,"col":8},"33":{"ann":"{v : (Data.Heap.Binominal.Heap a) | heapSize v >= 0}","ident":"ds_d2XY","row":314,"col":33}},"248":{"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:{VV : (Data.Heap.Binominal.Heap a) | 0 < len (unheap VV)} -> {v : (Data.Heap.Binominal.Heap a) | 1 + heapSize v == heapSize x2}","ident":"Data.Heap.Binominal.deleteMin","row":248,"col":1},"11":{"ann":"{VV : (Data.Heap.Binominal.Heap a) | 0 < len (unheap VV)}","ident":"h","row":248,"col":11}},"273":{"48":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t <= VV}) | size v == size t\n                                                          && v == tBounded}","ident":"tBounded","row":273,"col":48},"43":{"ann":"{VV : a | VV == root t'\n          && VV == x'}","ident":"x'","row":273,"col":43},"14":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x' <= VV}) | size v == size tBounded}","ident":"_","row":273,"col":14},"46":{"ann":"{VV : a | VV == root t\n          && VV == x}","ident":"x","row":273,"col":46},"9":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x' <= VV}) | size v == size tBounded}","ident":"hd","row":273,"col":9}},"187":{"28":{"ann":"{v : (Data.Heap.Binominal.Heap a) | heapSize v == len xs}","ident":"lq_anf$##7205759403792805164","row":187,"col":28},"19":{"ann":"{v : (GHC.Classes.Ord a) | v == $dOrd_a2H4}","ident":"$dOrd_a2H4","row":187,"col":19},"26":{"ann":"{VV : a | VV == x}","ident":"x","row":187,"col":26},"38":{"ann":"{v : [a] | len v >= 0\n           && sumSizeList v >= 0\n           && v == xs}","ident":"xs","row":187,"col":38}},"45":{"43":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && v == xs}","ident":"xs","row":45,"col":43},"31":{"ann":"{v : GHC.Types.Int | v == sumSizeList xs\n                     && v >= 0\n                     && len xs <= v}","ident":"lq_anf$##7205759403792805088","row":45,"col":31},"22":{"ann":"{v : GHC.Types.Int | 1 <= v\n                     && v == 1 + sumSizeList (subtrees x)\n                     && v == size x}","ident":"lq_anf$##7205759403792805087","row":45,"col":22},"27":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == x}","ident":"x","row":45,"col":27}},"292":{"17":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0}","ident":"ds_d2W4","row":292,"col":17}},"265":{"7":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t <= VV}) | size v == size t}","ident":"tBounded","row":265,"col":7},"18":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t <= VV}) | size v == size t}","ident":"_","row":265,"col":18},"46":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":265,"col":46}},"89":{"36":{"ann":"{VV : a | x <= VV}","ident":"y","row":89,"col":36},"1":{"ann":"forall a .\nx1:a -> x2:{VV : a | x1 <= VV} -> x3:[(Data.Heap.Binominal.Tree {VV : a | x2 <= VV})] -> {v : [(Data.Heap.Binominal.Tree {VV : a | x1 <= VV})] | sumSizeList v == sumSizeList x3}","ident":"Data.Heap.Binominal.boundedTreeListTransitivityLemma","row":89,"col":1},"34":{"ann":"a","ident":"x","row":89,"col":34},"38":{"ann":"[(Data.Heap.Binominal.Tree {VV : a | y <= VV})]","ident":"ts","row":89,"col":38}},"1":{"1":{"ann":"GHC.Types.Module","ident":"Data.Heap.Binominal.$trModule","row":1,"col":1}},"144":{"25":{"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t1BoundedByX1}","ident":"_","row":144,"col":25},"57":{"ann":"a","ident":"ds_d2Vz","row":144,"col":57},"60":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1BoundedByX1}","ident":"t1BoundedByX1","row":144,"col":60},"9":{"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t1BoundedByX1}","ident":"t1BoundedByX2","row":144,"col":9},"54":{"ann":"a","ident":"ds_d2VD","row":144,"col":54}},"141":{"14":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805104","row":141,"col":14},"17":{"ann":"a","ident":"ds_d2Vz","row":141,"col":17},"35":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0}","ident":"ds_d2VA","row":141,"col":35},"40":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805107","row":141,"col":40},"20":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | head v == t2BoundedByX1}","ident":"lq_anf$##7205759403792805106","row":141,"col":20},"41":{"ann":"{v : GHC.Types.Int | 1 <= v}","ident":"ds_d2VB","row":141,"col":41},"11":{"ann":"{v : GHC.Types.Int | v >= 0}","ident":"ds_d2Vy","row":141,"col":11},"47":{"ann":"{v : GHC.Types.Int | 1 <= v}","ident":"ds_d2VF","row":141,"col":47},"21":{"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t2BoundedByX2\n                                    && v == t2BoundedByX1}","ident":"t2BoundedByX1","row":141,"col":21},"10":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805105","row":141,"col":10}},"95":{"15":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | tail v == xs\n                                      && head v == x\n                                      && listElts v == Set_cup (Set_sng x) (listElts xs)\n                                      && len v == 1 + len xs\n                                      && sumSizeList v == size x + sumSizeList xs}","ident":"lq_anf$##7205759403792805159","row":95,"col":15},"16":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == x}","ident":"x","row":95,"col":16},"20":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == xs}","ident":"xs","row":95,"col":20},"3":{"ann":"{v : GHC.Types.Int | v >= 0}","ident":"lq_anf$##7205759403792805160","row":95,"col":3}},"260":{"22":{"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | Set_emp (listElts v)\n                                            && len v == 0\n                                            && sumSizeList v == 0}","ident":"_","row":260,"col":22},"19":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":260,"col":19},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:{v : [(Data.Heap.Binominal.Tree a)] | 0 < len v} -> {v : ((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | root (fst v) <= VV})]) | size (fst v) + sumSizeList (snd v) == sumSizeList x2}","ident":"Data.Heap.Binominal.deleteMin'","row":260,"col":1},"18":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | Set_emp (listElts v)\n                                      && len v == 0\n                                      && sumSizeList v == 0}","ident":"lq_anf$##7205759403792805151","row":260,"col":18}},"249":{"31":{"ann":"((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | root (fst x9) <= VV})])","ident":"lq_anf$##7205759403792805191","row":249,"col":31},"58":{"ann":"{v : (Data.Heap.Binominal.Heap a) | 0 < len (unheap v)\n                                    && heapSize v >= 0\n                                    && v == h}","ident":"h","row":249,"col":58},"42":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | 0 < len v\n                                      && sumSizeList v == heapSize h}","ident":"lq_anf$##7205759403792805190","row":249,"col":42}},"186":{"15":{"ann":"forall a . {v : (Data.Heap.Binominal.Heap a) | heapSize v == 0}","ident":"_","row":186,"col":15},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:[a] -> {v : (Data.Heap.Binominal.Heap a) | heapSize v == len x2}","ident":"Data.Heap.Binominal.fromList","row":186,"col":1}},"250":{"16":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList ts1}","ident":"lq_anf$##7205759403792805194","row":250,"col":16},"8":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"lq_anf$##7205759403792805195","row":250,"col":8},"33":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts1}","ident":"ts1","row":250,"col":33},"38":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts2}","ident":"ts2","row":250,"col":38}},"153":{"19":{"ann":"{v : (Data.Heap.Binominal.Heap a) | heapSize v >= 0\n                                    && v == h}","ident":"h","row":153,"col":19},"1":{"ann":"forall a .\nx1:(Data.Heap.Binominal.Heap a) -> {v : GHC.Types.Bool | v <=> heapSize x1 == 0}","ident":"Data.Heap.Binominal.null","row":153,"col":1},"24":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805092","row":153,"col":24},"6":{"ann":"(Data.Heap.Binominal.Heap a)","ident":"h","row":153,"col":6},"10":{"ann":"{v : GHC.Types.Int | v == heapSize h\n                     && v >= 0\n                     && len (unheap h) <= v}","ident":"lq_anf$##7205759403792805090","row":153,"col":10}},"315":{"12":{"ann":"{VV : [a]<\\x1 VV -> {VV : a | x1 <= VV}> | len VV == heapSize h'}","ident":"lq_anf$##7205759403792805205","row":315,"col":12},"3":{"ann":"{VV : a | VV == minElt}","ident":"minElt","row":315,"col":3},"21":{"ann":"{v : (Data.Heap.Binominal.Heap {VV : a | minElt <= VV\n                                         && VV >= minElt}) | heapSize v >= 0\n                                                             && v == h'}","ident":"h'","row":315,"col":21}},"266":{"7":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t' <= VV}) | size v == size t'}","ident":"tBounded'","row":266,"col":7},"19":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t' <= VV}) | size v == size t'}","ident":"_","row":266,"col":19},"47":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t'}","ident":"t'","row":266,"col":47}},"244":{"1":{"ann":"forall a .\nx1:{VV : (Data.Heap.Binominal.Heap a) | 0 < len (unheap VV)} -> {v : [(Data.Heap.Binominal.Tree a)] | 0 < len v\n                                                                                                      && sumSizeList v == heapSize x1}","ident":"Data.Heap.Binominal.unheapNonempty","row":244,"col":1},"34":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts}","ident":"lq_anf$##7205759403792805182","row":244,"col":34}},"138":{"5":{"ann":"a","ident":"ds_d2Vz","row":138,"col":5},"11":{"ann":"a","ident":"ds_d2VD","row":138,"col":11}},"291":{"17":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts1}","ident":"ts1","row":291,"col":17},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:[(Data.Heap.Binominal.Tree a)] -> x3:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList x2 + sumSizeList x3}","ident":"Data.Heap.Binominal.merge'","row":291,"col":1},"8":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"ts1","row":291,"col":8}},"93":{"1":{"ann":"forall a .\nx1:(Data.Heap.Binominal.Tree a) -> x2:[(Data.Heap.Binominal.Tree a)] -> {VV : GHC.Types.Int | VV >= 0\n                                                                                              && VV == size x1 + sumSizeList x2\n                                                                                              && sumSizeList x2 < VV}","ident":"Data.Heap.Binominal.sublistSizeLemma","row":93,"col":1},"18":{"ann":"(Data.Heap.Binominal.Tree a)","ident":"x","row":93,"col":18},"20":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"xs","row":93,"col":20}},"94":{"15":{"ann":"{v : GHC.Types.Int | 1 <= v\n                     && v == 1 + sumSizeList (subtrees x)\n                     && v == size x}","ident":"lq_anf$##7205759403792805156","row":94,"col":15},"20":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == x}","ident":"x","row":94,"col":20},"11":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805155","row":94,"col":11},"3":{"ann":"GHC.Types.Int -> GHC.Types.Int","ident":"lq_anf$##7205759403792805158","row":94,"col":3},"10":{"ann":"GHC.Types.Bool","ident":"lq_anf$##7205759403792805157","row":94,"col":10}},"140":{"25":{"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t2BoundedByX2}","ident":"_","row":140,"col":25},"57":{"ann":"a","ident":"ds_d2VD","row":140,"col":57},"60":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2BoundedByX2}","ident":"t2BoundedByX2","row":140,"col":60},"9":{"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t2BoundedByX2}","ident":"t2BoundedByX1","row":140,"col":9},"54":{"ann":"a","ident":"ds_d2Vz","row":140,"col":54}},"296":{"25":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Tree a) -> x3:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == size x2 + sumSizeList x3}","ident":"Data.Heap.Binominal.insert'","row":296,"col":25},"59":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts2'}","ident":"ts2'","row":296,"col":59},"39":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1}","ident":"t1","row":296,"col":39},"46":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList ts1' + sumSizeList ts2'}","ident":"lq_anf$##7205759403792805136","row":296,"col":46},"33":{"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t1 + size t2}","ident":"lq_anf$##7205759403792805135","row":296,"col":33},"42":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2}","ident":"t2","row":296,"col":42},"54":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts1'}","ident":"ts1'","row":296,"col":54}},"80":{"43":{"ann":"{v : GHC.Types.Int | 1 <= v}","ident":"ds_d2Vb","row":80,"col":43},"14":{"ann":"{v : GHC.Types.Int | v >= 0}","ident":"ds_d2V8","row":80,"col":14},"22":{"ann":"a","ident":"ds_d2V9","row":80,"col":22},"34":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0}","ident":"ds_d2Va","row":80,"col":34},"3":{"ann":"forall a .\nx1:{v : GHC.Types.Int | v >= 0} -> x2:a -> x3:[(Data.Heap.Binominal.Tree {VV : a | x2 <= VV})] -> x4:{v : GHC.Types.Int | 1 <= v\n                                                                                                                          && v == 1 + sumSizeList x3} -> {v : (Data.Heap.Binominal.Tree a) | size v == x4\n                                                                                                                                                                                             && subtrees v == x3\n                                                                                                                                                                                             && root v == x2\n                                                                                                                                                                                             && rank v == x1}","ident":"Data.Heap.Binominal.Node","row":80,"col":3}},"176":{"44":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts'}","ident":"ts'","row":176,"col":44},"40":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t'}","ident":"t'","row":176,"col":40},"38":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":176,"col":38},"24":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Tree a) -> x3:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == size x2 + sumSizeList x3}","ident":"Data.Heap.Binominal.insert'","row":176,"col":24},"32":{"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t + size t'}","ident":"lq_anf$##7205759403792805114","row":176,"col":32}},"110":{"30":{"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | Set_emp (listElts v)\n                                            && len v == 0\n                                            && sumSizeList v == 0}","ident":"_","row":110,"col":30},"1":{"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> [{t : (Data.Heap.Binominal.Tree a) | size t <= sumSizeList x1}]","ident":"Data.Heap.Binominal.boundedSizeSubtreeLemma","row":110,"col":1}},"312":{"22":{"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | Set_emp (listElts v)\n                                            && len v == 0\n                                            && sumSizeList v == 0}","ident":"_","row":312,"col":22},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Heap a) -> {VV : [a]<\\x1 VV -> {VV : a | x1 <= VV}> | len VV == heapSize x2}","ident":"Data.Heap.Binominal.heapSort","row":312,"col":1}},"181":{"1":{"ann":"forall a .\nx1:[a] -> {VV : GHC.Types.Int | VV == len x1\n                                && VV >= 0}","ident":"Data.Heap.Binominal.len","row":181,"col":1},"10":{"ann":"{v : GHC.Prim.Int# | v == 0}","ident":"lq_anf$##7205759403792805174","row":181,"col":10}},"139":{"25":{"ann":"(Data.Heap.Binominal.Tree a)","ident":"_","row":139,"col":25},"53":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2}","ident":"lq_anf$##7205759403792805095","row":139,"col":53},"9":{"ann":"(Data.Heap.Binominal.Tree a)","ident":"t2BoundedByX2","row":139,"col":9}},"267":{"6":{"ann":"{VV : a | VV == root t\n          && VV == x}","ident":"x","row":267,"col":6},"10":{"ann":"{VV : a | VV == root t'\n          && VV == x'}","ident":"x'","row":267,"col":10}},"102":{"1":{"ann":"forall a .\nx1:{VV : GHC.Types.Int | VV >= 0} -> [{t : (Data.Heap.Binominal.Tree a) | size t <= x1}] -> x3:{VV : GHC.Types.Int | VV >= 0\n                                                                                                                     && x1 <= VV} -> [{t : (Data.Heap.Binominal.Tree a) | size t <= x3}]","ident":"Data.Heap.Binominal.subtreeTransitiveLemma","row":102,"col":1},"26":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"ts","row":102,"col":26}},"319":{"28":{"ann":"x1:[a] -> {v : (Data.Heap.Binominal.Heap a) | heapSize v == len x1}","ident":"lq_anf$##7205759403792805207","row":319,"col":28},"17":{"ann":"x1:(Data.Heap.Binominal.Heap a) -> {v : [a]<\\x5 VV -> {VV : a | x5 <= VV}> | len v == heapSize x1}","ident":"lq_anf$##7205759403792805206","row":319,"col":17},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:[a] -> {VV : [a]<\\x1 VV -> {VV : a | x1 <= VV}> | len VV == len x2}","ident":"Data.Heap.Binominal.sortUsingHeap","row":319,"col":1}},"79":{"1":{"ann":"forall a .\nx1:(Data.Heap.Binominal.Tree a) -> {VV : (Data.Heap.Binominal.Tree {VV : a | root x1 <= VV}) | size VV == size x1}","ident":"Data.Heap.Binominal.treeIsBoundedByItsRootLemma","row":79,"col":1}},"143":{"25":{"ann":"(Data.Heap.Binominal.Tree a)","ident":"_","row":143,"col":25},"53":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1}","ident":"lq_anf$##7205759403792805094","row":143,"col":53},"9":{"ann":"(Data.Heap.Binominal.Tree a)","ident":"t1BoundedByX1","row":143,"col":9}},"240":{"56":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == x}","ident":"x","row":240,"col":56},"52":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == xs}","ident":"xs","row":240,"col":52},"58":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == acc}","ident":"acc","row":240,"col":58},"55":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | tail v == acc\n                                      && head v == x\n                                      && listElts v == Set_cup (Set_sng x) (listElts acc)\n                                      && len v == 1 + len acc\n                                      && sumSizeList v == size x + sumSizeList acc}","ident":"lq_anf$##7205759403792805179","row":240,"col":55},"33":{"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> x2:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList x1 + sumSizeList x2}","ident":"Data.Heap.Binominal.reverseHeapListAux","row":240,"col":33}},"295":{"15":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == rank t1}","ident":"lq_anf$##7205759403792805132","row":295,"col":15},"37":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts1}","ident":"ts1","row":295,"col":37},"25":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2}","ident":"t2","row":295,"col":25},"30":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList ts1 + sumSizeList ts2'}","ident":"lq_anf$##7205759403792805137","row":295,"col":30},"20":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1}","ident":"t1","row":295,"col":20},"5":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == rank t2}","ident":"lq_anf$##7205759403792805131","row":295,"col":5},"41":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts2'}","ident":"ts2'","row":295,"col":41},"10":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2}","ident":"t2","row":295,"col":10}},"262":{"19":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:{v : [(Data.Heap.Binominal.Tree a)] | 0 < len v} -> {v : ((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | root (fst v) <= VV})]) | size (fst v) + sumSizeList (snd v) == sumSizeList x2}","ident":"Data.Heap.Binominal.deleteMin'","row":262,"col":19},"12":{"ann":"{VV : [(Data.Heap.Binominal.Tree {VV : a | root t' <= VV})] | len VV >= 0}","ident":"ts'","row":262,"col":12},"30":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0}","ident":"ds_d2X9","row":262,"col":30},"8":{"ann":"(Data.Heap.Binominal.Tree a)","ident":"t'","row":262,"col":8}},"125":{"1":{"ann":"forall a . {v : GHC.Types.Bool | v} -> a -> a","ident":"Data.Heap.Binominal.assert","row":125,"col":1},"10":{"ann":"a","ident":"x","row":125,"col":10}},"229":{"37":{"ann":"forall a .\nx1:{v : (Data.Heap.Binominal.Heap a) | 0 < len (unheap v)} -> {v : [(Data.Heap.Binominal.Tree a)] | 0 < len v\n                                                                                                    && sumSizeList v == heapSize x1}","ident":"_","row":229,"col":37},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\n{VV : (Data.Heap.Binominal.Heap a) | 0 < len (unheap VV)} -> a","ident":"Data.Heap.Binominal.minimum","row":229,"col":1},"18":{"ann":"forall a b . x1:(a, b) -> {VV : a | VV == fst x1}","ident":"_","row":229,"col":18},"11":{"ann":"forall a .\nx1:(Data.Heap.Binominal.Tree a) -> {VV : a | VV == root x1}","ident":"_","row":229,"col":11},"24":{"ann":"x1:{v : [(Data.Heap.Binominal.Tree a)] | 0 < len v} -> {v : ((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | root (fst x15) <= VV})]) | size (fst v) + sumSizeList (snd v) == sumSizeList x1}","ident":"lq_anf$##7205759403792805186","row":229,"col":24}},"274":{"13":{"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | root t' <= VV})] | len v >= 0\n                                                             && sumSizeList v >= 0\n                                                             && v == ts'}","ident":"ts'","row":274,"col":13},"6":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t'}","ident":"t'","row":274,"col":6},"10":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x' <= VV}) | size v == size tBounded\n                                                      && v == hd}","ident":"hd","row":274,"col":10}},"256":{"25":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList ts1}","ident":"lq_anf$##7205759403792805200","row":256,"col":25},"12":{"ann":"(Data.Heap.Binominal.Heap a)","ident":"lq_anf$##7205759403792805202","row":256,"col":12},"17":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"lq_anf$##7205759403792805201","row":256,"col":17},"4":{"ann":"{VV : a | VV == minElt}","ident":"minElt","row":256,"col":4},"47":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts2}","ident":"ts2","row":256,"col":47},"42":{"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | minElt <= VV})] | len v >= 0\n                                                            && sumSizeList v >= 0\n                                                            && v == ts1}","ident":"ts1","row":256,"col":42}},"133":{"1":{"ann":"forall a b .\nx1:a -> [(Data.Heap.Binominal.Tree {VV : a | x1 <= VV})] -> b -> b","ident":"Data.Heap.Binominal.assertBoundedTreeList","row":133,"col":1},"27":{"ann":"a","ident":"x","row":133,"col":27}}},"sptypes":[{"start":{"line":1,"column":1},"ann":"GHC.Types.Module","ident":"Data.Heap.Binominal.$trModule","stop":{"line":1,"column":1}},{"start":{"line":44,"column":1},"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {VV : GHC.Types.Int | VV == sumSizeList x1\n                                                           && VV >= 0\n                                                           && len x1 <= VV}","ident":"Data.Heap.Binominal.sumSizeList","stop":{"line":44,"column":12}},{"start":{"line":44,"column":18},"ann":"{v : GHC.Prim.Int# | v == 0}","ident":"lq_anf$##7205759403792805086","stop":{"line":44,"column":19}},{"start":{"line":45,"column":22},"ann":"{v : GHC.Types.Int | 1 <= v\n                     && v == 1 + sumSizeList (subtrees x)\n                     && v == size x}","ident":"lq_anf$##7205759403792805087","stop":{"line":45,"column":28}},{"start":{"line":45,"column":27},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == x}","ident":"x","stop":{"line":45,"column":28}},{"start":{"line":45,"column":31},"ann":"{v : GHC.Types.Int | v == sumSizeList xs\n                     && v >= 0\n                     && len xs <= v}","ident":"lq_anf$##7205759403792805088","stop":{"line":45,"column":45}},{"start":{"line":45,"column":43},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && v == xs}","ident":"xs","stop":{"line":45,"column":45}},{"start":{"line":50,"column":1},"ann":"forall a .\nx1:(Data.Heap.Binominal.Heap a) -> {VV : GHC.Types.Int | VV == heapSize x1\n                                                         && VV >= 0\n                                                         && len (unheap x1) <= VV}","ident":"Data.Heap.Binominal.heapSize","stop":{"line":50,"column":9}},{"start":{"line":50,"column":22},"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {VV : GHC.Types.Int | VV == sumSizeList x1\n                                                           && VV >= 0\n                                                           && len x1 <= VV}","ident":"Data.Heap.Binominal.sumSizeList","stop":{"line":50,"column":36}},{"start":{"line":50,"column":34},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts}","ident":"ts","stop":{"line":50,"column":36}},{"start":{"line":79,"column":1},"ann":"forall a .\nx1:(Data.Heap.Binominal.Tree a) -> {VV : (Data.Heap.Binominal.Tree {VV : a | root x1 <= VV}) | size VV == size x1}","ident":"Data.Heap.Binominal.treeIsBoundedByItsRootLemma","stop":{"line":79,"column":28}},{"start":{"line":80,"column":3},"ann":"forall a .\nx1:{v : GHC.Types.Int | v >= 0} -> x2:a -> x3:[(Data.Heap.Binominal.Tree {VV : a | x2 <= VV})] -> x4:{v : GHC.Types.Int | 1 <= v\n                                                                                                                          && v == 1 + sumSizeList x3} -> {v : (Data.Heap.Binominal.Tree a) | size v == x4\n                                                                                                                                                                                             && subtrees v == x3\n                                                                                                                                                                                             && root v == x2\n                                                                                                                                                                                             && rank v == x1}","ident":"Data.Heap.Binominal.Node","stop":{"line":80,"column":46}},{"start":{"line":80,"column":14},"ann":"{v : GHC.Types.Int | v >= 0}","ident":"ds_d2V8","stop":{"line":80,"column":15}},{"start":{"line":80,"column":22},"ann":"a","ident":"ds_d2V9","stop":{"line":80,"column":23}},{"start":{"line":80,"column":34},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0}","ident":"ds_d2Va","stop":{"line":80,"column":36}},{"start":{"line":80,"column":43},"ann":"{v : GHC.Types.Int | 1 <= v}","ident":"ds_d2Vb","stop":{"line":80,"column":45}},{"start":{"line":85,"column":1},"ann":"forall a .\nx1:a -> x2:{VV : a | x1 <= VV} -> x3:(Data.Heap.Binominal.Tree {VV : a | x2 <= VV}) -> {VV : (Data.Heap.Binominal.Tree {VV : a | x1 <= VV}) | size VV == size x3}","ident":"Data.Heap.Binominal.boundedTreeTransitivityLemma","stop":{"line":85,"column":29}},{"start":{"line":85,"column":30},"ann":"a","ident":"x","stop":{"line":85,"column":31}},{"start":{"line":85,"column":32},"ann":"{VV : a | x <= VV}","ident":"y","stop":{"line":85,"column":33}},{"start":{"line":85,"column":34},"ann":"(Data.Heap.Binominal.Tree {VV : a | y <= VV})","ident":"tree","stop":{"line":85,"column":38}},{"start":{"line":89,"column":1},"ann":"forall a .\nx1:a -> x2:{VV : a | x1 <= VV} -> x3:[(Data.Heap.Binominal.Tree {VV : a | x2 <= VV})] -> {v : [(Data.Heap.Binominal.Tree {VV : a | x1 <= VV})] | sumSizeList v == sumSizeList x3}","ident":"Data.Heap.Binominal.boundedTreeListTransitivityLemma","stop":{"line":89,"column":33}},{"start":{"line":89,"column":34},"ann":"a","ident":"x","stop":{"line":89,"column":35}},{"start":{"line":89,"column":36},"ann":"{VV : a | x <= VV}","ident":"y","stop":{"line":89,"column":37}},{"start":{"line":89,"column":38},"ann":"[(Data.Heap.Binominal.Tree {VV : a | y <= VV})]","ident":"ts","stop":{"line":89,"column":40}},{"start":{"line":93,"column":1},"ann":"forall a .\nx1:(Data.Heap.Binominal.Tree a) -> x2:[(Data.Heap.Binominal.Tree a)] -> {VV : GHC.Types.Int | VV >= 0\n                                                                                              && VV == size x1 + sumSizeList x2\n                                                                                              && sumSizeList x2 < VV}","ident":"Data.Heap.Binominal.sublistSizeLemma","stop":{"line":93,"column":17}},{"start":{"line":93,"column":18},"ann":"(Data.Heap.Binominal.Tree a)","ident":"x","stop":{"line":93,"column":19}},{"start":{"line":93,"column":20},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"xs","stop":{"line":93,"column":22}},{"start":{"line":94,"column":3},"ann":"GHC.Types.Int -> GHC.Types.Int","ident":"lq_anf$##7205759403792805158","stop":{"line":94,"column":22}},{"start":{"line":94,"column":10},"ann":"GHC.Types.Bool","ident":"lq_anf$##7205759403792805157","stop":{"line":94,"column":22}},{"start":{"line":94,"column":11},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805155","stop":{"line":94,"column":12}},{"start":{"line":94,"column":15},"ann":"{v : GHC.Types.Int | 1 <= v\n                     && v == 1 + sumSizeList (subtrees x)\n                     && v == size x}","ident":"lq_anf$##7205759403792805156","stop":{"line":94,"column":21}},{"start":{"line":94,"column":20},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == x}","ident":"x","stop":{"line":94,"column":21}},{"start":{"line":95,"column":3},"ann":"{v : GHC.Types.Int | v >= 0}","ident":"lq_anf$##7205759403792805160","stop":{"line":95,"column":23}},{"start":{"line":95,"column":15},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | tail v == xs\n                                      && head v == x\n                                      && listElts v == Set_cup (Set_sng x) (listElts xs)\n                                      && len v == 1 + len xs\n                                      && sumSizeList v == size x + sumSizeList xs}","ident":"lq_anf$##7205759403792805159","stop":{"line":95,"column":23}},{"start":{"line":95,"column":16},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == x}","ident":"x","stop":{"line":95,"column":17}},{"start":{"line":95,"column":20},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == xs}","ident":"xs","stop":{"line":95,"column":22}},{"start":{"line":102,"column":1},"ann":"forall a .\nx1:{VV : GHC.Types.Int | VV >= 0} -> [{t : (Data.Heap.Binominal.Tree a) | size t <= x1}] -> x3:{VV : GHC.Types.Int | VV >= 0\n                                                                                                                     && x1 <= VV} -> [{t : (Data.Heap.Binominal.Tree a) | size t <= x3}]","ident":"Data.Heap.Binominal.subtreeTransitiveLemma","stop":{"line":102,"column":23}},{"start":{"line":102,"column":26},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"ts","stop":{"line":102,"column":28}},{"start":{"line":106,"column":1},"ann":"forall a .\nx1:{VV : GHC.Types.Int | VV >= 0} -> {VV : (Data.Heap.Binominal.Tree a) | size VV <= x1} -> [{t : (Data.Heap.Binominal.Tree a) | size t <= x1}] -> [{t : (Data.Heap.Binominal.Tree a) | size t <= x1}]","ident":"Data.Heap.Binominal.consTreeLemma","stop":{"line":106,"column":14}},{"start":{"line":106,"column":17},"ann":"(Data.Heap.Binominal.Tree a)","ident":"t","stop":{"line":106,"column":18}},{"start":{"line":106,"column":19},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"ts","stop":{"line":106,"column":21}},{"start":{"line":106,"column":24},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":106,"column":25}},{"start":{"line":106,"column":28},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts}","ident":"ts","stop":{"line":106,"column":30}},{"start":{"line":110,"column":1},"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> [{t : (Data.Heap.Binominal.Tree a) | size t <= sumSizeList x1}]","ident":"Data.Heap.Binominal.boundedSizeSubtreeLemma","stop":{"line":110,"column":24}},{"start":{"line":110,"column":30},"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | Set_emp (listElts v)\n                                            && len v == 0\n                                            && sumSizeList v == 0}","ident":"_","stop":{"line":110,"column":32}},{"start":{"line":112,"column":7},"ann":"[{v : (Data.Heap.Binominal.Tree a) | size v <= sumSizeList ts}]","ident":"ih","stop":{"line":112,"column":9}},{"start":{"line":112,"column":12},"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> [{t : (Data.Heap.Binominal.Tree a) | size t <= sumSizeList x1}]","ident":"Data.Heap.Binominal.boundedSizeSubtreeLemma","stop":{"line":112,"column":38}},{"start":{"line":112,"column":36},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts}","ident":"ts","stop":{"line":112,"column":38}},{"start":{"line":113,"column":7},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == size t + sumSizeList ts\n                     && sumSizeList ts < v}","ident":"sizetts","stop":{"line":113,"column":14}},{"start":{"line":113,"column":17},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == size t + sumSizeList ts\n                     && sumSizeList ts < v}","ident":"_","stop":{"line":113,"column":38}},{"start":{"line":113,"column":34},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":113,"column":35}},{"start":{"line":113,"column":36},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts}","ident":"ts","stop":{"line":113,"column":38}},{"start":{"line":114,"column":7},"ann":"{v : GHC.Types.Int | v == sumSizeList ts\n                     && v >= 0\n                     && len ts <= v}","ident":"sizets","stop":{"line":114,"column":13}},{"start":{"line":114,"column":16},"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {VV : GHC.Types.Int | VV == sumSizeList x1\n                                                           && VV >= 0\n                                                           && len x1 <= VV}","ident":"Data.Heap.Binominal.sumSizeList","stop":{"line":114,"column":30}},{"start":{"line":114,"column":28},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts}","ident":"ts","stop":{"line":114,"column":30}},{"start":{"line":115,"column":7},"ann":"[{v : (Data.Heap.Binominal.Tree a) | size v <= sizetts}]","ident":"refinedSubtrees","stop":{"line":115,"column":22}},{"start":{"line":115,"column":25},"ann":"[{v : (Data.Heap.Binominal.Tree a) | size v <= sizetts}]","ident":"_","stop":{"line":115,"column":65}},{"start":{"line":115,"column":48},"ann":"{v : GHC.Types.Int | v == sumSizeList ts\n                     && v >= 0\n                     && len ts <= v\n                     && v == sizets}","ident":"sizets","stop":{"line":115,"column":54}},{"start":{"line":115,"column":55},"ann":"{v : [{v : (Data.Heap.Binominal.Tree a) | size v <= sumSizeList ts}] | len v >= 0\n                                                                       && sumSizeList v >= 0\n                                                                       && v == ih}","ident":"ih","stop":{"line":115,"column":57}},{"start":{"line":115,"column":58},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == size t + sumSizeList ts\n                     && sumSizeList ts < v\n                     && v == sizetts}","ident":"sizetts","stop":{"line":115,"column":65}},{"start":{"line":116,"column":17},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == size t + sumSizeList ts\n                     && sumSizeList ts < v\n                     && v == sizetts}","ident":"sizetts","stop":{"line":116,"column":24}},{"start":{"line":116,"column":25},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":116,"column":26}},{"start":{"line":116,"column":27},"ann":"{v : [{v : (Data.Heap.Binominal.Tree a) | size v <= sizetts}] | len v >= 0\n                                                                && sumSizeList v >= 0\n                                                                && v == refinedSubtrees}","ident":"refinedSubtrees","stop":{"line":116,"column":42}},{"start":{"line":125,"column":1},"ann":"forall a . {v : GHC.Types.Bool | v} -> a -> a","ident":"Data.Heap.Binominal.assert","stop":{"line":125,"column":7}},{"start":{"line":125,"column":10},"ann":"a","ident":"x","stop":{"line":125,"column":11}},{"start":{"line":129,"column":1},"ann":"forall a b .\nx1:a -> (Data.Heap.Binominal.Tree {VV : a | x1 <= VV}) -> b -> b","ident":"Data.Heap.Binominal.assertBoundedTree","stop":{"line":129,"column":18}},{"start":{"line":129,"column":23},"ann":"a","ident":"x","stop":{"line":129,"column":24}},{"start":{"line":133,"column":1},"ann":"forall a b .\nx1:a -> [(Data.Heap.Binominal.Tree {VV : a | x1 <= VV})] -> b -> b","ident":"Data.Heap.Binominal.assertBoundedTreeList","stop":{"line":133,"column":22}},{"start":{"line":133,"column":27},"ann":"a","ident":"x","stop":{"line":133,"column":28}},{"start":{"line":137,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Tree a) -> x3:(Data.Heap.Binominal.Tree a) -> {v : (Data.Heap.Binominal.Tree a) | size v == size x2 + size x3}","ident":"Data.Heap.Binominal.link","stop":{"line":137,"column":5}},{"start":{"line":137,"column":6},"ann":"(Data.Heap.Binominal.Tree a)","ident":"t1","stop":{"line":137,"column":8}},{"start":{"line":137,"column":59},"ann":"(Data.Heap.Binominal.Tree a)","ident":"t2","stop":{"line":137,"column":61}},{"start":{"line":138,"column":5},"ann":"a","ident":"ds_d2Vz","stop":{"line":138,"column":7}},{"start":{"line":138,"column":11},"ann":"a","ident":"ds_d2VD","stop":{"line":138,"column":13}},{"start":{"line":139,"column":9},"ann":"(Data.Heap.Binominal.Tree a)","ident":"t2BoundedByX2","stop":{"line":139,"column":22}},{"start":{"line":139,"column":25},"ann":"(Data.Heap.Binominal.Tree a)","ident":"_","stop":{"line":139,"column":55}},{"start":{"line":139,"column":53},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2}","ident":"lq_anf$##7205759403792805095","stop":{"line":139,"column":55}},{"start":{"line":140,"column":9},"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t2BoundedByX2}","ident":"t2BoundedByX1","stop":{"line":140,"column":22}},{"start":{"line":140,"column":25},"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t2BoundedByX2}","ident":"_","stop":{"line":140,"column":73}},{"start":{"line":140,"column":54},"ann":"a","ident":"ds_d2Vz","stop":{"line":140,"column":56}},{"start":{"line":140,"column":57},"ann":"a","ident":"ds_d2VD","stop":{"line":140,"column":59}},{"start":{"line":140,"column":60},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2BoundedByX2}","ident":"t2BoundedByX2","stop":{"line":140,"column":73}},{"start":{"line":141,"column":10},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805105","stop":{"line":141,"column":16}},{"start":{"line":141,"column":11},"ann":"{v : GHC.Types.Int | v >= 0}","ident":"ds_d2Vy","stop":{"line":141,"column":13}},{"start":{"line":141,"column":14},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805104","stop":{"line":141,"column":15}},{"start":{"line":141,"column":17},"ann":"a","ident":"ds_d2Vz","stop":{"line":141,"column":19}},{"start":{"line":141,"column":20},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | head v == t2BoundedByX1}","ident":"lq_anf$##7205759403792805106","stop":{"line":141,"column":39}},{"start":{"line":141,"column":21},"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t2BoundedByX2\n                                    && v == t2BoundedByX1}","ident":"t2BoundedByX1","stop":{"line":141,"column":34}},{"start":{"line":141,"column":35},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0}","ident":"ds_d2VA","stop":{"line":141,"column":38}},{"start":{"line":141,"column":40},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805107","stop":{"line":141,"column":51}},{"start":{"line":141,"column":41},"ann":"{v : GHC.Types.Int | 1 <= v}","ident":"ds_d2VB","stop":{"line":141,"column":44}},{"start":{"line":141,"column":47},"ann":"{v : GHC.Types.Int | 1 <= v}","ident":"ds_d2VF","stop":{"line":141,"column":50}},{"start":{"line":143,"column":9},"ann":"(Data.Heap.Binominal.Tree a)","ident":"t1BoundedByX1","stop":{"line":143,"column":22}},{"start":{"line":143,"column":25},"ann":"(Data.Heap.Binominal.Tree a)","ident":"_","stop":{"line":143,"column":55}},{"start":{"line":143,"column":53},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1}","ident":"lq_anf$##7205759403792805094","stop":{"line":143,"column":55}},{"start":{"line":144,"column":9},"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t1BoundedByX1}","ident":"t1BoundedByX2","stop":{"line":144,"column":22}},{"start":{"line":144,"column":25},"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t1BoundedByX1}","ident":"_","stop":{"line":144,"column":73}},{"start":{"line":144,"column":54},"ann":"a","ident":"ds_d2VD","stop":{"line":144,"column":56}},{"start":{"line":144,"column":57},"ann":"a","ident":"ds_d2Vz","stop":{"line":144,"column":59}},{"start":{"line":144,"column":60},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1BoundedByX1}","ident":"t1BoundedByX1","stop":{"line":144,"column":73}},{"start":{"line":145,"column":10},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805100","stop":{"line":145,"column":16}},{"start":{"line":145,"column":11},"ann":"{v : GHC.Types.Int | v >= 0}","ident":"ds_d2VC","stop":{"line":145,"column":13}},{"start":{"line":145,"column":14},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805099","stop":{"line":145,"column":15}},{"start":{"line":145,"column":17},"ann":"a","ident":"ds_d2VD","stop":{"line":145,"column":19}},{"start":{"line":145,"column":20},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | head v == t1BoundedByX2}","ident":"lq_anf$##7205759403792805101","stop":{"line":145,"column":39}},{"start":{"line":145,"column":21},"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t1BoundedByX1\n                                    && v == t1BoundedByX2}","ident":"t1BoundedByX2","stop":{"line":145,"column":34}},{"start":{"line":145,"column":35},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0}","ident":"ds_d2VE","stop":{"line":145,"column":38}},{"start":{"line":145,"column":40},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805102","stop":{"line":145,"column":51}},{"start":{"line":145,"column":41},"ann":"{v : GHC.Types.Int | 1 <= v}","ident":"ds_d2VB","stop":{"line":145,"column":44}},{"start":{"line":145,"column":47},"ann":"{v : GHC.Types.Int | 1 <= v}","ident":"ds_d2VF","stop":{"line":145,"column":50}},{"start":{"line":149,"column":1},"ann":"forall a . {v : (Data.Heap.Binominal.Heap a) | heapSize v == 0}","ident":"Data.Heap.Binominal.empty","stop":{"line":149,"column":6}},{"start":{"line":149,"column":14},"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | Set_emp (listElts v)\n                                            && len v == 0\n                                            && sumSizeList v == 0}","ident":"_","stop":{"line":149,"column":16}},{"start":{"line":153,"column":1},"ann":"forall a .\nx1:(Data.Heap.Binominal.Heap a) -> {v : GHC.Types.Bool | v <=> heapSize x1 == 0}","ident":"Data.Heap.Binominal.null","stop":{"line":153,"column":5}},{"start":{"line":153,"column":6},"ann":"(Data.Heap.Binominal.Heap a)","ident":"h","stop":{"line":153,"column":7}},{"start":{"line":153,"column":10},"ann":"{v : GHC.Types.Int | v == heapSize h\n                     && v >= 0\n                     && len (unheap h) <= v}","ident":"lq_anf$##7205759403792805090","stop":{"line":153,"column":20}},{"start":{"line":153,"column":19},"ann":"{v : (Data.Heap.Binominal.Heap a) | heapSize v >= 0\n                                    && v == h}","ident":"h","stop":{"line":153,"column":20}},{"start":{"line":153,"column":24},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805092","stop":{"line":153,"column":25}},{"start":{"line":157,"column":1},"ann":"forall a .\na -> {v : (Data.Heap.Binominal.Heap a) | heapSize v == 1}","ident":"Data.Heap.Binominal.singleton","stop":{"line":157,"column":10}},{"start":{"line":157,"column":11},"ann":"a","ident":"x","stop":{"line":157,"column":12}},{"start":{"line":157,"column":20},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"lq_anf$##7205759403792805172","stop":{"line":157,"column":35}},{"start":{"line":157,"column":21},"ann":"{v : (Data.Heap.Binominal.Tree a) | root v == x}","ident":"lq_anf$##7205759403792805170","stop":{"line":157,"column":34}},{"start":{"line":157,"column":26},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805166","stop":{"line":157,"column":27}},{"start":{"line":157,"column":28},"ann":"{VV : a | VV == x}","ident":"x","stop":{"line":157,"column":29}},{"start":{"line":157,"column":30},"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | Set_emp (listElts v)\n                                            && len v == 0\n                                            && sumSizeList v == 0}","ident":"_","stop":{"line":157,"column":32}},{"start":{"line":157,"column":33},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805169","stop":{"line":157,"column":34}},{"start":{"line":169,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\na -> x3:(Data.Heap.Binominal.Heap a) -> {v : (Data.Heap.Binominal.Heap a) | 1 + heapSize x3 == heapSize v}","ident":"Data.Heap.Binominal.insert","stop":{"line":169,"column":7}},{"start":{"line":169,"column":8},"ann":"a","ident":"x","stop":{"line":169,"column":9}},{"start":{"line":169,"column":22},"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {v : (Data.Heap.Binominal.Heap a) | unheap v == x1\n                                                                         && heapSize v == sumSizeList x1}","ident":"Data.Heap.Binominal.Heap","stop":{"line":169,"column":55}},{"start":{"line":169,"column":27},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"lq_anf$##7205759403792805122","stop":{"line":169,"column":55}},{"start":{"line":169,"column":36},"ann":"{v : (Data.Heap.Binominal.Tree a) | root v == x}","ident":"lq_anf$##7205759403792805121","stop":{"line":169,"column":51}},{"start":{"line":169,"column":42},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805117","stop":{"line":169,"column":43}},{"start":{"line":169,"column":44},"ann":"{VV : a | VV == x}","ident":"x","stop":{"line":169,"column":45}},{"start":{"line":169,"column":46},"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | Set_emp (listElts v)\n                                            && len v == 0\n                                            && sumSizeList v == 0}","ident":"_","stop":{"line":169,"column":48}},{"start":{"line":169,"column":49},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805120","stop":{"line":169,"column":50}},{"start":{"line":169,"column":52},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts}","ident":"ts","stop":{"line":169,"column":54}},{"start":{"line":173,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Tree a) -> x3:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == size x2 + sumSizeList x3}","ident":"Data.Heap.Binominal.insert'","stop":{"line":173,"column":8}},{"start":{"line":173,"column":9},"ann":"(Data.Heap.Binominal.Tree a)","ident":"t","stop":{"line":173,"column":10}},{"start":{"line":173,"column":16},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | Set_emp (listElts v)\n                                      && len v == 0\n                                      && sumSizeList v == 0}","ident":"lq_anf$##7205759403792805109","stop":{"line":173,"column":19}},{"start":{"line":173,"column":17},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":173,"column":18}},{"start":{"line":175,"column":5},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == rank t}","ident":"lq_anf$##7205759403792805110","stop":{"line":175,"column":11}},{"start":{"line":175,"column":10},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":175,"column":11}},{"start":{"line":175,"column":14},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == rank t'}","ident":"lq_anf$##7205759403792805111","stop":{"line":175,"column":21}},{"start":{"line":175,"column":19},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t'}","ident":"t'","stop":{"line":175,"column":21}},{"start":{"line":175,"column":24},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":175,"column":25}},{"start":{"line":175,"column":28},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0}","ident":"ds_d2VI","stop":{"line":175,"column":30}},{"start":{"line":176,"column":24},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Tree a) -> x3:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == size x2 + sumSizeList x3}","ident":"Data.Heap.Binominal.insert'","stop":{"line":176,"column":47}},{"start":{"line":176,"column":32},"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t + size t'}","ident":"lq_anf$##7205759403792805114","stop":{"line":176,"column":43}},{"start":{"line":176,"column":38},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":176,"column":39}},{"start":{"line":176,"column":40},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t'}","ident":"t'","stop":{"line":176,"column":42}},{"start":{"line":176,"column":44},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts'}","ident":"ts'","stop":{"line":176,"column":47}},{"start":{"line":181,"column":1},"ann":"forall a .\nx1:[a] -> {VV : GHC.Types.Int | VV == len x1\n                                && VV >= 0}","ident":"Data.Heap.Binominal.len","stop":{"line":181,"column":4}},{"start":{"line":181,"column":10},"ann":"{v : GHC.Prim.Int# | v == 0}","ident":"lq_anf$##7205759403792805174","stop":{"line":181,"column":11}},{"start":{"line":182,"column":14},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805176","stop":{"line":182,"column":15}},{"start":{"line":182,"column":18},"ann":"{v : GHC.Types.Int | v == len xs\n                     && v >= 0}","ident":"lq_anf$##7205759403792805177","stop":{"line":182,"column":24}},{"start":{"line":182,"column":22},"ann":"{v : [a] | sumSizeList v >= 0\n           && len v >= 0\n           && v == xs}","ident":"xs","stop":{"line":182,"column":24}},{"start":{"line":186,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:[a] -> {v : (Data.Heap.Binominal.Heap a) | heapSize v == len x2}","ident":"Data.Heap.Binominal.fromList","stop":{"line":186,"column":9}},{"start":{"line":186,"column":15},"ann":"forall a . {v : (Data.Heap.Binominal.Heap a) | heapSize v == 0}","ident":"_","stop":{"line":186,"column":20}},{"start":{"line":187,"column":19},"ann":"{v : (GHC.Classes.Ord a) | v == $dOrd_a2H4}","ident":"$dOrd_a2H4","stop":{"line":187,"column":41}},{"start":{"line":187,"column":26},"ann":"{VV : a | VV == x}","ident":"x","stop":{"line":187,"column":27}},{"start":{"line":187,"column":28},"ann":"{v : (Data.Heap.Binominal.Heap a) | heapSize v == len xs}","ident":"lq_anf$##7205759403792805164","stop":{"line":187,"column":41}},{"start":{"line":187,"column":38},"ann":"{v : [a] | len v >= 0\n           && sumSizeList v >= 0\n           && v == xs}","ident":"xs","stop":{"line":187,"column":40}},{"start":{"line":229,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\n{VV : (Data.Heap.Binominal.Heap a) | 0 < len (unheap VV)} -> a","ident":"Data.Heap.Binominal.minimum","stop":{"line":229,"column":8}},{"start":{"line":229,"column":11},"ann":"forall a .\nx1:(Data.Heap.Binominal.Tree a) -> {VV : a | VV == root x1}","ident":"_","stop":{"line":229,"column":15}},{"start":{"line":229,"column":18},"ann":"forall a b . x1:(a, b) -> {VV : a | VV == fst x1}","ident":"_","stop":{"line":229,"column":21}},{"start":{"line":229,"column":24},"ann":"x1:{v : [(Data.Heap.Binominal.Tree a)] | 0 < len v} -> {v : ((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | root (fst x15) <= VV})]) | size (fst v) + sumSizeList (snd v) == sumSizeList x1}","ident":"lq_anf$##7205759403792805186","stop":{"line":229,"column":34}},{"start":{"line":229,"column":37},"ann":"forall a .\nx1:{v : (Data.Heap.Binominal.Heap a) | 0 < len (unheap v)} -> {v : [(Data.Heap.Binominal.Tree a)] | 0 < len v\n                                                                                                    && sumSizeList v == heapSize x1}","ident":"_","stop":{"line":229,"column":51}},{"start":{"line":235,"column":1},"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList x1}","ident":"Data.Heap.Binominal.reverseHeapList","stop":{"line":235,"column":16}},{"start":{"line":235,"column":17},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"xs","stop":{"line":235,"column":19}},{"start":{"line":235,"column":41},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == xs}","ident":"xs","stop":{"line":235,"column":43}},{"start":{"line":235,"column":44},"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | Set_emp (listElts v)\n                                            && len v == 0\n                                            && sumSizeList v == 0}","ident":"_","stop":{"line":235,"column":46}},{"start":{"line":239,"column":1},"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> x2:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList x1 + sumSizeList x2}","ident":"Data.Heap.Binominal.reverseHeapListAux","stop":{"line":239,"column":19}},{"start":{"line":239,"column":23},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"acc","stop":{"line":239,"column":26}},{"start":{"line":239,"column":29},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == acc}","ident":"acc","stop":{"line":239,"column":32}},{"start":{"line":240,"column":33},"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> x2:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList x1 + sumSizeList x2}","ident":"Data.Heap.Binominal.reverseHeapListAux","stop":{"line":240,"column":62}},{"start":{"line":240,"column":52},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == xs}","ident":"xs","stop":{"line":240,"column":54}},{"start":{"line":240,"column":55},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | tail v == acc\n                                      && head v == x\n                                      && listElts v == Set_cup (Set_sng x) (listElts acc)\n                                      && len v == 1 + len acc\n                                      && sumSizeList v == size x + sumSizeList acc}","ident":"lq_anf$##7205759403792805179","stop":{"line":240,"column":62}},{"start":{"line":240,"column":56},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == x}","ident":"x","stop":{"line":240,"column":57}},{"start":{"line":240,"column":58},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == acc}","ident":"acc","stop":{"line":240,"column":61}},{"start":{"line":244,"column":1},"ann":"forall a .\nx1:{VV : (Data.Heap.Binominal.Heap a) | 0 < len (unheap VV)} -> {v : [(Data.Heap.Binominal.Tree a)] | 0 < len v\n                                                                                                      && sumSizeList v == heapSize x1}","ident":"Data.Heap.Binominal.unheapNonempty","stop":{"line":244,"column":15}},{"start":{"line":244,"column":34},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts}","ident":"lq_anf$##7205759403792805182","stop":{"line":244,"column":36}},{"start":{"line":248,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:{VV : (Data.Heap.Binominal.Heap a) | 0 < len (unheap VV)} -> {v : (Data.Heap.Binominal.Heap a) | 1 + heapSize v == heapSize x2}","ident":"Data.Heap.Binominal.deleteMin","stop":{"line":248,"column":10}},{"start":{"line":248,"column":11},"ann":"{VV : (Data.Heap.Binominal.Heap a) | 0 < len (unheap VV)}","ident":"h","stop":{"line":248,"column":12}},{"start":{"line":249,"column":31},"ann":"((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | root (fst x9) <= VV})])","ident":"lq_anf$##7205759403792805191","stop":{"line":249,"column":60}},{"start":{"line":249,"column":42},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | 0 < len v\n                                      && sumSizeList v == heapSize h}","ident":"lq_anf$##7205759403792805190","stop":{"line":249,"column":60}},{"start":{"line":249,"column":58},"ann":"{v : (Data.Heap.Binominal.Heap a) | 0 < len (unheap v)\n                                    && heapSize v >= 0\n                                    && v == h}","ident":"h","stop":{"line":249,"column":59}},{"start":{"line":250,"column":8},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"lq_anf$##7205759403792805195","stop":{"line":250,"column":42}},{"start":{"line":250,"column":16},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList ts1}","ident":"lq_anf$##7205759403792805194","stop":{"line":250,"column":37}},{"start":{"line":250,"column":33},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts1}","ident":"ts1","stop":{"line":250,"column":36}},{"start":{"line":250,"column":38},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts2}","ident":"ts2","stop":{"line":250,"column":41}},{"start":{"line":254,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:{VV : (Data.Heap.Binominal.Heap a) | 0 < len (unheap VV)} -> {v : (a, (Data.Heap.Binominal.Heap {VV : a | fst v <= VV})) | 1 + heapSize (snd v) == heapSize x2}","ident":"Data.Heap.Binominal.deleteMin2","stop":{"line":254,"column":11}},{"start":{"line":254,"column":12},"ann":"{VV : (Data.Heap.Binominal.Heap a) | 0 < len (unheap VV)}","ident":"h","stop":{"line":254,"column":13}},{"start":{"line":255,"column":36},"ann":"((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | root (fst x9) <= VV})])","ident":"lq_anf$##7205759403792805197","stop":{"line":255,"column":65}},{"start":{"line":255,"column":47},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | 0 < len v\n                                      && sumSizeList v == heapSize h}","ident":"lq_anf$##7205759403792805196","stop":{"line":255,"column":65}},{"start":{"line":255,"column":63},"ann":"{v : (Data.Heap.Binominal.Heap a) | 0 < len (unheap v)\n                                    && heapSize v >= 0\n                                    && v == h}","ident":"h","stop":{"line":255,"column":64}},{"start":{"line":256,"column":4},"ann":"{VV : a | VV == minElt}","ident":"minElt","stop":{"line":256,"column":10}},{"start":{"line":256,"column":12},"ann":"(Data.Heap.Binominal.Heap a)","ident":"lq_anf$##7205759403792805202","stop":{"line":256,"column":51}},{"start":{"line":256,"column":17},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"lq_anf$##7205759403792805201","stop":{"line":256,"column":51}},{"start":{"line":256,"column":25},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList ts1}","ident":"lq_anf$##7205759403792805200","stop":{"line":256,"column":46}},{"start":{"line":256,"column":42},"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | minElt <= VV})] | len v >= 0\n                                                            && sumSizeList v >= 0\n                                                            && v == ts1}","ident":"ts1","stop":{"line":256,"column":45}},{"start":{"line":256,"column":47},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts2}","ident":"ts2","stop":{"line":256,"column":50}},{"start":{"line":260,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:{v : [(Data.Heap.Binominal.Tree a)] | 0 < len v} -> {v : ((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | root (fst v) <= VV})]) | size (fst v) + sumSizeList (snd v) == sumSizeList x2}","ident":"Data.Heap.Binominal.deleteMin'","stop":{"line":260,"column":11}},{"start":{"line":260,"column":18},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | Set_emp (listElts v)\n                                      && len v == 0\n                                      && sumSizeList v == 0}","ident":"lq_anf$##7205759403792805151","stop":{"line":260,"column":25}},{"start":{"line":260,"column":19},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":260,"column":20}},{"start":{"line":260,"column":22},"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | Set_emp (listElts v)\n                                            && len v == 0\n                                            && sumSizeList v == 0}","ident":"_","stop":{"line":260,"column":24}},{"start":{"line":262,"column":8},"ann":"(Data.Heap.Binominal.Tree a)","ident":"t'","stop":{"line":262,"column":10}},{"start":{"line":262,"column":12},"ann":"{VV : [(Data.Heap.Binominal.Tree {VV : a | root t' <= VV})] | len VV >= 0}","ident":"ts'","stop":{"line":262,"column":15}},{"start":{"line":262,"column":19},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:{v : [(Data.Heap.Binominal.Tree a)] | 0 < len v} -> {v : ((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | root (fst v) <= VV})]) | size (fst v) + sumSizeList (snd v) == sumSizeList x2}","ident":"Data.Heap.Binominal.deleteMin'","stop":{"line":262,"column":32}},{"start":{"line":262,"column":30},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0}","ident":"ds_d2X9","stop":{"line":262,"column":32}},{"start":{"line":263,"column":7},"ann":"{VV : a | VV == root t}","ident":"x","stop":{"line":263,"column":8}},{"start":{"line":263,"column":11},"ann":"{VV : a | VV == root t}","ident":"_","stop":{"line":263,"column":17}},{"start":{"line":263,"column":16},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":263,"column":17}},{"start":{"line":264,"column":7},"ann":"{VV : a | VV == root t'}","ident":"x'","stop":{"line":264,"column":9}},{"start":{"line":264,"column":12},"ann":"{VV : a | VV == root t'}","ident":"_","stop":{"line":264,"column":19}},{"start":{"line":264,"column":17},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t'}","ident":"t'","stop":{"line":264,"column":19}},{"start":{"line":265,"column":7},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t <= VV}) | size v == size t}","ident":"tBounded","stop":{"line":265,"column":15}},{"start":{"line":265,"column":18},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t <= VV}) | size v == size t}","ident":"_","stop":{"line":265,"column":47}},{"start":{"line":265,"column":46},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":265,"column":47}},{"start":{"line":266,"column":7},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t' <= VV}) | size v == size t'}","ident":"tBounded'","stop":{"line":266,"column":16}},{"start":{"line":266,"column":19},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t' <= VV}) | size v == size t'}","ident":"_","stop":{"line":266,"column":49}},{"start":{"line":266,"column":47},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t'}","ident":"t'","stop":{"line":266,"column":49}},{"start":{"line":267,"column":6},"ann":"{VV : a | VV == root t\n          && VV == x}","ident":"x","stop":{"line":267,"column":7}},{"start":{"line":267,"column":10},"ann":"{VV : a | VV == root t'\n          && VV == x'}","ident":"x'","stop":{"line":267,"column":12}},{"start":{"line":269,"column":9},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x <= VV}) | size v == size tBounded'}","ident":"hd","stop":{"line":269,"column":11}},{"start":{"line":269,"column":14},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x <= VV}) | size v == size tBounded'}","ident":"_","stop":{"line":269,"column":57}},{"start":{"line":269,"column":43},"ann":"{VV : a | VV == root t\n          && VV == x}","ident":"x","stop":{"line":269,"column":44}},{"start":{"line":269,"column":45},"ann":"{VV : a | VV == root t'\n          && VV == x'}","ident":"x'","stop":{"line":269,"column":47}},{"start":{"line":269,"column":48},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t' <= VV}) | size v == size t'\n                                                           && v == tBounded'}","ident":"tBounded'","stop":{"line":269,"column":57}},{"start":{"line":270,"column":9},"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | x <= VV})] | sumSizeList v == sumSizeList ts'}","ident":"tl","stop":{"line":270,"column":11}},{"start":{"line":270,"column":14},"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | x <= VV})] | sumSizeList v == sumSizeList ts'}","ident":"_","stop":{"line":270,"column":55}},{"start":{"line":270,"column":47},"ann":"{VV : a | VV == root t\n          && VV == x}","ident":"x","stop":{"line":270,"column":48}},{"start":{"line":270,"column":49},"ann":"{VV : a | VV == root t'\n          && VV == x'}","ident":"x'","stop":{"line":270,"column":51}},{"start":{"line":270,"column":52},"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | root t' <= VV})] | len v >= 0\n                                                             && sumSizeList v >= 0\n                                                             && v == ts'}","ident":"ts'","stop":{"line":270,"column":55}},{"start":{"line":271,"column":6},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":271,"column":7}},{"start":{"line":271,"column":9},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x <= VV}) | size v == size tBounded'\n                                                     && v == hd}","ident":"hd","stop":{"line":271,"column":11}},{"start":{"line":271,"column":12},"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | x <= VV})] | sumSizeList v == sumSizeList ts'\n                                                       && len v >= 0\n                                                       && sumSizeList v >= 0\n                                                       && v == tl}","ident":"tl","stop":{"line":271,"column":14}},{"start":{"line":273,"column":9},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x' <= VV}) | size v == size tBounded}","ident":"hd","stop":{"line":273,"column":11}},{"start":{"line":273,"column":14},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x' <= VV}) | size v == size tBounded}","ident":"_","stop":{"line":273,"column":56}},{"start":{"line":273,"column":43},"ann":"{VV : a | VV == root t'\n          && VV == x'}","ident":"x'","stop":{"line":273,"column":45}},{"start":{"line":273,"column":46},"ann":"{VV : a | VV == root t\n          && VV == x}","ident":"x","stop":{"line":273,"column":47}},{"start":{"line":273,"column":48},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t <= VV}) | size v == size t\n                                                          && v == tBounded}","ident":"tBounded","stop":{"line":273,"column":56}},{"start":{"line":274,"column":6},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t'}","ident":"t'","stop":{"line":274,"column":8}},{"start":{"line":274,"column":10},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x' <= VV}) | size v == size tBounded\n                                                      && v == hd}","ident":"hd","stop":{"line":274,"column":12}},{"start":{"line":274,"column":13},"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | root t' <= VV})] | len v >= 0\n                                                             && sumSizeList v >= 0\n                                                             && v == ts'}","ident":"ts'","stop":{"line":274,"column":16}},{"start":{"line":287,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Heap a) -> x3:(Data.Heap.Binominal.Heap a) -> {VV : (Data.Heap.Binominal.Heap a) | heapSize VV == heapSize x2 + heapSize x3}","ident":"Data.Heap.Binominal.merge","stop":{"line":287,"column":6}},{"start":{"line":287,"column":31},"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {v : (Data.Heap.Binominal.Heap a) | unheap v == x1\n                                                                         && heapSize v == sumSizeList x1}","ident":"Data.Heap.Binominal.Heap","stop":{"line":287,"column":52}},{"start":{"line":287,"column":36},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList ts1 + sumSizeList ts2}","ident":"lq_anf$##7205759403792805143","stop":{"line":287,"column":52}},{"start":{"line":287,"column":44},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts1}","ident":"ts1","stop":{"line":287,"column":47}},{"start":{"line":287,"column":48},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts2}","ident":"ts2","stop":{"line":287,"column":51}},{"start":{"line":291,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:[(Data.Heap.Binominal.Tree a)] -> x3:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList x2 + sumSizeList x3}","ident":"Data.Heap.Binominal.merge'","stop":{"line":291,"column":7}},{"start":{"line":291,"column":8},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"ts1","stop":{"line":291,"column":11}},{"start":{"line":291,"column":17},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts1}","ident":"ts1","stop":{"line":291,"column":20}},{"start":{"line":292,"column":17},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0}","ident":"ds_d2W4","stop":{"line":292,"column":20}},{"start":{"line":294,"column":5},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == rank t1}","ident":"lq_anf$##7205759403792805127","stop":{"line":294,"column":12}},{"start":{"line":294,"column":10},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1}","ident":"t1","stop":{"line":294,"column":12}},{"start":{"line":294,"column":15},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == rank t2}","ident":"lq_anf$##7205759403792805128","stop":{"line":294,"column":22}},{"start":{"line":294,"column":20},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2}","ident":"t2","stop":{"line":294,"column":22}},{"start":{"line":294,"column":25},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1}","ident":"t1","stop":{"line":294,"column":27}},{"start":{"line":294,"column":30},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"lq_anf$##7205759403792805138","stop":{"line":294,"column":45}},{"start":{"line":294,"column":37},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts1'}","ident":"ts1'","stop":{"line":294,"column":41}},{"start":{"line":294,"column":42},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0}","ident":"ds_d2W4","stop":{"line":294,"column":45}},{"start":{"line":295,"column":5},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == rank t2}","ident":"lq_anf$##7205759403792805131","stop":{"line":295,"column":12}},{"start":{"line":295,"column":10},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2}","ident":"t2","stop":{"line":295,"column":12}},{"start":{"line":295,"column":15},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == rank t1}","ident":"lq_anf$##7205759403792805132","stop":{"line":295,"column":22}},{"start":{"line":295,"column":20},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1}","ident":"t1","stop":{"line":295,"column":22}},{"start":{"line":295,"column":25},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2}","ident":"t2","stop":{"line":295,"column":27}},{"start":{"line":295,"column":30},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList ts1 + sumSizeList ts2'}","ident":"lq_anf$##7205759403792805137","stop":{"line":295,"column":45}},{"start":{"line":295,"column":37},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts1}","ident":"ts1","stop":{"line":295,"column":40}},{"start":{"line":295,"column":41},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts2'}","ident":"ts2'","stop":{"line":295,"column":45}},{"start":{"line":296,"column":25},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Tree a) -> x3:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == size x2 + sumSizeList x3}","ident":"Data.Heap.Binominal.insert'","stop":{"line":296,"column":64}},{"start":{"line":296,"column":33},"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t1 + size t2}","ident":"lq_anf$##7205759403792805135","stop":{"line":296,"column":45}},{"start":{"line":296,"column":39},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1}","ident":"t1","stop":{"line":296,"column":41}},{"start":{"line":296,"column":42},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2}","ident":"t2","stop":{"line":296,"column":44}},{"start":{"line":296,"column":46},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList ts1' + sumSizeList ts2'}","ident":"lq_anf$##7205759403792805136","stop":{"line":296,"column":64}},{"start":{"line":296,"column":54},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts1'}","ident":"ts1'","stop":{"line":296,"column":58}},{"start":{"line":296,"column":59},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0\n                                      && sumSizeList v >= 0\n                                      && v == ts2'}","ident":"ts2'","stop":{"line":296,"column":63}},{"start":{"line":312,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Heap a) -> {VV : [a]<\\x1 VV -> {VV : a | x1 <= VV}> | len VV == heapSize x2}","ident":"Data.Heap.Binominal.heapSort","stop":{"line":312,"column":9}},{"start":{"line":312,"column":22},"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | Set_emp (listElts v)\n                                            && len v == 0\n                                            && sumSizeList v == 0}","ident":"_","stop":{"line":312,"column":24}},{"start":{"line":314,"column":8},"ann":"a","ident":"minElt","stop":{"line":314,"column":14}},{"start":{"line":314,"column":16},"ann":"(Data.Heap.Binominal.Heap {VV : a | minElt <= VV\n                                    && VV >= minElt})","ident":"h'","stop":{"line":314,"column":18}},{"start":{"line":314,"column":22},"ann":"(a, (Data.Heap.Binominal.Heap {VV : a | fst x4 <= VV}))","ident":"_","stop":{"line":314,"column":34}},{"start":{"line":314,"column":33},"ann":"{v : (Data.Heap.Binominal.Heap a) | heapSize v >= 0}","ident":"ds_d2XY","stop":{"line":314,"column":34}},{"start":{"line":315,"column":3},"ann":"{VV : a | VV == minElt}","ident":"minElt","stop":{"line":315,"column":9}},{"start":{"line":315,"column":12},"ann":"{VV : [a]<\\x1 VV -> {VV : a | x1 <= VV}> | len VV == heapSize h'}","ident":"lq_anf$##7205759403792805205","stop":{"line":315,"column":23}},{"start":{"line":315,"column":21},"ann":"{v : (Data.Heap.Binominal.Heap {VV : a | minElt <= VV\n                                         && VV >= minElt}) | heapSize v >= 0\n                                                             && v == h'}","ident":"h'","stop":{"line":315,"column":23}},{"start":{"line":319,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:[a] -> {VV : [a]<\\x1 VV -> {VV : a | x1 <= VV}> | len VV == len x2}","ident":"Data.Heap.Binominal.sortUsingHeap","stop":{"line":319,"column":14}},{"start":{"line":319,"column":17},"ann":"x1:(Data.Heap.Binominal.Heap a) -> {v : [a]<\\x5 VV -> {VV : a | x5 <= VV}> | len v == heapSize x1}","ident":"lq_anf$##7205759403792805206","stop":{"line":319,"column":25}},{"start":{"line":319,"column":28},"ann":"x1:[a] -> {v : (Data.Heap.Binominal.Heap a) | heapSize v == len x1}","ident":"lq_anf$##7205759403792805207","stop":{"line":319,"column":36}}],"errors":[]}