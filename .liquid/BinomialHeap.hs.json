{"status":"safe","types":{"370":{"17":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts1}","ident":"ts1","row":370,"col":17},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:[(Data.Heap.Binominal.Tree a)] -> x3:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList x2 + sumSizeList x3}","ident":"Data.Heap.Binominal.merge'","row":370,"col":1},"8":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"ts1","row":370,"col":8}},"150":{"7":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == size t + sumSizeList ts\n                     && sumSizeList ts < v}","ident":"sizetts","row":150,"col":7},"36":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts}","ident":"ts","row":150,"col":36},"17":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == size t + sumSizeList ts\n                     && sumSizeList ts < v}","ident":"_","row":150,"col":17},"34":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":150,"col":34}},"352":{"48":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t <= VV}) | size v == size t\n                                                          && v == tBounded}","ident":"tBounded","row":352,"col":48},"43":{"ann":"{VV : a | VV == root t'\n          && VV == x'}","ident":"x'","row":352,"col":43},"14":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x' <= VV}) | size v == size tBounded}","ident":"_","row":352,"col":14},"46":{"ann":"{VV : a | VV == root t\n          && VV == x}","ident":"x","row":352,"col":46},"9":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x' <= VV}) | size v == size tBounded}","ident":"hd","row":352,"col":9}},"172":{"37":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806145","row":172,"col":37},"48":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x <= VV}) | v == t}","ident":"t","row":172,"col":48},"7":{"ann":"{v : (Data.Heap.Binominal.Tree a) | subtrees v == ts\n                                    && root v == x}","ident":"remainder","row":172,"col":7},"43":{"ann":"{v : GHC.Types.Int | v >= 1\n                     && v == 1 + sumSizeList (subtrees t)\n                     && v == size t}","ident":"lq_anf$##7205759403792806144","row":172,"col":43},"19":{"ann":"{v : (Data.Heap.Binominal.Tree a) | subtrees v == ts\n                                    && root v == x}","ident":"_","row":172,"col":19},"29":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806143","row":172,"col":29},"30":{"ann":"{v : GHC.Types.Int | v >= 0}","ident":"ds_d39t","row":172,"col":30},"26":{"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | x <= VV})] | lubRank v >= 0\n                                                       && sumSizeList v >= 0\n                                                       && len v >= 0\n                                                       && maxRankList v >= 0\n                                                       && v == ts}","ident":"ts","row":172,"col":26},"34":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806142","row":172,"col":34},"38":{"ann":"{v : GHC.Types.Int | v >= 1}","ident":"ds_d39u","row":172,"col":38},"24":{"ann":"{VV : a | VV == x}","ident":"x","row":172,"col":24}},"334":{"36":{"ann":"((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | root (fst x9) <= VV})])","ident":"lq_anf$##7205759403792806204","row":334,"col":36},"63":{"ann":"{v : (Data.Heap.Binominal.Heap a) | 0 < len (unheap v)\n                                    && heapSize v >= 0\n                                    && v == h}","ident":"h","row":334,"col":63},"47":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | 0 < len v\n                                      && sumSizeList v == heapSize h}","ident":"lq_anf$##7205759403792806203","row":334,"col":47}},"149":{"7":{"ann":"[{v : (Data.Heap.Binominal.Tree a) | size v <= sumSizeList ts}]","ident":"ih","row":149,"col":7},"36":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts}","ident":"ts","row":149,"col":36},"12":{"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> [{t : (Data.Heap.Binominal.Tree a) | size t <= sumSizeList x1}]","ident":"Data.Heap.Binominal.boundedSizeSubtreeLemma","row":149,"col":12}},"185":{"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\n(Data.Heap.Binominal.Tree a) -> (Data.Set.Internal.Set a)","ident":"Data.Heap.Binominal.eltsTree","row":185,"col":1},"10":{"ann":"(Data.Heap.Binominal.Tree a)","ident":"t","row":185,"col":10}},"258":{"17":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":258,"col":17},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Tree a) -> x3:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == size x2 + sumSizeList x3}","ident":"Data.Heap.Binominal.insert'","row":258,"col":1},"16":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | Set_emp (listElts v)\n                                      && len v == 0\n                                      && lubRank v == 0\n                                      && sumSizeList v == 0\n                                      && maxRankList v == 0}","ident":"lq_anf$##7205759403792806092","row":258,"col":16},"9":{"ann":"(Data.Heap.Binominal.Tree a)","ident":"t","row":258,"col":9}},"43":{"1":{"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {VV : GHC.Types.Int | VV == sumSizeList x1\n                                                           && VV >= 0\n                                                           && len x1 <= VV}","ident":"Data.Heap.Binominal.sumSizeList","row":43,"col":1},"18":{"ann":"{v : GHC.Prim.Int# | v == 0}","ident":"lq_anf$##7205759403792806047","row":43,"col":18}},"398":{"28":{"ann":"x1:[a] -> {v : (Data.Heap.Binominal.Heap a) | heapSize v == len x1}","ident":"lq_anf$##7205759403792806214","row":398,"col":28},"17":{"ann":"x1:(Data.Heap.Binominal.Heap a) -> {v : [a]<\\x5 VV -> {VV : a | x5 <= VV}> | len v == heapSize x1}","ident":"lq_anf$##7205759403792806213","row":398,"col":17},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:[a] -> {VV : [a]<\\x1 VV -> {VV : a | x1 <= VV}> | len VV == len x2}","ident":"Data.Heap.Binominal.sortUsingHeap","row":398,"col":1}},"112":{"1":{"ann":"forall a .\nx1:(Data.Heap.Binominal.Tree a) -> {VV : (Data.Heap.Binominal.Tree {VV : a | root x1 <= VV}) | size VV == size x1}","ident":"Data.Heap.Binominal.treeIsBoundedByItsRootLemma","row":112,"col":1}},"57":{"7":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == len (subtrees x)\n                     && v == rank x}","ident":"r","row":57,"col":7},"16":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == x}","ident":"x","row":57,"col":16},"11":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == len (subtrees x)\n                     && v == rank x}","ident":"_","row":57,"col":11}},"75":{"22":{"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {VV : GHC.Types.Int | VV == sumSizeList x1\n                                                           && VV >= 0\n                                                           && len x1 <= VV}","ident":"Data.Heap.Binominal.sumSizeList","row":75,"col":22},"1":{"ann":"forall a .\nx1:(Data.Heap.Binominal.Heap a) -> {VV : GHC.Types.Int | VV == heapSize x1\n                                                         && VV >= 0\n                                                         && len (unheap x1) <= VV}","ident":"Data.Heap.Binominal.heapSize","row":75,"col":1},"34":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts}","ident":"ts","row":75,"col":34}},"371":{"17":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0}","ident":"ds_d3aS","row":371,"col":17}},"151":{"7":{"ann":"{v : GHC.Types.Int | v == sumSizeList ts\n                     && v >= 0\n                     && len ts <= v}","ident":"sizets","row":151,"col":7},"28":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts}","ident":"ts","row":151,"col":28},"16":{"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {VV : GHC.Types.Int | VV == sumSizeList x1\n                                                           && VV >= 0\n                                                           && len x1 <= VV}","ident":"Data.Heap.Binominal.sumSizeList","row":151,"col":16}},"353":{"13":{"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | root t' <= VV})] | len v >= 0\n                                                             && lubRank v >= 0\n                                                             && sumSizeList v >= 0\n                                                             && maxRankList v >= 0\n                                                             && v == ts'}","ident":"ts'","row":353,"col":13},"6":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t'}","ident":"t'","row":353,"col":6},"10":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x' <= VV}) | size v == size tBounded\n                                                      && v == hd}","ident":"hd","row":353,"col":10}},"335":{"25":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList ts1}","ident":"lq_anf$##7205759403792806207","row":335,"col":25},"12":{"ann":"(Data.Heap.Binominal.Heap a)","ident":"lq_anf$##7205759403792806209","row":335,"col":12},"17":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"lq_anf$##7205759403792806208","row":335,"col":17},"4":{"ann":"{VV : a | VV == minElt}","ident":"minElt","row":335,"col":4},"47":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts2}","ident":"ts2","row":335,"col":47},"42":{"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | minElt <= VV})] | lubRank v >= 0\n                                                            && sumSizeList v >= 0\n                                                            && len v >= 0\n                                                            && maxRankList v >= 0\n                                                            && v == ts1}","ident":"ts1","row":335,"col":42}},"173":{"51":{"ann":"(Data.Set.Internal.Set a)","ident":"lq_anf$##7205759403792806149","row":173,"col":51},"36":{"ann":"(Data.Set.Internal.Set a)","ident":"lq_anf$##7205759403792806147","row":173,"col":36},"62":{"ann":"{v : (Data.Heap.Binominal.Tree a) | subtrees v == ts\n                                    && root v == x\n                                    && v == remainder}","ident":"remainder","row":173,"col":62},"20":{"ann":"{v : (Data.Set.Internal.Set a) | v == Set_sng x}","ident":"lq_anf$##7205759403792806146","row":173,"col":20},"11":{"ann":"(Data.Set.Internal.Set a)","ident":"lq_anf$##7205759403792806148","row":173,"col":11},"33":{"ann":"{VV : a | VV == x}","ident":"x","row":173,"col":33},"47":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x <= VV}) | v == t}","ident":"t","row":173,"col":47}},"234":{"14":{"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | Set_emp (listElts v)\n                                            && len v == 0\n                                            && lubRank v == 0\n                                            && sumSizeList v == 0\n                                            && maxRankList v == 0}","ident":"_","row":234,"col":14},"1":{"ann":"forall a . {v : (Data.Heap.Binominal.Heap a) | heapSize v == 0}","ident":"Data.Heap.Binominal.empty","row":234,"col":1}},"118":{"30":{"ann":"a","ident":"x","row":118,"col":30},"1":{"ann":"forall a .\nx1:a -> x2:{VV : a | x1 <= VV} -> x3:(Data.Heap.Binominal.Tree {VV : a | x2 <= VV}) -> {VV : (Data.Heap.Binominal.Tree {VV : a | x1 <= VV}) | size VV == size x3}","ident":"Data.Heap.Binominal.boundedTreeTransitivityLemma","row":118,"col":1},"34":{"ann":"(Data.Heap.Binominal.Tree {VV : a | y <= VV})","ident":"tree","row":118,"col":34},"32":{"ann":"{VV : a | x <= VV}","ident":"y","row":118,"col":32}},"44":{"43":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == xs}","ident":"xs","row":44,"col":43},"31":{"ann":"{v : GHC.Types.Int | v == sumSizeList xs\n                     && v >= 0\n                     && len xs <= v}","ident":"lq_anf$##7205759403792806049","row":44,"col":31},"22":{"ann":"{v : GHC.Types.Int | v >= 1\n                     && v == 1 + sumSizeList (subtrees x)\n                     && v == size x}","ident":"lq_anf$##7205759403792806048","row":44,"col":22},"27":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == x}","ident":"x","row":44,"col":27}},"189":{"27":{"ann":"(Data.Set.Internal.Set a)","ident":"lq_anf$##7205759403792806166","row":189,"col":27},"11":{"ann":"{v : (Data.Set.Internal.Set a) | v == Set_sng x}","ident":"lq_anf$##7205759403792806165","row":189,"col":11},"38":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == boundByOverallSize}","ident":"boundByOverallSize","row":189,"col":38},"3":{"ann":"(Data.Set.Internal.Set a)","ident":"lq_anf$##7205759403792806167","row":189,"col":3},"24":{"ann":"{VV : a | VV == x}","ident":"x","row":189,"col":24}},"308":{"37":{"ann":"forall a .\nx1:{v : (Data.Heap.Binominal.Heap a) | 0 < len (unheap v)} -> {v : [(Data.Heap.Binominal.Tree a)] | 0 < len v\n                                                                                                    && sumSizeList v == heapSize x1}","ident":"_","row":308,"col":37},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\n{VV : (Data.Heap.Binominal.Heap a) | 0 < len (unheap VV)} -> a","ident":"Data.Heap.Binominal.minimum","row":308,"col":1},"18":{"ann":"forall a b . x1:(a, b) -> {VV : a | VV == fst x1}","ident":"_","row":308,"col":18},"11":{"ann":"forall a .\nx1:(Data.Heap.Binominal.Tree a) -> {VV : a | VV == root x1}","ident":"_","row":308,"col":11},"24":{"ann":"x1:{v : [(Data.Heap.Binominal.Tree a)] | 0 < len v} -> {v : ((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | root (fst x15) <= VV})]) | size (fst v) + sumSizeList (snd v) == sumSizeList x1}","ident":"lq_anf$##7205759403792806193","row":308,"col":24}},"128":{"15":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | tail v == xs\n                                      && head v == x\n                                      && listElts v == Set_cup (Set_sng x) (listElts xs)\n                                      && len v == 1 + len xs\n                                      && lubRank v == 1 + maxRankList (: x xs)\n                                      && sumSizeList v == size x + sumSizeList xs\n                                      && maxRankList v == (if rank x < maxRankList xs then maxRankList xs else rank x)}","ident":"lq_anf$##7205759403792806155","row":128,"col":15},"16":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == x}","ident":"x","row":128,"col":16},"20":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == xs}","ident":"xs","row":128,"col":20},"3":{"ann":"{v : GHC.Types.Int | v >= 0}","ident":"lq_anf$##7205759403792806156","row":128,"col":3}},"333":{"12":{"ann":"{VV : (Data.Heap.Binominal.Heap a) | 0 < len (unheap VV)}","ident":"h","row":333,"col":12},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:{VV : (Data.Heap.Binominal.Heap a) | 0 < len (unheap VV)} -> (a, (Data.Heap.Binominal.Heap a))<\\x1 VV -> {v : (Data.Heap.Binominal.Heap {VV : a | x1 <= VV}) | 1 + heapSize v == heapSize x2}>","ident":"Data.Heap.Binominal.deleteMin2","row":333,"col":1}},"113":{"43":{"ann":"{v : GHC.Types.Int | v >= 1}","ident":"ds_d3a7","row":113,"col":43},"14":{"ann":"{v : GHC.Types.Int | v >= 0}","ident":"ds_d3a6","row":113,"col":14},"22":{"ann":"a","ident":"ds_d3a4","row":113,"col":22},"34":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0}","ident":"ds_d3a5","row":113,"col":34},"3":{"ann":"forall a .\nx1:a -> x2:[(Data.Heap.Binominal.Tree {VV : a | x1 <= VV})] -> x3:{v : GHC.Types.Int | v >= 0\n                                                                                       && v == len x2} -> x4:{v : GHC.Types.Int | v >= 1\n                                                                                                                                  && v == 1 + sumSizeList x2} -> {v : (Data.Heap.Binominal.Tree a) | size v == x4\n                                                                                                                                                                                                     && rank v == x3\n                                                                                                                                                                                                     && subtrees v == x2\n                                                                                                                                                                                                     && root v == x1}","ident":"Data.Heap.Binominal.Node","row":113,"col":3}},"210":{"1":{"ann":"forall a . {VV : GHC.Types.Bool | VV} -> a -> a","ident":"Data.Heap.Binominal.assert","row":210,"col":1},"10":{"ann":"a","ident":"x","row":210,"col":10}},"254":{"36":{"ann":"{v : (Data.Heap.Binominal.Tree a) | root v == x}","ident":"lq_anf$##7205759403792806104","row":254,"col":36},"49":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806103","row":254,"col":49},"22":{"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {v : (Data.Heap.Binominal.Heap a) | unheap v == x1\n                                                                         && heapSize v == sumSizeList x1}","ident":"Data.Heap.Binominal.Heap","row":254,"col":22},"44":{"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | Set_emp (listElts v)\n                                            && len v == 0\n                                            && lubRank v == 0\n                                            && sumSizeList v == 0\n                                            && maxRankList v == 0}","ident":"_","row":254,"col":44},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\na -> x3:(Data.Heap.Binominal.Heap a) -> {v : (Data.Heap.Binominal.Heap a) | 1 + heapSize x3 == heapSize v}","ident":"Data.Heap.Binominal.insert","row":254,"col":1},"52":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts}","ident":"ts","row":254,"col":52},"27":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"lq_anf$##7205759403792806105","row":254,"col":27},"8":{"ann":"a","ident":"x","row":254,"col":8},"47":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806101","row":254,"col":47},"42":{"ann":"{VV : a | VV == x}","ident":"x","row":254,"col":42}},"350":{"12":{"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | x <= VV})] | sumSizeList v == sumSizeList ts'\n                                                       && lubRank v >= 0\n                                                       && sumSizeList v >= 0\n                                                       && len v >= 0\n                                                       && maxRankList v >= 0\n                                                       && v == tl}","ident":"tl","row":350,"col":12},"6":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":350,"col":6},"9":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x <= VV}) | size v == size tBounded'\n                                                     && v == hd}","ident":"hd","row":350,"col":9}},"152":{"48":{"ann":"{v : GHC.Types.Int | v == sumSizeList ts\n                     && v >= 0\n                     && len ts <= v\n                     && v == sizets}","ident":"sizets","row":152,"col":48},"7":{"ann":"[{v : (Data.Heap.Binominal.Tree a) | size v <= sizetts}]","ident":"refinedSubtrees","row":152,"col":7},"25":{"ann":"[{v : (Data.Heap.Binominal.Tree a) | size v <= sizetts}]","ident":"_","row":152,"col":25},"58":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == size t + sumSizeList ts\n                     && sumSizeList ts < v\n                     && v == sizetts}","ident":"sizetts","row":152,"col":58},"55":{"ann":"{v : [{v : (Data.Heap.Binominal.Tree a) | size v <= sumSizeList ts}] | lubRank v >= 0\n                                                                       && sumSizeList v >= 0\n                                                                       && len v >= 0\n                                                                       && maxRankList v >= 0\n                                                                       && v == ih}","ident":"ih","row":152,"col":55}},"170":{"29":{"ann":"forall a .\nx1:a -> {v : (Data.Set.Internal.Set a) | v == Set_sng x1}","ident":"Data.Set.Internal.singleton","row":170,"col":29},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\n(Data.Heap.Binominal.Tree a) -> (Data.Set.Internal.Set a)","ident":"Data.Heap.Binominal.eltsTree'","row":170,"col":1},"41":{"ann":"{VV : a | VV == x}","ident":"x","row":170,"col":41}},"314":{"44":{"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | Set_emp (listElts v)\n                                            && len v == 0\n                                            && lubRank v == 0\n                                            && sumSizeList v == 0\n                                            && maxRankList v == 0}","ident":"_","row":314,"col":44},"17":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"xs","row":314,"col":17},"1":{"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList x1}","ident":"Data.Heap.Binominal.reverseHeapList","row":314,"col":1},"41":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == xs}","ident":"xs","row":314,"col":41}},"349":{"14":{"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | x <= VV})] | sumSizeList v == sumSizeList ts'}","ident":"_","row":349,"col":14},"49":{"ann":"{VV : a | VV == root t'\n          && VV == x'}","ident":"x'","row":349,"col":49},"52":{"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | root t' <= VV})] | len v >= 0\n                                                             && lubRank v >= 0\n                                                             && sumSizeList v >= 0\n                                                             && maxRankList v >= 0\n                                                             && v == ts'}","ident":"ts'","row":349,"col":52},"47":{"ann":"{VV : a | VV == root t\n          && VV == x}","ident":"x","row":349,"col":47},"9":{"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | x <= VV})] | sumSizeList v == sumSizeList ts'}","ident":"tl","row":349,"col":9}},"187":{"61":{"ann":"{v : GHC.Types.Int | v == sumSizeList ts\n                     && v >= 0\n                     && len ts <= v}","ident":"lq_anf$##7205759403792806159","row":187,"col":61},"7":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"boundByOverallSize","row":187,"col":7},"78":{"ann":"{v : [{v : (Data.Heap.Binominal.Tree a) | size v <= sumSizeList ts}] | lubRank v >= 0\n                                                                       && sumSizeList v >= 0\n                                                                       && len v >= 0\n                                                                       && maxRankList v >= 0\n                                                                       && v == boundBySumSizeList}","ident":"boundBySumSizeList","row":187,"col":78},"28":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"_","row":187,"col":28},"74":{"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | x <= VV})] | lubRank v >= 0\n                                                       && sumSizeList v >= 0\n                                                       && len v >= 0\n                                                       && maxRankList v >= 0\n                                                       && v == ts}","ident":"ts","row":187,"col":74},"103":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t\n                                    && size v == sz\n                                    && rank v == r\n                                    && subtrees v == ts\n                                    && root v == x\n                                    && v == Node x ts r sz}","ident":"lq_anf$##7205759403792806158","row":187,"col":103},"97":{"ann":"{v : GHC.Types.Int | v >= 1}","ident":"lq_anf$##7205759403792806160","row":187,"col":97}},"188":{"28":{"ann":"{v : GHC.Types.Int | v >= 1}","ident":"lq_anf$##7205759403792806162","row":188,"col":28},"23":{"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | x <= VV})] | lubRank v >= 0\n                                                       && sumSizeList v >= 0\n                                                       && len v >= 0\n                                                       && maxRankList v >= 0\n                                                       && v == ts}","ident":"ts","row":188,"col":23},"11":{"ann":"{v : GHC.Types.Int | v == sumSizeList ts\n                     && v >= 0\n                     && len ts <= v}","ident":"lq_anf$##7205759403792806161","row":188,"col":11},"33":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t\n                                    && size v == sz\n                                    && rank v == r\n                                    && subtrees v == ts\n                                    && root v == x\n                                    && v == Node x ts r sz}","ident":"lq_anf$##7205759403792806158","row":188,"col":33},"3":{"ann":"(Data.Set.Internal.Set a) -> (Data.Set.Internal.Set a)","ident":"lq_anf$##7205759403792806164","row":188,"col":3},"10":{"ann":"GHC.Types.Bool","ident":"lq_anf$##7205759403792806163","row":188,"col":10}},"393":{"22":{"ann":"(a, (Data.Heap.Binominal.Heap a))<\\x4 VV -> (Data.Heap.Binominal.Heap {VV : a | x4 <= VV})>","ident":"_","row":393,"col":22},"16":{"ann":"(Data.Heap.Binominal.Heap {VV : a | minElt <= VV\n                                    && VV >= minElt})","ident":"h'","row":393,"col":16},"8":{"ann":"a","ident":"minElt","row":393,"col":8},"33":{"ann":"{v : (Data.Heap.Binominal.Heap a) | heapSize v >= 0}","ident":"ds_d3cM","row":393,"col":33}},"265":{"15":{"ann":"forall a . {v : (Data.Heap.Binominal.Heap a) | heapSize v == 0}","ident":"_","row":265,"col":15},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:[a] -> {v : (Data.Heap.Binominal.Heap a) | heapSize v == len x2}","ident":"Data.Heap.Binominal.fromList","row":265,"col":1}},"1":{"1":{"ann":"GHC.Types.Module","ident":"Data.Heap.Binominal.$trModule","row":1,"col":1}},"339":{"22":{"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | Set_emp (listElts v)\n                                            && len v == 0\n                                            && lubRank v == 0\n                                            && sumSizeList v == 0\n                                            && maxRankList v == 0}","ident":"_","row":339,"col":22},"19":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":339,"col":19},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:{VV : [(Data.Heap.Binominal.Tree a)] | 0 < len VV} -> {v : ((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | root (fst v) <= VV})]) | size (fst v) + sumSizeList (snd v) == sumSizeList x2}","ident":"Data.Heap.Binominal.deleteMin'","row":339,"col":1},"18":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | Set_emp (listElts v)\n                                      && len v == 0\n                                      && lubRank v == 0\n                                      && sumSizeList v == 0\n                                      && maxRankList v == 0}","ident":"lq_anf$##7205759403792806134","row":339,"col":18}},"122":{"36":{"ann":"{VV : a | x <= VV}","ident":"y","row":122,"col":36},"1":{"ann":"forall a .\nx1:a -> x2:{VV : a | x1 <= VV} -> x3:[(Data.Heap.Binominal.Tree {VV : a | x2 <= VV})] -> {v : [(Data.Heap.Binominal.Tree {VV : a | x1 <= VV})] | sumSizeList v == sumSizeList x3}","ident":"Data.Heap.Binominal.boundedTreeListTransitivityLemma","row":122,"col":1},"34":{"ann":"a","ident":"x","row":122,"col":34},"38":{"ann":"[(Data.Heap.Binominal.Tree {VV : a | y <= VV})]","ident":"ts","row":122,"col":38}},"238":{"19":{"ann":"{v : (Data.Heap.Binominal.Heap a) | heapSize v >= 0\n                                    && v == h}","ident":"h","row":238,"col":19},"1":{"ann":"forall a .\nx1:(Data.Heap.Binominal.Heap a) -> {v : GHC.Types.Bool | v <=> heapSize x1 == 0}","ident":"Data.Heap.Binominal.null","row":238,"col":1},"24":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806053","row":238,"col":24},"6":{"ann":"(Data.Heap.Binominal.Heap a)","ident":"h","row":238,"col":6},"10":{"ann":"{v : GHC.Types.Int | v == heapSize h\n                     && v >= 0\n                     && len (unheap h) <= v}","ident":"lq_anf$##7205759403792806051","row":238,"col":10}},"346":{"6":{"ann":"{VV : a | VV == root t\n          && VV == x}","ident":"x","row":346,"col":6},"10":{"ann":"{VV : a | VV == root t'\n          && VV == x'}","ident":"x'","row":346,"col":10}},"343":{"7":{"ann":"{VV : a | VV == root t'}","ident":"x'","row":343,"col":7},"12":{"ann":"{VV : a | VV == root t'}","ident":"_","row":343,"col":12},"17":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t'}","ident":"t'","row":343,"col":17}},"242":{"28":{"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | Set_emp (listElts v)\n                                            && len v == 0\n                                            && lubRank v == 0\n                                            && sumSizeList v == 0\n                                            && maxRankList v == 0}","ident":"_","row":242,"col":28},"31":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806179","row":242,"col":31},"1":{"ann":"forall a .\na -> {v : (Data.Heap.Binominal.Heap a) | heapSize v == 1}","ident":"Data.Heap.Binominal.singleton","row":242,"col":1},"26":{"ann":"{VV : a | VV == x}","ident":"x","row":242,"col":26},"20":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"lq_anf$##7205759403792806184","row":242,"col":20},"11":{"ann":"a","ident":"x","row":242,"col":11},"33":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806181","row":242,"col":33},"21":{"ann":"{v : (Data.Heap.Binominal.Tree a) | root v == x}","ident":"lq_anf$##7205759403792806182","row":242,"col":21}},"224":{"25":{"ann":"(Data.Heap.Binominal.Tree a)","ident":"_","row":224,"col":25},"53":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2\n                                    && size v == sz2\n                                    && rank v == r2\n                                    && subtrees v == ts2\n                                    && root v == v\n                                    && v == Node v ts2 r2 sz2}","ident":"lq_anf$##7205759403792806078","row":224,"col":53},"9":{"ann":"(Data.Heap.Binominal.Tree a)","ident":"t2BoundedByX2","row":224,"col":9}},"194":{"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\n[(Data.Heap.Binominal.Tree a)] -> (Data.Set.Internal.Set a)","ident":"Data.Heap.Binominal.eltsTrees","row":194,"col":1},"16":{"ann":"forall a . {v : (Data.Set.Internal.Set a) | Set_emp v}","ident":"_","row":194,"col":16}},"260":{"28":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0}","ident":"ds_d3aw","row":260,"col":28},"14":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == len (subtrees t')\n                     && v == rank t'}","ident":"lq_anf$##7205759403792806094","row":260,"col":14},"19":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t'}","ident":"t'","row":260,"col":19},"5":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == len (subtrees t)\n                     && v == rank t}","ident":"lq_anf$##7205759403792806093","row":260,"col":5},"24":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":260,"col":24},"10":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":260,"col":10}},"127":{"15":{"ann":"{v : GHC.Types.Int | v >= 1\n                     && v == 1 + sumSizeList (subtrees x)\n                     && v == size x}","ident":"lq_anf$##7205759403792806152","row":127,"col":15},"20":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == x}","ident":"x","row":127,"col":20},"11":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806151","row":127,"col":11},"3":{"ann":"GHC.Types.Int -> GHC.Types.Int","ident":"lq_anf$##7205759403792806154","row":127,"col":3},"10":{"ann":"GHC.Types.Bool","ident":"lq_anf$##7205759403792806153","row":127,"col":10}},"59":{"18":{"ann":"{v : GHC.Types.Int | v == maxRankList xs\n                     && v >= 0\n                     && v == r'}","ident":"r'","row":59,"col":18},"26":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == len (subtrees x)\n                     && v == rank x\n                     && v == r}","ident":"r","row":59,"col":26},"6":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == len (subtrees x)\n                     && v == rank x\n                     && v == r}","ident":"r","row":59,"col":6},"10":{"ann":"{v : GHC.Types.Int | v == maxRankList xs\n                     && v >= 0\n                     && v == r'}","ident":"r'","row":59,"col":10}},"214":{"1":{"ann":"forall a b .\nx1:a -> (Data.Heap.Binominal.Tree {VV : a | x1 <= VV}) -> b -> b","ident":"Data.Heap.Binominal.assertLBTree","row":214,"col":1},"18":{"ann":"a","ident":"x","row":214,"col":18}},"70":{"14":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806060","row":70,"col":14},"30":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0}","ident":"ds_d3dp","row":70,"col":30},"18":{"ann":"{v : GHC.Types.Int | v >= 0}","ident":"lq_anf$##7205759403792806061","row":70,"col":18}},"348":{"48":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t' <= VV}) | size v == size t'\n                                                           && v == tBounded'}","ident":"tBounded'","row":348,"col":48},"43":{"ann":"{VV : a | VV == root t\n          && VV == x}","ident":"x","row":348,"col":43},"14":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x <= VV}) | size v == size tBounded'}","ident":"_","row":348,"col":14},"45":{"ann":"{VV : a | VV == root t'\n          && VV == x'}","ident":"x'","row":348,"col":45},"9":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x <= VV}) | size v == size tBounded'}","ident":"hd","row":348,"col":9}},"186":{"7":{"ann":"[{v : (Data.Heap.Binominal.Tree a) | size v <= sumSizeList ts}]","ident":"boundBySumSizeList","row":186,"col":7},"28":{"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> [{t : (Data.Heap.Binominal.Tree a) | size t <= sumSizeList x1}]","ident":"Data.Heap.Binominal.boundedSizeSubtreeLemma","row":186,"col":28},"53":{"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | x <= VV})] | lubRank v >= 0\n                                                       && sumSizeList v >= 0\n                                                       && len v >= 0\n                                                       && maxRankList v >= 0\n                                                       && v == ts}","ident":"ts","row":186,"col":53}},"69":{"14":{"ann":"{v : GHC.Prim.Int# | v == 0}","ident":"lq_anf$##7205759403792806062","row":69,"col":14},"1":{"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {VV : GHC.Types.Int | VV == lubRank x1\n                                                           && VV >= 0}","ident":"Data.Heap.Binominal.lubRank","row":69,"col":1}},"135":{"1":{"ann":"forall a .\nx1:{VV : GHC.Types.Int | VV >= 0} -> [{t : (Data.Heap.Binominal.Tree a) | size t <= x1}] -> x3:{VV : GHC.Types.Int | VV >= 0\n                                                                                                                     && x1 <= VV} -> [{t : (Data.Heap.Binominal.Tree a) | size t <= x3}]","ident":"Data.Heap.Binominal.subtreeTransitiveLemma","row":135,"col":1},"26":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"ts","row":135,"col":26}},"373":{"15":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == len (subtrees t2)\n                     && v == rank t2}","ident":"lq_anf$##7205759403792806111","row":373,"col":15},"37":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts1'}","ident":"ts1'","row":373,"col":37},"25":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1}","ident":"t1","row":373,"col":25},"30":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"lq_anf$##7205759403792806121","row":373,"col":30},"20":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2}","ident":"t2","row":373,"col":20},"5":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == len (subtrees t1)\n                     && v == rank t1}","ident":"lq_anf$##7205759403792806110","row":373,"col":5},"42":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0}","ident":"ds_d3aS","row":373,"col":42},"10":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1}","ident":"t1","row":373,"col":10}},"153":{"25":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":153,"col":25},"17":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == size t + sumSizeList ts\n                     && sumSizeList ts < v\n                     && v == sizetts}","ident":"sizetts","row":153,"col":17},"27":{"ann":"{v : [{v : (Data.Heap.Binominal.Tree a) | size v <= sizetts}] | lubRank v >= 0\n                                                                && sumSizeList v >= 0\n                                                                && len v >= 0\n                                                                && maxRankList v >= 0\n                                                                && v == refinedSubtrees}","ident":"refinedSubtrees","row":153,"col":27}},"266":{"28":{"ann":"{v : (Data.Heap.Binominal.Heap a) | heapSize v == len xs}","ident":"lq_anf$##7205759403792806176","row":266,"col":28},"19":{"ann":"{v : (GHC.Classes.Ord a) | v == $dOrd_a2SG}","ident":"$dOrd_a2SG","row":266,"col":19},"26":{"ann":"{VV : a | VV == x}","ident":"x","row":266,"col":26},"38":{"ann":"{v : [a] | lubRank v >= 0\n           && sumSizeList v >= 0\n           && len v >= 0\n           && maxRankList v >= 0\n           && v == xs}","ident":"xs","row":266,"col":38}},"323":{"1":{"ann":"forall a .\nx1:{VV : (Data.Heap.Binominal.Heap a) | 0 < len (unheap VV)} -> {VV : [(Data.Heap.Binominal.Tree a)] | 0 < len VV\n                                                                                                       && sumSizeList VV == heapSize x1}","ident":"Data.Heap.Binominal.unheapNonempty","row":323,"col":1},"34":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts}","ident":"lq_anf$##7205759403792806189","row":323,"col":34}},"318":{"29":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == acc}","ident":"acc","row":318,"col":29},"1":{"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> x2:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList x1 + sumSizeList x2}","ident":"Data.Heap.Binominal.reverseHeapListAux","row":318,"col":1},"23":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"acc","row":318,"col":23}},"147":{"30":{"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | Set_emp (listElts v)\n                                            && len v == 0\n                                            && lubRank v == 0\n                                            && sumSizeList v == 0\n                                            && maxRankList v == 0}","ident":"_","row":147,"col":30},"1":{"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> [{t : (Data.Heap.Binominal.Tree a) | size t <= sumSizeList x1}]","ident":"Data.Heap.Binominal.boundedSizeSubtreeLemma","row":147,"col":1}},"345":{"7":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t' <= VV}) | size v == size t'}","ident":"tBounded'","row":345,"col":7},"19":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t' <= VV}) | size v == size t'}","ident":"_","row":345,"col":19},"47":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t'}","ident":"t'","row":345,"col":47}},"222":{"30":{"ann":"(Data.Heap.Binominal.Tree a)","ident":"t2","row":222,"col":30},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Tree a) -> x3:(Data.Heap.Binominal.Tree a) -> {v : (Data.Heap.Binominal.Tree a) | size v == size x2 + size x3}","ident":"Data.Heap.Binominal.link","row":222,"col":1},"6":{"ann":"(Data.Heap.Binominal.Tree a)","ident":"t1","row":222,"col":6}},"200":{"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\n[(Data.Heap.Binominal.Tree a)] -> [(Data.Set.Internal.Set a)]","ident":"Data.Heap.Binominal.mapEltsTree","row":200,"col":1},"18":{"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | Set_emp (listElts v)\n                                            && len v == 0\n                                            && lubRank v == 0\n                                            && sumSizeList v == 0\n                                            && maxRankList v == 0}","ident":"_","row":200,"col":18}},"195":{"28":{"ann":"(Data.Set.Internal.Set a)","ident":"lq_anf$##7205759403792806169","row":195,"col":28},"52":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts}","ident":"ts","row":195,"col":52},"20":{"ann":"{v : (GHC.Classes.Ord a) | v == $dOrd_a30n}","ident":"$dOrd_a30n","row":195,"col":20},"41":{"ann":"(Data.Set.Internal.Set a)","ident":"lq_anf$##7205759403792806170","row":195,"col":41},"38":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":195,"col":38}},"261":{"44":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts'}","ident":"ts'","row":261,"col":44},"40":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t'}","ident":"t'","row":261,"col":40},"38":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":261,"col":38},"24":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Tree a) -> x3:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == size x2 + sumSizeList x3}","ident":"Data.Heap.Binominal.insert'","row":261,"col":24},"32":{"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t + size t'}","ident":"lq_anf$##7205759403792806097","row":261,"col":32}},"126":{"1":{"ann":"forall a .\nx1:(Data.Heap.Binominal.Tree a) -> x2:[(Data.Heap.Binominal.Tree a)] -> {VV : GHC.Types.Int | VV >= 0\n                                                                                              && VV == size x1 + sumSizeList x2\n                                                                                              && sumSizeList x2 < VV}","ident":"Data.Heap.Binominal.sublistSizeLemma","row":126,"col":1},"18":{"ann":"(Data.Heap.Binominal.Tree a)","ident":"x","row":126,"col":18},"20":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"xs","row":126,"col":20}},"58":{"7":{"ann":"{v : GHC.Types.Int | v == maxRankList xs\n                     && v >= 0}","ident":"r'","row":58,"col":7},"12":{"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {VV : GHC.Types.Int | VV == maxRankList x1\n                                                           && VV >= 0}","ident":"Data.Heap.Binominal.maxRankList","row":58,"col":12},"24":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == xs}","ident":"xs","row":58,"col":24}},"342":{"7":{"ann":"{VV : a | VV == root t}","ident":"x","row":342,"col":7},"16":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":342,"col":16},"11":{"ann":"{VV : a | VV == root t}","ident":"_","row":342,"col":11}},"225":{"25":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x1 <= VV}) | size v == size t2BoundedByX2}","ident":"_","row":225,"col":25},"57":{"ann":"{VV : a | VV == x2}","ident":"x2","row":225,"col":57},"60":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2BoundedByX2}","ident":"t2BoundedByX2","row":225,"col":60},"9":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x1 <= VV}) | size v == size t2BoundedByX2}","ident":"t2BoundedByX1","row":225,"col":9},"54":{"ann":"{VV : a | VV == x1}","ident":"x1","row":225,"col":54}},"80":{"25":{"ann":"{v : GHC.Prim.Int# | v == 1}","ident":"lq_anf$##7205759403792806075","row":80,"col":25},"13":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == n}","ident":"n","row":80,"col":13},"36":{"ann":"{VV : GHC.Types.Int | VV >= 1}","ident":"lq_anf$##7205759403792806074","row":80,"col":36},"1":{"ann":"{VV : GHC.Types.Int | VV >= 0} -> {VV : GHC.Types.Int | VV >= 1}","ident":"Data.Heap.Binominal.pow2","row":80,"col":1},"18":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806066","row":80,"col":18},"46":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806072","row":80,"col":46},"41":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806073","row":80,"col":41},"42":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == n}","ident":"n","row":80,"col":42},"6":{"ann":"{VV : GHC.Types.Int | VV >= 0}","ident":"n","row":80,"col":6},"32":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806070","row":80,"col":32}},"374":{"15":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == len (subtrees t1)\n                     && v == rank t1}","ident":"lq_anf$##7205759403792806115","row":374,"col":15},"37":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts1}","ident":"ts1","row":374,"col":37},"25":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2}","ident":"t2","row":374,"col":25},"30":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList ts1 + sumSizeList ts2'}","ident":"lq_anf$##7205759403792806120","row":374,"col":30},"20":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1}","ident":"t1","row":374,"col":20},"5":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == len (subtrees t2)\n                     && v == rank t2}","ident":"lq_anf$##7205759403792806114","row":374,"col":5},"41":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts2'}","ident":"ts2'","row":374,"col":41},"10":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2}","ident":"t2","row":374,"col":10}},"329":{"16":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList ts1}","ident":"lq_anf$##7205759403792806201","row":329,"col":16},"8":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"lq_anf$##7205759403792806202","row":329,"col":8},"33":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts1}","ident":"ts1","row":329,"col":33},"38":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts2}","ident":"ts2","row":329,"col":38}},"55":{"1":{"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {VV : GHC.Types.Int | VV == maxRankList x1\n                                                           && VV >= 0}","ident":"Data.Heap.Binominal.maxRankList","row":55,"col":1},"18":{"ann":"{v : GHC.Prim.Int# | v == 0}","ident":"lq_anf$##7205759403792806055","row":55,"col":18}},"228":{"25":{"ann":"(Data.Heap.Binominal.Tree a)","ident":"_","row":228,"col":25},"53":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1\n                                    && size v == sz1\n                                    && rank v == r1\n                                    && subtrees v == ts1\n                                    && root v == x1\n                                    && v == Node x1 ts1 r1 sz1}","ident":"lq_anf$##7205759403792806077","row":228,"col":53},"9":{"ann":"(Data.Heap.Binominal.Tree a)","ident":"t1BoundedByX1","row":228,"col":9}},"366":{"48":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts2}","ident":"ts2","row":366,"col":48},"31":{"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {v : (Data.Heap.Binominal.Heap a) | unheap v == x1\n                                                                         && heapSize v == sumSizeList x1}","ident":"Data.Heap.Binominal.Heap","row":366,"col":31},"36":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList ts1 + sumSizeList ts2}","ident":"lq_anf$##7205759403792806126","row":366,"col":36},"44":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts1}","ident":"ts1","row":366,"col":44},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Heap a) -> x3:(Data.Heap.Binominal.Heap a) -> {VV : (Data.Heap.Binominal.Heap a) | heapSize VV == heapSize x2 + heapSize x3}","ident":"Data.Heap.Binominal.merge","row":366,"col":1}},"344":{"7":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t <= VV}) | size v == size t}","ident":"tBounded","row":344,"col":7},"18":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t <= VV}) | size v == size t}","ident":"_","row":344,"col":18},"46":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":344,"col":46}},"223":{"5":{"ann":"{VV : a | VV == x1}","ident":"x1","row":223,"col":5},"11":{"ann":"{VV : a | VV == x2}","ident":"x2","row":223,"col":11}},"201":{"31":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":201,"col":31},"22":{"ann":"(Data.Set.Internal.Set a)","ident":"lq_anf$##7205759403792806172","row":201,"col":22},"35":{"ann":"[(Data.Set.Internal.Set a)]","ident":"lq_anf$##7205759403792806173","row":201,"col":35},"47":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts}","ident":"ts","row":201,"col":47}},"139":{"28":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts}","ident":"ts","row":139,"col":28},"19":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"ts","row":139,"col":19},"17":{"ann":"(Data.Heap.Binominal.Tree a)","ident":"t","row":139,"col":17},"1":{"ann":"forall a .\nx1:{VV : GHC.Types.Int | VV >= 0} -> {VV : (Data.Heap.Binominal.Tree a) | size VV <= x1} -> [{t : (Data.Heap.Binominal.Tree a) | size t <= x1}] -> [{t : (Data.Heap.Binominal.Tree a) | size t <= x1}]","ident":"Data.Heap.Binominal.consTreeLemma","row":139,"col":1},"24":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","row":139,"col":24}},"391":{"22":{"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | Set_emp (listElts v)\n                                            && len v == 0\n                                            && lubRank v == 0\n                                            && sumSizeList v == 0\n                                            && maxRankList v == 0}","ident":"_","row":391,"col":22},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Heap a) -> {VV : [a]<\\x1 VV -> {VV : a | x1 <= VV}> | len VV == heapSize x2}","ident":"Data.Heap.Binominal.heapSort","row":391,"col":1}},"319":{"56":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == x}","ident":"x","row":319,"col":56},"52":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == xs}","ident":"xs","row":319,"col":52},"58":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == acc}","ident":"acc","row":319,"col":58},"55":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | tail v == acc\n                                      && head v == x\n                                      && listElts v == Set_cup (Set_sng x) (listElts acc)\n                                      && len v == 1 + len acc\n                                      && lubRank v == 1 + maxRankList (: x acc)\n                                      && sumSizeList v == size x + sumSizeList acc\n                                      && maxRankList v == (if rank x < maxRankList acc then maxRankList acc else rank x)}","ident":"lq_anf$##7205759403792806186","row":319,"col":55},"33":{"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> x2:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList x1 + sumSizeList x2}","ident":"Data.Heap.Binominal.reverseHeapListAux","row":319,"col":33}},"218":{"22":{"ann":"a","ident":"x","row":218,"col":22},"1":{"ann":"forall a b .\nx1:a -> [(Data.Heap.Binominal.Tree {VV : a | x1 <= VV})] -> b -> b","ident":"Data.Heap.Binominal.assertLBTreeList","row":218,"col":1}},"143":{"22":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == h}","ident":"h","row":143,"col":22},"1":{"ann":"forall a .\nx1:{VV : GHC.Types.Int | VV >= 0} -> {VV : [{t : (Data.Heap.Binominal.Tree a) | size t < x1}] | VV /= []} -> {t : (Data.Heap.Binominal.Tree a) | size t < x1}","ident":"Data.Heap.Binominal.testTrick","row":143,"col":1}},"341":{"19":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:{VV : [(Data.Heap.Binominal.Tree a)] | 0 < len VV} -> {v : ((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | root (fst v) <= VV})]) | size (fst v) + sumSizeList (snd v) == sumSizeList x2}","ident":"Data.Heap.Binominal.deleteMin'","row":341,"col":19},"12":{"ann":"{VV : [(Data.Heap.Binominal.Tree {VV : a | root t' <= VV})] | len VV >= 0}","ident":"ts'","row":341,"col":12},"30":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0}","ident":"ds_d3bX","row":341,"col":30},"8":{"ann":"(Data.Heap.Binominal.Tree a)","ident":"t'","row":341,"col":8}},"226":{"43":{"ann":"{v : GHC.Types.Int | v >= 1\n                     && v == 1 + sumSizeList ts1\n                     && v == sz1}","ident":"sz1","row":226,"col":43},"28":{"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | x1 <= VV})] | lubRank v >= 0\n                                                        && sumSizeList v >= 0\n                                                        && len v >= 0\n                                                        && maxRankList v >= 0\n                                                        && v == ts1}","ident":"ts1","row":226,"col":28},"13":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | tail v == ts1\n                                      && head v == t2BoundedByX1\n                                      && listElts v == Set_cup (Set_sng t2BoundedByX1) (listElts ts1)\n                                      && len v == 1 + len ts1\n                                      && lubRank v == 1 + maxRankList (: t2BoundedByX1 ts1)\n                                      && sumSizeList v == size t2BoundedByX1 + sumSizeList ts1\n                                      && maxRankList v == (if rank t2BoundedByX1 < maxRankList ts1 then maxRankList ts1 else rank t2BoundedByX1)}","ident":"lq_anf$##7205759403792806086","row":226,"col":13},"14":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x1 <= VV}) | size v == size t2BoundedByX2\n                                                      && v == t2BoundedByX1}","ident":"t2BoundedByX1","row":226,"col":14},"49":{"ann":"{v : GHC.Types.Int | v >= 1\n                     && v == 1 + sumSizeList ts2\n                     && v == sz2}","ident":"sz2","row":226,"col":49},"34":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806088","row":226,"col":34},"33":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806089","row":226,"col":33},"38":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == len ts1\n                     && v == r1}","ident":"r1","row":226,"col":38},"42":{"ann":"{v : GHC.Types.Int | v == sz1 + sz2}","ident":"lq_anf$##7205759403792806090","row":226,"col":42},"10":{"ann":"{VV : a | VV == x1}","ident":"x1","row":226,"col":10}},"394":{"12":{"ann":"{VV : [a]<\\x1 VV -> {VV : a | x1 <= VV}> | len VV == heapSize h'}","ident":"lq_anf$##7205759403792806212","row":394,"col":12},"3":{"ann":"{VV : a | VV == minElt}","ident":"minElt","row":394,"col":3},"21":{"ann":"{v : (Data.Heap.Binominal.Heap {VV : a | minElt <= VV\n                                         && VV >= minElt}) | heapSize v >= 0\n                                                             && v == h'}","ident":"h'","row":394,"col":21}},"327":{"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:{VV : (Data.Heap.Binominal.Heap a) | 0 < len (unheap VV)} -> {v : (Data.Heap.Binominal.Heap a) | 1 + heapSize v == heapSize x2}","ident":"Data.Heap.Binominal.deleteMin","row":327,"col":1},"11":{"ann":"{VV : (Data.Heap.Binominal.Heap a) | 0 < len (unheap VV)}","ident":"h","row":327,"col":11}},"230":{"43":{"ann":"{v : GHC.Types.Int | v >= 1\n                     && v == 1 + sumSizeList ts1\n                     && v == sz1}","ident":"sz1","row":230,"col":43},"28":{"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | x2 <= VV})] | lubRank v >= 0\n                                                        && sumSizeList v >= 0\n                                                        && len v >= 0\n                                                        && maxRankList v >= 0\n                                                        && v == ts2}","ident":"ts2","row":230,"col":28},"13":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | tail v == ts2\n                                      && head v == t1BoundedByX2\n                                      && listElts v == Set_cup (Set_sng t1BoundedByX2) (listElts ts2)\n                                      && len v == 1 + len ts2\n                                      && lubRank v == 1 + maxRankList (: t1BoundedByX2 ts2)\n                                      && sumSizeList v == size t1BoundedByX2 + sumSizeList ts2\n                                      && maxRankList v == (if rank t1BoundedByX2 < maxRankList ts2 then maxRankList ts2 else rank t1BoundedByX2)}","ident":"lq_anf$##7205759403792806081","row":230,"col":13},"14":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x2 <= VV}) | size v == size t1BoundedByX1\n                                                      && v == t1BoundedByX2}","ident":"t1BoundedByX2","row":230,"col":14},"49":{"ann":"{v : GHC.Types.Int | v >= 1\n                     && v == 1 + sumSizeList ts2\n                     && v == sz2}","ident":"sz2","row":230,"col":49},"34":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806083","row":230,"col":34},"33":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806084","row":230,"col":33},"38":{"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == len ts2\n                     && v == r2}","ident":"r2","row":230,"col":38},"42":{"ann":"{v : GHC.Types.Int | v == sz1 + sz2}","ident":"lq_anf$##7205759403792806085","row":230,"col":42},"10":{"ann":"{VV : a | VV == x2}","ident":"x2","row":230,"col":10}},"229":{"25":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x2 <= VV}) | size v == size t1BoundedByX1}","ident":"_","row":229,"col":25},"57":{"ann":"{VV : a | VV == x1}","ident":"x1","row":229,"col":57},"60":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1BoundedByX1}","ident":"t1BoundedByX1","row":229,"col":60},"9":{"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x2 <= VV}) | size v == size t1BoundedByX1}","ident":"t1BoundedByX2","row":229,"col":9},"54":{"ann":"{VV : a | VV == x2}","ident":"x2","row":229,"col":54}},"180":{"36":{"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"ts","row":180,"col":36},"1":{"ann":"forall a .\nx1:{VV : GHC.Types.Int | VV >= 0} -> [{VV : (Data.Heap.Binominal.Tree a) | size VV <= x1}] -> x3:{VV : GHC.Types.Int | VV >= 0\n                                                                                                                       && x1 < VV} -> [{VV : (Data.Heap.Binominal.Tree a) | size VV < x3}]","ident":"Data.Heap.Binominal.strictTransitivitySizeBoundLemma","row":180,"col":1}},"328":{"31":{"ann":"((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | root (fst x9) <= VV})])","ident":"lq_anf$##7205759403792806198","row":328,"col":31},"58":{"ann":"{v : (Data.Heap.Binominal.Heap a) | 0 < len (unheap v)\n                                    && heapSize v >= 0\n                                    && v == h}","ident":"h","row":328,"col":58},"42":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | 0 < len v\n                                      && sumSizeList v == heapSize h}","ident":"lq_anf$##7205759403792806197","row":328,"col":42}},"375":{"25":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Tree a) -> x3:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == size x2 + sumSizeList x3}","ident":"Data.Heap.Binominal.insert'","row":375,"col":25},"59":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts2'}","ident":"ts2'","row":375,"col":59},"39":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1}","ident":"t1","row":375,"col":39},"46":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList ts1' + sumSizeList ts2'}","ident":"lq_anf$##7205759403792806119","row":375,"col":46},"33":{"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t1 + size t2}","ident":"lq_anf$##7205759403792806118","row":375,"col":33},"42":{"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2}","ident":"t2","row":375,"col":42},"54":{"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts1'}","ident":"ts1'","row":375,"col":54}}},"sptypes":[{"start":{"line":1,"column":1},"ann":"GHC.Types.Module","ident":"Data.Heap.Binominal.$trModule","stop":{"line":1,"column":1}},{"start":{"line":43,"column":1},"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {VV : GHC.Types.Int | VV == sumSizeList x1\n                                                           && VV >= 0\n                                                           && len x1 <= VV}","ident":"Data.Heap.Binominal.sumSizeList","stop":{"line":43,"column":12}},{"start":{"line":43,"column":18},"ann":"{v : GHC.Prim.Int# | v == 0}","ident":"lq_anf$##7205759403792806047","stop":{"line":43,"column":19}},{"start":{"line":44,"column":22},"ann":"{v : GHC.Types.Int | v >= 1\n                     && v == 1 + sumSizeList (subtrees x)\n                     && v == size x}","ident":"lq_anf$##7205759403792806048","stop":{"line":44,"column":28}},{"start":{"line":44,"column":27},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == x}","ident":"x","stop":{"line":44,"column":28}},{"start":{"line":44,"column":31},"ann":"{v : GHC.Types.Int | v == sumSizeList xs\n                     && v >= 0\n                     && len xs <= v}","ident":"lq_anf$##7205759403792806049","stop":{"line":44,"column":45}},{"start":{"line":44,"column":43},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == xs}","ident":"xs","stop":{"line":44,"column":45}},{"start":{"line":55,"column":1},"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {VV : GHC.Types.Int | VV == maxRankList x1\n                                                           && VV >= 0}","ident":"Data.Heap.Binominal.maxRankList","stop":{"line":55,"column":12}},{"start":{"line":55,"column":18},"ann":"{v : GHC.Prim.Int# | v == 0}","ident":"lq_anf$##7205759403792806055","stop":{"line":55,"column":19}},{"start":{"line":57,"column":7},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == len (subtrees x)\n                     && v == rank x}","ident":"r","stop":{"line":57,"column":8}},{"start":{"line":57,"column":11},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == len (subtrees x)\n                     && v == rank x}","ident":"_","stop":{"line":57,"column":17}},{"start":{"line":57,"column":16},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == x}","ident":"x","stop":{"line":57,"column":17}},{"start":{"line":58,"column":7},"ann":"{v : GHC.Types.Int | v == maxRankList xs\n                     && v >= 0}","ident":"r'","stop":{"line":58,"column":9}},{"start":{"line":58,"column":12},"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {VV : GHC.Types.Int | VV == maxRankList x1\n                                                           && VV >= 0}","ident":"Data.Heap.Binominal.maxRankList","stop":{"line":58,"column":26}},{"start":{"line":58,"column":24},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == xs}","ident":"xs","stop":{"line":58,"column":26}},{"start":{"line":59,"column":6},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == len (subtrees x)\n                     && v == rank x\n                     && v == r}","ident":"r","stop":{"line":59,"column":7}},{"start":{"line":59,"column":10},"ann":"{v : GHC.Types.Int | v == maxRankList xs\n                     && v >= 0\n                     && v == r'}","ident":"r'","stop":{"line":59,"column":12}},{"start":{"line":59,"column":18},"ann":"{v : GHC.Types.Int | v == maxRankList xs\n                     && v >= 0\n                     && v == r'}","ident":"r'","stop":{"line":59,"column":20}},{"start":{"line":59,"column":26},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == len (subtrees x)\n                     && v == rank x\n                     && v == r}","ident":"r","stop":{"line":59,"column":27}},{"start":{"line":69,"column":1},"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {VV : GHC.Types.Int | VV == lubRank x1\n                                                           && VV >= 0}","ident":"Data.Heap.Binominal.lubRank","stop":{"line":69,"column":8}},{"start":{"line":69,"column":14},"ann":"{v : GHC.Prim.Int# | v == 0}","ident":"lq_anf$##7205759403792806062","stop":{"line":69,"column":15}},{"start":{"line":70,"column":14},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806060","stop":{"line":70,"column":15}},{"start":{"line":70,"column":18},"ann":"{v : GHC.Types.Int | v >= 0}","ident":"lq_anf$##7205759403792806061","stop":{"line":70,"column":32}},{"start":{"line":70,"column":30},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0}","ident":"ds_d3dp","stop":{"line":70,"column":32}},{"start":{"line":75,"column":1},"ann":"forall a .\nx1:(Data.Heap.Binominal.Heap a) -> {VV : GHC.Types.Int | VV == heapSize x1\n                                                         && VV >= 0\n                                                         && len (unheap x1) <= VV}","ident":"Data.Heap.Binominal.heapSize","stop":{"line":75,"column":9}},{"start":{"line":75,"column":22},"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {VV : GHC.Types.Int | VV == sumSizeList x1\n                                                           && VV >= 0\n                                                           && len x1 <= VV}","ident":"Data.Heap.Binominal.sumSizeList","stop":{"line":75,"column":36}},{"start":{"line":75,"column":34},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts}","ident":"ts","stop":{"line":75,"column":36}},{"start":{"line":80,"column":1},"ann":"{VV : GHC.Types.Int | VV >= 0} -> {VV : GHC.Types.Int | VV >= 1}","ident":"Data.Heap.Binominal.pow2","stop":{"line":80,"column":5}},{"start":{"line":80,"column":6},"ann":"{VV : GHC.Types.Int | VV >= 0}","ident":"n","stop":{"line":80,"column":7}},{"start":{"line":80,"column":13},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == n}","ident":"n","stop":{"line":80,"column":14}},{"start":{"line":80,"column":18},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806066","stop":{"line":80,"column":19}},{"start":{"line":80,"column":25},"ann":"{v : GHC.Prim.Int# | v == 1}","ident":"lq_anf$##7205759403792806075","stop":{"line":80,"column":26}},{"start":{"line":80,"column":32},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806070","stop":{"line":80,"column":33}},{"start":{"line":80,"column":36},"ann":"{VV : GHC.Types.Int | VV >= 1}","ident":"lq_anf$##7205759403792806074","stop":{"line":80,"column":48}},{"start":{"line":80,"column":41},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806073","stop":{"line":80,"column":48}},{"start":{"line":80,"column":42},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == n}","ident":"n","stop":{"line":80,"column":43}},{"start":{"line":80,"column":46},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806072","stop":{"line":80,"column":47}},{"start":{"line":112,"column":1},"ann":"forall a .\nx1:(Data.Heap.Binominal.Tree a) -> {VV : (Data.Heap.Binominal.Tree {VV : a | root x1 <= VV}) | size VV == size x1}","ident":"Data.Heap.Binominal.treeIsBoundedByItsRootLemma","stop":{"line":112,"column":28}},{"start":{"line":113,"column":3},"ann":"forall a .\nx1:a -> x2:[(Data.Heap.Binominal.Tree {VV : a | x1 <= VV})] -> x3:{v : GHC.Types.Int | v >= 0\n                                                                                       && v == len x2} -> x4:{v : GHC.Types.Int | v >= 1\n                                                                                                                                  && v == 1 + sumSizeList x2} -> {v : (Data.Heap.Binominal.Tree a) | size v == x4\n                                                                                                                                                                                                     && rank v == x3\n                                                                                                                                                                                                     && subtrees v == x2\n                                                                                                                                                                                                     && root v == x1}","ident":"Data.Heap.Binominal.Node","stop":{"line":113,"column":46}},{"start":{"line":113,"column":14},"ann":"{v : GHC.Types.Int | v >= 0}","ident":"ds_d3a6","stop":{"line":113,"column":15}},{"start":{"line":113,"column":22},"ann":"a","ident":"ds_d3a4","stop":{"line":113,"column":23}},{"start":{"line":113,"column":34},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0}","ident":"ds_d3a5","stop":{"line":113,"column":36}},{"start":{"line":113,"column":43},"ann":"{v : GHC.Types.Int | v >= 1}","ident":"ds_d3a7","stop":{"line":113,"column":45}},{"start":{"line":118,"column":1},"ann":"forall a .\nx1:a -> x2:{VV : a | x1 <= VV} -> x3:(Data.Heap.Binominal.Tree {VV : a | x2 <= VV}) -> {VV : (Data.Heap.Binominal.Tree {VV : a | x1 <= VV}) | size VV == size x3}","ident":"Data.Heap.Binominal.boundedTreeTransitivityLemma","stop":{"line":118,"column":29}},{"start":{"line":118,"column":30},"ann":"a","ident":"x","stop":{"line":118,"column":31}},{"start":{"line":118,"column":32},"ann":"{VV : a | x <= VV}","ident":"y","stop":{"line":118,"column":33}},{"start":{"line":118,"column":34},"ann":"(Data.Heap.Binominal.Tree {VV : a | y <= VV})","ident":"tree","stop":{"line":118,"column":38}},{"start":{"line":122,"column":1},"ann":"forall a .\nx1:a -> x2:{VV : a | x1 <= VV} -> x3:[(Data.Heap.Binominal.Tree {VV : a | x2 <= VV})] -> {v : [(Data.Heap.Binominal.Tree {VV : a | x1 <= VV})] | sumSizeList v == sumSizeList x3}","ident":"Data.Heap.Binominal.boundedTreeListTransitivityLemma","stop":{"line":122,"column":33}},{"start":{"line":122,"column":34},"ann":"a","ident":"x","stop":{"line":122,"column":35}},{"start":{"line":122,"column":36},"ann":"{VV : a | x <= VV}","ident":"y","stop":{"line":122,"column":37}},{"start":{"line":122,"column":38},"ann":"[(Data.Heap.Binominal.Tree {VV : a | y <= VV})]","ident":"ts","stop":{"line":122,"column":40}},{"start":{"line":126,"column":1},"ann":"forall a .\nx1:(Data.Heap.Binominal.Tree a) -> x2:[(Data.Heap.Binominal.Tree a)] -> {VV : GHC.Types.Int | VV >= 0\n                                                                                              && VV == size x1 + sumSizeList x2\n                                                                                              && sumSizeList x2 < VV}","ident":"Data.Heap.Binominal.sublistSizeLemma","stop":{"line":126,"column":17}},{"start":{"line":126,"column":18},"ann":"(Data.Heap.Binominal.Tree a)","ident":"x","stop":{"line":126,"column":19}},{"start":{"line":126,"column":20},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"xs","stop":{"line":126,"column":22}},{"start":{"line":127,"column":3},"ann":"GHC.Types.Int -> GHC.Types.Int","ident":"lq_anf$##7205759403792806154","stop":{"line":127,"column":22}},{"start":{"line":127,"column":10},"ann":"GHC.Types.Bool","ident":"lq_anf$##7205759403792806153","stop":{"line":127,"column":22}},{"start":{"line":127,"column":11},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806151","stop":{"line":127,"column":12}},{"start":{"line":127,"column":15},"ann":"{v : GHC.Types.Int | v >= 1\n                     && v == 1 + sumSizeList (subtrees x)\n                     && v == size x}","ident":"lq_anf$##7205759403792806152","stop":{"line":127,"column":21}},{"start":{"line":127,"column":20},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == x}","ident":"x","stop":{"line":127,"column":21}},{"start":{"line":128,"column":3},"ann":"{v : GHC.Types.Int | v >= 0}","ident":"lq_anf$##7205759403792806156","stop":{"line":128,"column":23}},{"start":{"line":128,"column":15},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | tail v == xs\n                                      && head v == x\n                                      && listElts v == Set_cup (Set_sng x) (listElts xs)\n                                      && len v == 1 + len xs\n                                      && lubRank v == 1 + maxRankList (: x xs)\n                                      && sumSizeList v == size x + sumSizeList xs\n                                      && maxRankList v == (if rank x < maxRankList xs then maxRankList xs else rank x)}","ident":"lq_anf$##7205759403792806155","stop":{"line":128,"column":23}},{"start":{"line":128,"column":16},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == x}","ident":"x","stop":{"line":128,"column":17}},{"start":{"line":128,"column":20},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == xs}","ident":"xs","stop":{"line":128,"column":22}},{"start":{"line":135,"column":1},"ann":"forall a .\nx1:{VV : GHC.Types.Int | VV >= 0} -> [{t : (Data.Heap.Binominal.Tree a) | size t <= x1}] -> x3:{VV : GHC.Types.Int | VV >= 0\n                                                                                                                     && x1 <= VV} -> [{t : (Data.Heap.Binominal.Tree a) | size t <= x3}]","ident":"Data.Heap.Binominal.subtreeTransitiveLemma","stop":{"line":135,"column":23}},{"start":{"line":135,"column":26},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"ts","stop":{"line":135,"column":28}},{"start":{"line":139,"column":1},"ann":"forall a .\nx1:{VV : GHC.Types.Int | VV >= 0} -> {VV : (Data.Heap.Binominal.Tree a) | size VV <= x1} -> [{t : (Data.Heap.Binominal.Tree a) | size t <= x1}] -> [{t : (Data.Heap.Binominal.Tree a) | size t <= x1}]","ident":"Data.Heap.Binominal.consTreeLemma","stop":{"line":139,"column":14}},{"start":{"line":139,"column":17},"ann":"(Data.Heap.Binominal.Tree a)","ident":"t","stop":{"line":139,"column":18}},{"start":{"line":139,"column":19},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"ts","stop":{"line":139,"column":21}},{"start":{"line":139,"column":24},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":139,"column":25}},{"start":{"line":139,"column":28},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts}","ident":"ts","stop":{"line":139,"column":30}},{"start":{"line":143,"column":1},"ann":"forall a .\nx1:{VV : GHC.Types.Int | VV >= 0} -> {VV : [{t : (Data.Heap.Binominal.Tree a) | size t < x1}] | VV /= []} -> {t : (Data.Heap.Binominal.Tree a) | size t < x1}","ident":"Data.Heap.Binominal.testTrick","stop":{"line":143,"column":10}},{"start":{"line":143,"column":22},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == h}","ident":"h","stop":{"line":143,"column":23}},{"start":{"line":147,"column":1},"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> [{t : (Data.Heap.Binominal.Tree a) | size t <= sumSizeList x1}]","ident":"Data.Heap.Binominal.boundedSizeSubtreeLemma","stop":{"line":147,"column":24}},{"start":{"line":147,"column":30},"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | Set_emp (listElts v)\n                                            && len v == 0\n                                            && lubRank v == 0\n                                            && sumSizeList v == 0\n                                            && maxRankList v == 0}","ident":"_","stop":{"line":147,"column":32}},{"start":{"line":149,"column":7},"ann":"[{v : (Data.Heap.Binominal.Tree a) | size v <= sumSizeList ts}]","ident":"ih","stop":{"line":149,"column":9}},{"start":{"line":149,"column":12},"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> [{t : (Data.Heap.Binominal.Tree a) | size t <= sumSizeList x1}]","ident":"Data.Heap.Binominal.boundedSizeSubtreeLemma","stop":{"line":149,"column":38}},{"start":{"line":149,"column":36},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts}","ident":"ts","stop":{"line":149,"column":38}},{"start":{"line":150,"column":7},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == size t + sumSizeList ts\n                     && sumSizeList ts < v}","ident":"sizetts","stop":{"line":150,"column":14}},{"start":{"line":150,"column":17},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == size t + sumSizeList ts\n                     && sumSizeList ts < v}","ident":"_","stop":{"line":150,"column":38}},{"start":{"line":150,"column":34},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":150,"column":35}},{"start":{"line":150,"column":36},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts}","ident":"ts","stop":{"line":150,"column":38}},{"start":{"line":151,"column":7},"ann":"{v : GHC.Types.Int | v == sumSizeList ts\n                     && v >= 0\n                     && len ts <= v}","ident":"sizets","stop":{"line":151,"column":13}},{"start":{"line":151,"column":16},"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {VV : GHC.Types.Int | VV == sumSizeList x1\n                                                           && VV >= 0\n                                                           && len x1 <= VV}","ident":"Data.Heap.Binominal.sumSizeList","stop":{"line":151,"column":30}},{"start":{"line":151,"column":28},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts}","ident":"ts","stop":{"line":151,"column":30}},{"start":{"line":152,"column":7},"ann":"[{v : (Data.Heap.Binominal.Tree a) | size v <= sizetts}]","ident":"refinedSubtrees","stop":{"line":152,"column":22}},{"start":{"line":152,"column":25},"ann":"[{v : (Data.Heap.Binominal.Tree a) | size v <= sizetts}]","ident":"_","stop":{"line":152,"column":65}},{"start":{"line":152,"column":48},"ann":"{v : GHC.Types.Int | v == sumSizeList ts\n                     && v >= 0\n                     && len ts <= v\n                     && v == sizets}","ident":"sizets","stop":{"line":152,"column":54}},{"start":{"line":152,"column":55},"ann":"{v : [{v : (Data.Heap.Binominal.Tree a) | size v <= sumSizeList ts}] | lubRank v >= 0\n                                                                       && sumSizeList v >= 0\n                                                                       && len v >= 0\n                                                                       && maxRankList v >= 0\n                                                                       && v == ih}","ident":"ih","stop":{"line":152,"column":57}},{"start":{"line":152,"column":58},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == size t + sumSizeList ts\n                     && sumSizeList ts < v\n                     && v == sizetts}","ident":"sizetts","stop":{"line":152,"column":65}},{"start":{"line":153,"column":17},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == size t + sumSizeList ts\n                     && sumSizeList ts < v\n                     && v == sizetts}","ident":"sizetts","stop":{"line":153,"column":24}},{"start":{"line":153,"column":25},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":153,"column":26}},{"start":{"line":153,"column":27},"ann":"{v : [{v : (Data.Heap.Binominal.Tree a) | size v <= sizetts}] | lubRank v >= 0\n                                                                && sumSizeList v >= 0\n                                                                && len v >= 0\n                                                                && maxRankList v >= 0\n                                                                && v == refinedSubtrees}","ident":"refinedSubtrees","stop":{"line":153,"column":42}},{"start":{"line":170,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\n(Data.Heap.Binominal.Tree a) -> (Data.Set.Internal.Set a)","ident":"Data.Heap.Binominal.eltsTree'","stop":{"line":170,"column":10}},{"start":{"line":170,"column":29},"ann":"forall a .\nx1:a -> {v : (Data.Set.Internal.Set a) | v == Set_sng x1}","ident":"Data.Set.Internal.singleton","stop":{"line":170,"column":42}},{"start":{"line":170,"column":41},"ann":"{VV : a | VV == x}","ident":"x","stop":{"line":170,"column":42}},{"start":{"line":172,"column":7},"ann":"{v : (Data.Heap.Binominal.Tree a) | subtrees v == ts\n                                    && root v == x}","ident":"remainder","stop":{"line":172,"column":16}},{"start":{"line":172,"column":19},"ann":"{v : (Data.Heap.Binominal.Tree a) | subtrees v == ts\n                                    && root v == x}","ident":"_","stop":{"line":172,"column":50}},{"start":{"line":172,"column":24},"ann":"{VV : a | VV == x}","ident":"x","stop":{"line":172,"column":25}},{"start":{"line":172,"column":26},"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | x <= VV})] | lubRank v >= 0\n                                                       && sumSizeList v >= 0\n                                                       && len v >= 0\n                                                       && maxRankList v >= 0\n                                                       && v == ts}","ident":"ts","stop":{"line":172,"column":28}},{"start":{"line":172,"column":29},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806143","stop":{"line":172,"column":36}},{"start":{"line":172,"column":30},"ann":"{v : GHC.Types.Int | v >= 0}","ident":"ds_d39t","stop":{"line":172,"column":31}},{"start":{"line":172,"column":34},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806142","stop":{"line":172,"column":35}},{"start":{"line":172,"column":37},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806145","stop":{"line":172,"column":50}},{"start":{"line":172,"column":38},"ann":"{v : GHC.Types.Int | v >= 1}","ident":"ds_d39u","stop":{"line":172,"column":40}},{"start":{"line":172,"column":43},"ann":"{v : GHC.Types.Int | v >= 1\n                     && v == 1 + sumSizeList (subtrees t)\n                     && v == size t}","ident":"lq_anf$##7205759403792806144","stop":{"line":172,"column":49}},{"start":{"line":172,"column":48},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x <= VV}) | v == t}","ident":"t","stop":{"line":172,"column":49}},{"start":{"line":173,"column":11},"ann":"(Data.Set.Internal.Set a)","ident":"lq_anf$##7205759403792806148","stop":{"line":173,"column":50}},{"start":{"line":173,"column":20},"ann":"{v : (Data.Set.Internal.Set a) | v == Set_sng x}","ident":"lq_anf$##7205759403792806146","stop":{"line":173,"column":35}},{"start":{"line":173,"column":33},"ann":"{VV : a | VV == x}","ident":"x","stop":{"line":173,"column":34}},{"start":{"line":173,"column":36},"ann":"(Data.Set.Internal.Set a)","ident":"lq_anf$##7205759403792806147","stop":{"line":173,"column":49}},{"start":{"line":173,"column":47},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x <= VV}) | v == t}","ident":"t","stop":{"line":173,"column":48}},{"start":{"line":173,"column":51},"ann":"(Data.Set.Internal.Set a)","ident":"lq_anf$##7205759403792806149","stop":{"line":173,"column":72}},{"start":{"line":173,"column":62},"ann":"{v : (Data.Heap.Binominal.Tree a) | subtrees v == ts\n                                    && root v == x\n                                    && v == remainder}","ident":"remainder","stop":{"line":173,"column":71}},{"start":{"line":180,"column":1},"ann":"forall a .\nx1:{VV : GHC.Types.Int | VV >= 0} -> [{VV : (Data.Heap.Binominal.Tree a) | size VV <= x1}] -> x3:{VV : GHC.Types.Int | VV >= 0\n                                                                                                                       && x1 < VV} -> [{VV : (Data.Heap.Binominal.Tree a) | size VV < x3}]","ident":"Data.Heap.Binominal.strictTransitivitySizeBoundLemma","stop":{"line":180,"column":33}},{"start":{"line":180,"column":36},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"ts","stop":{"line":180,"column":38}},{"start":{"line":185,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\n(Data.Heap.Binominal.Tree a) -> (Data.Set.Internal.Set a)","ident":"Data.Heap.Binominal.eltsTree","stop":{"line":185,"column":9}},{"start":{"line":185,"column":10},"ann":"(Data.Heap.Binominal.Tree a)","ident":"t","stop":{"line":185,"column":11}},{"start":{"line":186,"column":7},"ann":"[{v : (Data.Heap.Binominal.Tree a) | size v <= sumSizeList ts}]","ident":"boundBySumSizeList","stop":{"line":186,"column":25}},{"start":{"line":186,"column":28},"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> [{t : (Data.Heap.Binominal.Tree a) | size t <= sumSizeList x1}]","ident":"Data.Heap.Binominal.boundedSizeSubtreeLemma","stop":{"line":186,"column":56}},{"start":{"line":186,"column":53},"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | x <= VV})] | lubRank v >= 0\n                                                       && sumSizeList v >= 0\n                                                       && len v >= 0\n                                                       && maxRankList v >= 0\n                                                       && v == ts}","ident":"ts","stop":{"line":186,"column":55}},{"start":{"line":187,"column":7},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"boundByOverallSize","stop":{"line":187,"column":25}},{"start":{"line":187,"column":28},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"_","stop":{"line":187,"column":105}},{"start":{"line":187,"column":61},"ann":"{v : GHC.Types.Int | v == sumSizeList ts\n                     && v >= 0\n                     && len ts <= v}","ident":"lq_anf$##7205759403792806159","stop":{"line":187,"column":77}},{"start":{"line":187,"column":74},"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | x <= VV})] | lubRank v >= 0\n                                                       && sumSizeList v >= 0\n                                                       && len v >= 0\n                                                       && maxRankList v >= 0\n                                                       && v == ts}","ident":"ts","stop":{"line":187,"column":76}},{"start":{"line":187,"column":78},"ann":"{v : [{v : (Data.Heap.Binominal.Tree a) | size v <= sumSizeList ts}] | lubRank v >= 0\n                                                                       && sumSizeList v >= 0\n                                                                       && len v >= 0\n                                                                       && maxRankList v >= 0\n                                                                       && v == boundBySumSizeList}","ident":"boundBySumSizeList","stop":{"line":187,"column":96}},{"start":{"line":187,"column":97},"ann":"{v : GHC.Types.Int | v >= 1}","ident":"lq_anf$##7205759403792806160","stop":{"line":187,"column":105}},{"start":{"line":187,"column":103},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t\n                                    && size v == sz\n                                    && rank v == r\n                                    && subtrees v == ts\n                                    && root v == x\n                                    && v == Node x ts r sz}","ident":"lq_anf$##7205759403792806158","stop":{"line":187,"column":104}},{"start":{"line":188,"column":3},"ann":"(Data.Set.Internal.Set a) -> (Data.Set.Internal.Set a)","ident":"lq_anf$##7205759403792806164","stop":{"line":188,"column":35}},{"start":{"line":188,"column":10},"ann":"GHC.Types.Bool","ident":"lq_anf$##7205759403792806163","stop":{"line":188,"column":35}},{"start":{"line":188,"column":11},"ann":"{v : GHC.Types.Int | v == sumSizeList ts\n                     && v >= 0\n                     && len ts <= v}","ident":"lq_anf$##7205759403792806161","stop":{"line":188,"column":25}},{"start":{"line":188,"column":23},"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | x <= VV})] | lubRank v >= 0\n                                                       && sumSizeList v >= 0\n                                                       && len v >= 0\n                                                       && maxRankList v >= 0\n                                                       && v == ts}","ident":"ts","stop":{"line":188,"column":25}},{"start":{"line":188,"column":28},"ann":"{v : GHC.Types.Int | v >= 1}","ident":"lq_anf$##7205759403792806162","stop":{"line":188,"column":34}},{"start":{"line":188,"column":33},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t\n                                    && size v == sz\n                                    && rank v == r\n                                    && subtrees v == ts\n                                    && root v == x\n                                    && v == Node x ts r sz}","ident":"lq_anf$##7205759403792806158","stop":{"line":188,"column":34}},{"start":{"line":189,"column":3},"ann":"(Data.Set.Internal.Set a)","ident":"lq_anf$##7205759403792806167","stop":{"line":189,"column":57}},{"start":{"line":189,"column":11},"ann":"{v : (Data.Set.Internal.Set a) | v == Set_sng x}","ident":"lq_anf$##7205759403792806165","stop":{"line":189,"column":26}},{"start":{"line":189,"column":24},"ann":"{VV : a | VV == x}","ident":"x","stop":{"line":189,"column":25}},{"start":{"line":189,"column":27},"ann":"(Data.Set.Internal.Set a)","ident":"lq_anf$##7205759403792806166","stop":{"line":189,"column":57}},{"start":{"line":189,"column":38},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == boundByOverallSize}","ident":"boundByOverallSize","stop":{"line":189,"column":56}},{"start":{"line":194,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\n[(Data.Heap.Binominal.Tree a)] -> (Data.Set.Internal.Set a)","ident":"Data.Heap.Binominal.eltsTrees","stop":{"line":194,"column":10}},{"start":{"line":194,"column":16},"ann":"forall a . {v : (Data.Set.Internal.Set a) | Set_emp v}","ident":"_","stop":{"line":194,"column":23}},{"start":{"line":195,"column":20},"ann":"{v : (GHC.Classes.Ord a) | v == $dOrd_a30n}","ident":"$dOrd_a30n","stop":{"line":195,"column":55}},{"start":{"line":195,"column":28},"ann":"(Data.Set.Internal.Set a)","ident":"lq_anf$##7205759403792806169","stop":{"line":195,"column":40}},{"start":{"line":195,"column":38},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":195,"column":39}},{"start":{"line":195,"column":41},"ann":"(Data.Set.Internal.Set a)","ident":"lq_anf$##7205759403792806170","stop":{"line":195,"column":55}},{"start":{"line":195,"column":52},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts}","ident":"ts","stop":{"line":195,"column":54}},{"start":{"line":200,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\n[(Data.Heap.Binominal.Tree a)] -> [(Data.Set.Internal.Set a)]","ident":"Data.Heap.Binominal.mapEltsTree","stop":{"line":200,"column":12}},{"start":{"line":200,"column":18},"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | Set_emp (listElts v)\n                                            && len v == 0\n                                            && lubRank v == 0\n                                            && sumSizeList v == 0\n                                            && maxRankList v == 0}","ident":"_","stop":{"line":200,"column":20}},{"start":{"line":201,"column":22},"ann":"(Data.Set.Internal.Set a)","ident":"lq_anf$##7205759403792806172","stop":{"line":201,"column":32}},{"start":{"line":201,"column":31},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":201,"column":32}},{"start":{"line":201,"column":35},"ann":"[(Data.Set.Internal.Set a)]","ident":"lq_anf$##7205759403792806173","stop":{"line":201,"column":49}},{"start":{"line":201,"column":47},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts}","ident":"ts","stop":{"line":201,"column":49}},{"start":{"line":210,"column":1},"ann":"forall a . {VV : GHC.Types.Bool | VV} -> a -> a","ident":"Data.Heap.Binominal.assert","stop":{"line":210,"column":7}},{"start":{"line":210,"column":10},"ann":"a","ident":"x","stop":{"line":210,"column":11}},{"start":{"line":214,"column":1},"ann":"forall a b .\nx1:a -> (Data.Heap.Binominal.Tree {VV : a | x1 <= VV}) -> b -> b","ident":"Data.Heap.Binominal.assertLBTree","stop":{"line":214,"column":13}},{"start":{"line":214,"column":18},"ann":"a","ident":"x","stop":{"line":214,"column":19}},{"start":{"line":218,"column":1},"ann":"forall a b .\nx1:a -> [(Data.Heap.Binominal.Tree {VV : a | x1 <= VV})] -> b -> b","ident":"Data.Heap.Binominal.assertLBTreeList","stop":{"line":218,"column":17}},{"start":{"line":218,"column":22},"ann":"a","ident":"x","stop":{"line":218,"column":23}},{"start":{"line":222,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Tree a) -> x3:(Data.Heap.Binominal.Tree a) -> {v : (Data.Heap.Binominal.Tree a) | size v == size x2 + size x3}","ident":"Data.Heap.Binominal.link","stop":{"line":222,"column":5}},{"start":{"line":222,"column":6},"ann":"(Data.Heap.Binominal.Tree a)","ident":"t1","stop":{"line":222,"column":8}},{"start":{"line":222,"column":30},"ann":"(Data.Heap.Binominal.Tree a)","ident":"t2","stop":{"line":222,"column":32}},{"start":{"line":223,"column":5},"ann":"{VV : a | VV == x1}","ident":"x1","stop":{"line":223,"column":7}},{"start":{"line":223,"column":11},"ann":"{VV : a | VV == x2}","ident":"x2","stop":{"line":223,"column":13}},{"start":{"line":224,"column":9},"ann":"(Data.Heap.Binominal.Tree a)","ident":"t2BoundedByX2","stop":{"line":224,"column":22}},{"start":{"line":224,"column":25},"ann":"(Data.Heap.Binominal.Tree a)","ident":"_","stop":{"line":224,"column":55}},{"start":{"line":224,"column":53},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2\n                                    && size v == sz2\n                                    && rank v == r2\n                                    && subtrees v == ts2\n                                    && root v == v\n                                    && v == Node v ts2 r2 sz2}","ident":"lq_anf$##7205759403792806078","stop":{"line":224,"column":55}},{"start":{"line":225,"column":9},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x1 <= VV}) | size v == size t2BoundedByX2}","ident":"t2BoundedByX1","stop":{"line":225,"column":22}},{"start":{"line":225,"column":25},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x1 <= VV}) | size v == size t2BoundedByX2}","ident":"_","stop":{"line":225,"column":73}},{"start":{"line":225,"column":54},"ann":"{VV : a | VV == x1}","ident":"x1","stop":{"line":225,"column":56}},{"start":{"line":225,"column":57},"ann":"{VV : a | VV == x2}","ident":"x2","stop":{"line":225,"column":59}},{"start":{"line":225,"column":60},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2BoundedByX2}","ident":"t2BoundedByX2","stop":{"line":225,"column":73}},{"start":{"line":226,"column":10},"ann":"{VV : a | VV == x1}","ident":"x1","stop":{"line":226,"column":12}},{"start":{"line":226,"column":13},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | tail v == ts1\n                                      && head v == t2BoundedByX1\n                                      && listElts v == Set_cup (Set_sng t2BoundedByX1) (listElts ts1)\n                                      && len v == 1 + len ts1\n                                      && lubRank v == 1 + maxRankList (: t2BoundedByX1 ts1)\n                                      && sumSizeList v == size t2BoundedByX1 + sumSizeList ts1\n                                      && maxRankList v == (if rank t2BoundedByX1 < maxRankList ts1 then maxRankList ts1 else rank t2BoundedByX1)}","ident":"lq_anf$##7205759403792806086","stop":{"line":226,"column":32}},{"start":{"line":226,"column":14},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x1 <= VV}) | size v == size t2BoundedByX2\n                                                      && v == t2BoundedByX1}","ident":"t2BoundedByX1","stop":{"line":226,"column":27}},{"start":{"line":226,"column":28},"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | x1 <= VV})] | lubRank v >= 0\n                                                        && sumSizeList v >= 0\n                                                        && len v >= 0\n                                                        && maxRankList v >= 0\n                                                        && v == ts1}","ident":"ts1","stop":{"line":226,"column":31}},{"start":{"line":226,"column":33},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806089","stop":{"line":226,"column":41}},{"start":{"line":226,"column":34},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806088","stop":{"line":226,"column":35}},{"start":{"line":226,"column":38},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == len ts1\n                     && v == r1}","ident":"r1","stop":{"line":226,"column":40}},{"start":{"line":226,"column":42},"ann":"{v : GHC.Types.Int | v == sz1 + sz2}","ident":"lq_anf$##7205759403792806090","stop":{"line":226,"column":53}},{"start":{"line":226,"column":43},"ann":"{v : GHC.Types.Int | v >= 1\n                     && v == 1 + sumSizeList ts1\n                     && v == sz1}","ident":"sz1","stop":{"line":226,"column":46}},{"start":{"line":226,"column":49},"ann":"{v : GHC.Types.Int | v >= 1\n                     && v == 1 + sumSizeList ts2\n                     && v == sz2}","ident":"sz2","stop":{"line":226,"column":52}},{"start":{"line":228,"column":9},"ann":"(Data.Heap.Binominal.Tree a)","ident":"t1BoundedByX1","stop":{"line":228,"column":22}},{"start":{"line":228,"column":25},"ann":"(Data.Heap.Binominal.Tree a)","ident":"_","stop":{"line":228,"column":55}},{"start":{"line":228,"column":53},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1\n                                    && size v == sz1\n                                    && rank v == r1\n                                    && subtrees v == ts1\n                                    && root v == x1\n                                    && v == Node x1 ts1 r1 sz1}","ident":"lq_anf$##7205759403792806077","stop":{"line":228,"column":55}},{"start":{"line":229,"column":9},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x2 <= VV}) | size v == size t1BoundedByX1}","ident":"t1BoundedByX2","stop":{"line":229,"column":22}},{"start":{"line":229,"column":25},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x2 <= VV}) | size v == size t1BoundedByX1}","ident":"_","stop":{"line":229,"column":73}},{"start":{"line":229,"column":54},"ann":"{VV : a | VV == x2}","ident":"x2","stop":{"line":229,"column":56}},{"start":{"line":229,"column":57},"ann":"{VV : a | VV == x1}","ident":"x1","stop":{"line":229,"column":59}},{"start":{"line":229,"column":60},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1BoundedByX1}","ident":"t1BoundedByX1","stop":{"line":229,"column":73}},{"start":{"line":230,"column":10},"ann":"{VV : a | VV == x2}","ident":"x2","stop":{"line":230,"column":12}},{"start":{"line":230,"column":13},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | tail v == ts2\n                                      && head v == t1BoundedByX2\n                                      && listElts v == Set_cup (Set_sng t1BoundedByX2) (listElts ts2)\n                                      && len v == 1 + len ts2\n                                      && lubRank v == 1 + maxRankList (: t1BoundedByX2 ts2)\n                                      && sumSizeList v == size t1BoundedByX2 + sumSizeList ts2\n                                      && maxRankList v == (if rank t1BoundedByX2 < maxRankList ts2 then maxRankList ts2 else rank t1BoundedByX2)}","ident":"lq_anf$##7205759403792806081","stop":{"line":230,"column":32}},{"start":{"line":230,"column":14},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x2 <= VV}) | size v == size t1BoundedByX1\n                                                      && v == t1BoundedByX2}","ident":"t1BoundedByX2","stop":{"line":230,"column":27}},{"start":{"line":230,"column":28},"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | x2 <= VV})] | lubRank v >= 0\n                                                        && sumSizeList v >= 0\n                                                        && len v >= 0\n                                                        && maxRankList v >= 0\n                                                        && v == ts2}","ident":"ts2","stop":{"line":230,"column":31}},{"start":{"line":230,"column":33},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806084","stop":{"line":230,"column":41}},{"start":{"line":230,"column":34},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806083","stop":{"line":230,"column":35}},{"start":{"line":230,"column":38},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == len ts2\n                     && v == r2}","ident":"r2","stop":{"line":230,"column":40}},{"start":{"line":230,"column":42},"ann":"{v : GHC.Types.Int | v == sz1 + sz2}","ident":"lq_anf$##7205759403792806085","stop":{"line":230,"column":53}},{"start":{"line":230,"column":43},"ann":"{v : GHC.Types.Int | v >= 1\n                     && v == 1 + sumSizeList ts1\n                     && v == sz1}","ident":"sz1","stop":{"line":230,"column":46}},{"start":{"line":230,"column":49},"ann":"{v : GHC.Types.Int | v >= 1\n                     && v == 1 + sumSizeList ts2\n                     && v == sz2}","ident":"sz2","stop":{"line":230,"column":52}},{"start":{"line":234,"column":1},"ann":"forall a . {v : (Data.Heap.Binominal.Heap a) | heapSize v == 0}","ident":"Data.Heap.Binominal.empty","stop":{"line":234,"column":6}},{"start":{"line":234,"column":14},"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | Set_emp (listElts v)\n                                            && len v == 0\n                                            && lubRank v == 0\n                                            && sumSizeList v == 0\n                                            && maxRankList v == 0}","ident":"_","stop":{"line":234,"column":16}},{"start":{"line":238,"column":1},"ann":"forall a .\nx1:(Data.Heap.Binominal.Heap a) -> {v : GHC.Types.Bool | v <=> heapSize x1 == 0}","ident":"Data.Heap.Binominal.null","stop":{"line":238,"column":5}},{"start":{"line":238,"column":6},"ann":"(Data.Heap.Binominal.Heap a)","ident":"h","stop":{"line":238,"column":7}},{"start":{"line":238,"column":10},"ann":"{v : GHC.Types.Int | v == heapSize h\n                     && v >= 0\n                     && len (unheap h) <= v}","ident":"lq_anf$##7205759403792806051","stop":{"line":238,"column":20}},{"start":{"line":238,"column":19},"ann":"{v : (Data.Heap.Binominal.Heap a) | heapSize v >= 0\n                                    && v == h}","ident":"h","stop":{"line":238,"column":20}},{"start":{"line":238,"column":24},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806053","stop":{"line":238,"column":25}},{"start":{"line":242,"column":1},"ann":"forall a .\na -> {v : (Data.Heap.Binominal.Heap a) | heapSize v == 1}","ident":"Data.Heap.Binominal.singleton","stop":{"line":242,"column":10}},{"start":{"line":242,"column":11},"ann":"a","ident":"x","stop":{"line":242,"column":12}},{"start":{"line":242,"column":20},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"lq_anf$##7205759403792806184","stop":{"line":242,"column":35}},{"start":{"line":242,"column":21},"ann":"{v : (Data.Heap.Binominal.Tree a) | root v == x}","ident":"lq_anf$##7205759403792806182","stop":{"line":242,"column":34}},{"start":{"line":242,"column":26},"ann":"{VV : a | VV == x}","ident":"x","stop":{"line":242,"column":27}},{"start":{"line":242,"column":28},"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | Set_emp (listElts v)\n                                            && len v == 0\n                                            && lubRank v == 0\n                                            && sumSizeList v == 0\n                                            && maxRankList v == 0}","ident":"_","stop":{"line":242,"column":30}},{"start":{"line":242,"column":31},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806179","stop":{"line":242,"column":32}},{"start":{"line":242,"column":33},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806181","stop":{"line":242,"column":34}},{"start":{"line":254,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\na -> x3:(Data.Heap.Binominal.Heap a) -> {v : (Data.Heap.Binominal.Heap a) | 1 + heapSize x3 == heapSize v}","ident":"Data.Heap.Binominal.insert","stop":{"line":254,"column":7}},{"start":{"line":254,"column":8},"ann":"a","ident":"x","stop":{"line":254,"column":9}},{"start":{"line":254,"column":22},"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {v : (Data.Heap.Binominal.Heap a) | unheap v == x1\n                                                                         && heapSize v == sumSizeList x1}","ident":"Data.Heap.Binominal.Heap","stop":{"line":254,"column":55}},{"start":{"line":254,"column":27},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"lq_anf$##7205759403792806105","stop":{"line":254,"column":55}},{"start":{"line":254,"column":36},"ann":"{v : (Data.Heap.Binominal.Tree a) | root v == x}","ident":"lq_anf$##7205759403792806104","stop":{"line":254,"column":51}},{"start":{"line":254,"column":42},"ann":"{VV : a | VV == x}","ident":"x","stop":{"line":254,"column":43}},{"start":{"line":254,"column":44},"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | Set_emp (listElts v)\n                                            && len v == 0\n                                            && lubRank v == 0\n                                            && sumSizeList v == 0\n                                            && maxRankList v == 0}","ident":"_","stop":{"line":254,"column":46}},{"start":{"line":254,"column":47},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806101","stop":{"line":254,"column":48}},{"start":{"line":254,"column":49},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792806103","stop":{"line":254,"column":50}},{"start":{"line":254,"column":52},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts}","ident":"ts","stop":{"line":254,"column":54}},{"start":{"line":258,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Tree a) -> x3:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == size x2 + sumSizeList x3}","ident":"Data.Heap.Binominal.insert'","stop":{"line":258,"column":8}},{"start":{"line":258,"column":9},"ann":"(Data.Heap.Binominal.Tree a)","ident":"t","stop":{"line":258,"column":10}},{"start":{"line":258,"column":16},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | Set_emp (listElts v)\n                                      && len v == 0\n                                      && lubRank v == 0\n                                      && sumSizeList v == 0\n                                      && maxRankList v == 0}","ident":"lq_anf$##7205759403792806092","stop":{"line":258,"column":19}},{"start":{"line":258,"column":17},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":258,"column":18}},{"start":{"line":260,"column":5},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == len (subtrees t)\n                     && v == rank t}","ident":"lq_anf$##7205759403792806093","stop":{"line":260,"column":11}},{"start":{"line":260,"column":10},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":260,"column":11}},{"start":{"line":260,"column":14},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == len (subtrees t')\n                     && v == rank t'}","ident":"lq_anf$##7205759403792806094","stop":{"line":260,"column":21}},{"start":{"line":260,"column":19},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t'}","ident":"t'","stop":{"line":260,"column":21}},{"start":{"line":260,"column":24},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":260,"column":25}},{"start":{"line":260,"column":28},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0}","ident":"ds_d3aw","stop":{"line":260,"column":30}},{"start":{"line":261,"column":24},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Tree a) -> x3:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == size x2 + sumSizeList x3}","ident":"Data.Heap.Binominal.insert'","stop":{"line":261,"column":47}},{"start":{"line":261,"column":32},"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t + size t'}","ident":"lq_anf$##7205759403792806097","stop":{"line":261,"column":43}},{"start":{"line":261,"column":38},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":261,"column":39}},{"start":{"line":261,"column":40},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t'}","ident":"t'","stop":{"line":261,"column":42}},{"start":{"line":261,"column":44},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts'}","ident":"ts'","stop":{"line":261,"column":47}},{"start":{"line":265,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:[a] -> {v : (Data.Heap.Binominal.Heap a) | heapSize v == len x2}","ident":"Data.Heap.Binominal.fromList","stop":{"line":265,"column":9}},{"start":{"line":265,"column":15},"ann":"forall a . {v : (Data.Heap.Binominal.Heap a) | heapSize v == 0}","ident":"_","stop":{"line":265,"column":20}},{"start":{"line":266,"column":19},"ann":"{v : (GHC.Classes.Ord a) | v == $dOrd_a2SG}","ident":"$dOrd_a2SG","stop":{"line":266,"column":41}},{"start":{"line":266,"column":26},"ann":"{VV : a | VV == x}","ident":"x","stop":{"line":266,"column":27}},{"start":{"line":266,"column":28},"ann":"{v : (Data.Heap.Binominal.Heap a) | heapSize v == len xs}","ident":"lq_anf$##7205759403792806176","stop":{"line":266,"column":41}},{"start":{"line":266,"column":38},"ann":"{v : [a] | lubRank v >= 0\n           && sumSizeList v >= 0\n           && len v >= 0\n           && maxRankList v >= 0\n           && v == xs}","ident":"xs","stop":{"line":266,"column":40}},{"start":{"line":308,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\n{VV : (Data.Heap.Binominal.Heap a) | 0 < len (unheap VV)} -> a","ident":"Data.Heap.Binominal.minimum","stop":{"line":308,"column":8}},{"start":{"line":308,"column":11},"ann":"forall a .\nx1:(Data.Heap.Binominal.Tree a) -> {VV : a | VV == root x1}","ident":"_","stop":{"line":308,"column":15}},{"start":{"line":308,"column":18},"ann":"forall a b . x1:(a, b) -> {VV : a | VV == fst x1}","ident":"_","stop":{"line":308,"column":21}},{"start":{"line":308,"column":24},"ann":"x1:{v : [(Data.Heap.Binominal.Tree a)] | 0 < len v} -> {v : ((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | root (fst x15) <= VV})]) | size (fst v) + sumSizeList (snd v) == sumSizeList x1}","ident":"lq_anf$##7205759403792806193","stop":{"line":308,"column":34}},{"start":{"line":308,"column":37},"ann":"forall a .\nx1:{v : (Data.Heap.Binominal.Heap a) | 0 < len (unheap v)} -> {v : [(Data.Heap.Binominal.Tree a)] | 0 < len v\n                                                                                                    && sumSizeList v == heapSize x1}","ident":"_","stop":{"line":308,"column":51}},{"start":{"line":314,"column":1},"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList x1}","ident":"Data.Heap.Binominal.reverseHeapList","stop":{"line":314,"column":16}},{"start":{"line":314,"column":17},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"xs","stop":{"line":314,"column":19}},{"start":{"line":314,"column":41},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == xs}","ident":"xs","stop":{"line":314,"column":43}},{"start":{"line":314,"column":44},"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | Set_emp (listElts v)\n                                            && len v == 0\n                                            && lubRank v == 0\n                                            && sumSizeList v == 0\n                                            && maxRankList v == 0}","ident":"_","stop":{"line":314,"column":46}},{"start":{"line":318,"column":1},"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> x2:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList x1 + sumSizeList x2}","ident":"Data.Heap.Binominal.reverseHeapListAux","stop":{"line":318,"column":19}},{"start":{"line":318,"column":23},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"acc","stop":{"line":318,"column":26}},{"start":{"line":318,"column":29},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == acc}","ident":"acc","stop":{"line":318,"column":32}},{"start":{"line":319,"column":33},"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> x2:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList x1 + sumSizeList x2}","ident":"Data.Heap.Binominal.reverseHeapListAux","stop":{"line":319,"column":62}},{"start":{"line":319,"column":52},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == xs}","ident":"xs","stop":{"line":319,"column":54}},{"start":{"line":319,"column":55},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | tail v == acc\n                                      && head v == x\n                                      && listElts v == Set_cup (Set_sng x) (listElts acc)\n                                      && len v == 1 + len acc\n                                      && lubRank v == 1 + maxRankList (: x acc)\n                                      && sumSizeList v == size x + sumSizeList acc\n                                      && maxRankList v == (if rank x < maxRankList acc then maxRankList acc else rank x)}","ident":"lq_anf$##7205759403792806186","stop":{"line":319,"column":62}},{"start":{"line":319,"column":56},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == x}","ident":"x","stop":{"line":319,"column":57}},{"start":{"line":319,"column":58},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == acc}","ident":"acc","stop":{"line":319,"column":61}},{"start":{"line":323,"column":1},"ann":"forall a .\nx1:{VV : (Data.Heap.Binominal.Heap a) | 0 < len (unheap VV)} -> {VV : [(Data.Heap.Binominal.Tree a)] | 0 < len VV\n                                                                                                       && sumSizeList VV == heapSize x1}","ident":"Data.Heap.Binominal.unheapNonempty","stop":{"line":323,"column":15}},{"start":{"line":323,"column":34},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts}","ident":"lq_anf$##7205759403792806189","stop":{"line":323,"column":36}},{"start":{"line":327,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:{VV : (Data.Heap.Binominal.Heap a) | 0 < len (unheap VV)} -> {v : (Data.Heap.Binominal.Heap a) | 1 + heapSize v == heapSize x2}","ident":"Data.Heap.Binominal.deleteMin","stop":{"line":327,"column":10}},{"start":{"line":327,"column":11},"ann":"{VV : (Data.Heap.Binominal.Heap a) | 0 < len (unheap VV)}","ident":"h","stop":{"line":327,"column":12}},{"start":{"line":328,"column":31},"ann":"((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | root (fst x9) <= VV})])","ident":"lq_anf$##7205759403792806198","stop":{"line":328,"column":60}},{"start":{"line":328,"column":42},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | 0 < len v\n                                      && sumSizeList v == heapSize h}","ident":"lq_anf$##7205759403792806197","stop":{"line":328,"column":60}},{"start":{"line":328,"column":58},"ann":"{v : (Data.Heap.Binominal.Heap a) | 0 < len (unheap v)\n                                    && heapSize v >= 0\n                                    && v == h}","ident":"h","stop":{"line":328,"column":59}},{"start":{"line":329,"column":8},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"lq_anf$##7205759403792806202","stop":{"line":329,"column":42}},{"start":{"line":329,"column":16},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList ts1}","ident":"lq_anf$##7205759403792806201","stop":{"line":329,"column":37}},{"start":{"line":329,"column":33},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts1}","ident":"ts1","stop":{"line":329,"column":36}},{"start":{"line":329,"column":38},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts2}","ident":"ts2","stop":{"line":329,"column":41}},{"start":{"line":333,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:{VV : (Data.Heap.Binominal.Heap a) | 0 < len (unheap VV)} -> (a, (Data.Heap.Binominal.Heap a))<\\x1 VV -> {v : (Data.Heap.Binominal.Heap {VV : a | x1 <= VV}) | 1 + heapSize v == heapSize x2}>","ident":"Data.Heap.Binominal.deleteMin2","stop":{"line":333,"column":11}},{"start":{"line":333,"column":12},"ann":"{VV : (Data.Heap.Binominal.Heap a) | 0 < len (unheap VV)}","ident":"h","stop":{"line":333,"column":13}},{"start":{"line":334,"column":36},"ann":"((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | root (fst x9) <= VV})])","ident":"lq_anf$##7205759403792806204","stop":{"line":334,"column":65}},{"start":{"line":334,"column":47},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | 0 < len v\n                                      && sumSizeList v == heapSize h}","ident":"lq_anf$##7205759403792806203","stop":{"line":334,"column":65}},{"start":{"line":334,"column":63},"ann":"{v : (Data.Heap.Binominal.Heap a) | 0 < len (unheap v)\n                                    && heapSize v >= 0\n                                    && v == h}","ident":"h","stop":{"line":334,"column":64}},{"start":{"line":335,"column":4},"ann":"{VV : a | VV == minElt}","ident":"minElt","stop":{"line":335,"column":10}},{"start":{"line":335,"column":12},"ann":"(Data.Heap.Binominal.Heap a)","ident":"lq_anf$##7205759403792806209","stop":{"line":335,"column":51}},{"start":{"line":335,"column":17},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"lq_anf$##7205759403792806208","stop":{"line":335,"column":51}},{"start":{"line":335,"column":25},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList ts1}","ident":"lq_anf$##7205759403792806207","stop":{"line":335,"column":46}},{"start":{"line":335,"column":42},"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | minElt <= VV})] | lubRank v >= 0\n                                                            && sumSizeList v >= 0\n                                                            && len v >= 0\n                                                            && maxRankList v >= 0\n                                                            && v == ts1}","ident":"ts1","stop":{"line":335,"column":45}},{"start":{"line":335,"column":47},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts2}","ident":"ts2","stop":{"line":335,"column":50}},{"start":{"line":339,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:{VV : [(Data.Heap.Binominal.Tree a)] | 0 < len VV} -> {v : ((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | root (fst v) <= VV})]) | size (fst v) + sumSizeList (snd v) == sumSizeList x2}","ident":"Data.Heap.Binominal.deleteMin'","stop":{"line":339,"column":11}},{"start":{"line":339,"column":18},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | Set_emp (listElts v)\n                                      && len v == 0\n                                      && lubRank v == 0\n                                      && sumSizeList v == 0\n                                      && maxRankList v == 0}","ident":"lq_anf$##7205759403792806134","stop":{"line":339,"column":25}},{"start":{"line":339,"column":19},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":339,"column":20}},{"start":{"line":339,"column":22},"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | Set_emp (listElts v)\n                                            && len v == 0\n                                            && lubRank v == 0\n                                            && sumSizeList v == 0\n                                            && maxRankList v == 0}","ident":"_","stop":{"line":339,"column":24}},{"start":{"line":341,"column":8},"ann":"(Data.Heap.Binominal.Tree a)","ident":"t'","stop":{"line":341,"column":10}},{"start":{"line":341,"column":12},"ann":"{VV : [(Data.Heap.Binominal.Tree {VV : a | root t' <= VV})] | len VV >= 0}","ident":"ts'","stop":{"line":341,"column":15}},{"start":{"line":341,"column":19},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:{VV : [(Data.Heap.Binominal.Tree a)] | 0 < len VV} -> {v : ((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | root (fst v) <= VV})]) | size (fst v) + sumSizeList (snd v) == sumSizeList x2}","ident":"Data.Heap.Binominal.deleteMin'","stop":{"line":341,"column":32}},{"start":{"line":341,"column":30},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0}","ident":"ds_d3bX","stop":{"line":341,"column":32}},{"start":{"line":342,"column":7},"ann":"{VV : a | VV == root t}","ident":"x","stop":{"line":342,"column":8}},{"start":{"line":342,"column":11},"ann":"{VV : a | VV == root t}","ident":"_","stop":{"line":342,"column":17}},{"start":{"line":342,"column":16},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":342,"column":17}},{"start":{"line":343,"column":7},"ann":"{VV : a | VV == root t'}","ident":"x'","stop":{"line":343,"column":9}},{"start":{"line":343,"column":12},"ann":"{VV : a | VV == root t'}","ident":"_","stop":{"line":343,"column":19}},{"start":{"line":343,"column":17},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t'}","ident":"t'","stop":{"line":343,"column":19}},{"start":{"line":344,"column":7},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t <= VV}) | size v == size t}","ident":"tBounded","stop":{"line":344,"column":15}},{"start":{"line":344,"column":18},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t <= VV}) | size v == size t}","ident":"_","stop":{"line":344,"column":47}},{"start":{"line":344,"column":46},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":344,"column":47}},{"start":{"line":345,"column":7},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t' <= VV}) | size v == size t'}","ident":"tBounded'","stop":{"line":345,"column":16}},{"start":{"line":345,"column":19},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t' <= VV}) | size v == size t'}","ident":"_","stop":{"line":345,"column":49}},{"start":{"line":345,"column":47},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t'}","ident":"t'","stop":{"line":345,"column":49}},{"start":{"line":346,"column":6},"ann":"{VV : a | VV == root t\n          && VV == x}","ident":"x","stop":{"line":346,"column":7}},{"start":{"line":346,"column":10},"ann":"{VV : a | VV == root t'\n          && VV == x'}","ident":"x'","stop":{"line":346,"column":12}},{"start":{"line":348,"column":9},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x <= VV}) | size v == size tBounded'}","ident":"hd","stop":{"line":348,"column":11}},{"start":{"line":348,"column":14},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x <= VV}) | size v == size tBounded'}","ident":"_","stop":{"line":348,"column":57}},{"start":{"line":348,"column":43},"ann":"{VV : a | VV == root t\n          && VV == x}","ident":"x","stop":{"line":348,"column":44}},{"start":{"line":348,"column":45},"ann":"{VV : a | VV == root t'\n          && VV == x'}","ident":"x'","stop":{"line":348,"column":47}},{"start":{"line":348,"column":48},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t' <= VV}) | size v == size t'\n                                                           && v == tBounded'}","ident":"tBounded'","stop":{"line":348,"column":57}},{"start":{"line":349,"column":9},"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | x <= VV})] | sumSizeList v == sumSizeList ts'}","ident":"tl","stop":{"line":349,"column":11}},{"start":{"line":349,"column":14},"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | x <= VV})] | sumSizeList v == sumSizeList ts'}","ident":"_","stop":{"line":349,"column":55}},{"start":{"line":349,"column":47},"ann":"{VV : a | VV == root t\n          && VV == x}","ident":"x","stop":{"line":349,"column":48}},{"start":{"line":349,"column":49},"ann":"{VV : a | VV == root t'\n          && VV == x'}","ident":"x'","stop":{"line":349,"column":51}},{"start":{"line":349,"column":52},"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | root t' <= VV})] | len v >= 0\n                                                             && lubRank v >= 0\n                                                             && sumSizeList v >= 0\n                                                             && maxRankList v >= 0\n                                                             && v == ts'}","ident":"ts'","stop":{"line":349,"column":55}},{"start":{"line":350,"column":6},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t}","ident":"t","stop":{"line":350,"column":7}},{"start":{"line":350,"column":9},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x <= VV}) | size v == size tBounded'\n                                                     && v == hd}","ident":"hd","stop":{"line":350,"column":11}},{"start":{"line":350,"column":12},"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | x <= VV})] | sumSizeList v == sumSizeList ts'\n                                                       && lubRank v >= 0\n                                                       && sumSizeList v >= 0\n                                                       && len v >= 0\n                                                       && maxRankList v >= 0\n                                                       && v == tl}","ident":"tl","stop":{"line":350,"column":14}},{"start":{"line":352,"column":9},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x' <= VV}) | size v == size tBounded}","ident":"hd","stop":{"line":352,"column":11}},{"start":{"line":352,"column":14},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x' <= VV}) | size v == size tBounded}","ident":"_","stop":{"line":352,"column":56}},{"start":{"line":352,"column":43},"ann":"{VV : a | VV == root t'\n          && VV == x'}","ident":"x'","stop":{"line":352,"column":45}},{"start":{"line":352,"column":46},"ann":"{VV : a | VV == root t\n          && VV == x}","ident":"x","stop":{"line":352,"column":47}},{"start":{"line":352,"column":48},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | root t <= VV}) | size v == size t\n                                                          && v == tBounded}","ident":"tBounded","stop":{"line":352,"column":56}},{"start":{"line":353,"column":6},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t'}","ident":"t'","stop":{"line":353,"column":8}},{"start":{"line":353,"column":10},"ann":"{v : (Data.Heap.Binominal.Tree {VV : a | x' <= VV}) | size v == size tBounded\n                                                      && v == hd}","ident":"hd","stop":{"line":353,"column":12}},{"start":{"line":353,"column":13},"ann":"{v : [(Data.Heap.Binominal.Tree {VV : a | root t' <= VV})] | len v >= 0\n                                                             && lubRank v >= 0\n                                                             && sumSizeList v >= 0\n                                                             && maxRankList v >= 0\n                                                             && v == ts'}","ident":"ts'","stop":{"line":353,"column":16}},{"start":{"line":366,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Heap a) -> x3:(Data.Heap.Binominal.Heap a) -> {VV : (Data.Heap.Binominal.Heap a) | heapSize VV == heapSize x2 + heapSize x3}","ident":"Data.Heap.Binominal.merge","stop":{"line":366,"column":6}},{"start":{"line":366,"column":31},"ann":"forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {v : (Data.Heap.Binominal.Heap a) | unheap v == x1\n                                                                         && heapSize v == sumSizeList x1}","ident":"Data.Heap.Binominal.Heap","stop":{"line":366,"column":52}},{"start":{"line":366,"column":36},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList ts1 + sumSizeList ts2}","ident":"lq_anf$##7205759403792806126","stop":{"line":366,"column":52}},{"start":{"line":366,"column":44},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts1}","ident":"ts1","stop":{"line":366,"column":47}},{"start":{"line":366,"column":48},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts2}","ident":"ts2","stop":{"line":366,"column":51}},{"start":{"line":370,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:[(Data.Heap.Binominal.Tree a)] -> x3:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList x2 + sumSizeList x3}","ident":"Data.Heap.Binominal.merge'","stop":{"line":370,"column":7}},{"start":{"line":370,"column":8},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"ts1","stop":{"line":370,"column":11}},{"start":{"line":370,"column":17},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts1}","ident":"ts1","stop":{"line":370,"column":20}},{"start":{"line":371,"column":17},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0}","ident":"ds_d3aS","stop":{"line":371,"column":20}},{"start":{"line":373,"column":5},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == len (subtrees t1)\n                     && v == rank t1}","ident":"lq_anf$##7205759403792806110","stop":{"line":373,"column":12}},{"start":{"line":373,"column":10},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1}","ident":"t1","stop":{"line":373,"column":12}},{"start":{"line":373,"column":15},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == len (subtrees t2)\n                     && v == rank t2}","ident":"lq_anf$##7205759403792806111","stop":{"line":373,"column":22}},{"start":{"line":373,"column":20},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2}","ident":"t2","stop":{"line":373,"column":22}},{"start":{"line":373,"column":25},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1}","ident":"t1","stop":{"line":373,"column":27}},{"start":{"line":373,"column":30},"ann":"[(Data.Heap.Binominal.Tree a)]","ident":"lq_anf$##7205759403792806121","stop":{"line":373,"column":45}},{"start":{"line":373,"column":37},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts1'}","ident":"ts1'","stop":{"line":373,"column":41}},{"start":{"line":373,"column":42},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0}","ident":"ds_d3aS","stop":{"line":373,"column":45}},{"start":{"line":374,"column":5},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == len (subtrees t2)\n                     && v == rank t2}","ident":"lq_anf$##7205759403792806114","stop":{"line":374,"column":12}},{"start":{"line":374,"column":10},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2}","ident":"t2","stop":{"line":374,"column":12}},{"start":{"line":374,"column":15},"ann":"{v : GHC.Types.Int | v >= 0\n                     && v == len (subtrees t1)\n                     && v == rank t1}","ident":"lq_anf$##7205759403792806115","stop":{"line":374,"column":22}},{"start":{"line":374,"column":20},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1}","ident":"t1","stop":{"line":374,"column":22}},{"start":{"line":374,"column":25},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2}","ident":"t2","stop":{"line":374,"column":27}},{"start":{"line":374,"column":30},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList ts1 + sumSizeList ts2'}","ident":"lq_anf$##7205759403792806120","stop":{"line":374,"column":45}},{"start":{"line":374,"column":37},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts1}","ident":"ts1","stop":{"line":374,"column":40}},{"start":{"line":374,"column":41},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts2'}","ident":"ts2'","stop":{"line":374,"column":45}},{"start":{"line":375,"column":25},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Tree a) -> x3:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == size x2 + sumSizeList x3}","ident":"Data.Heap.Binominal.insert'","stop":{"line":375,"column":64}},{"start":{"line":375,"column":33},"ann":"{v : (Data.Heap.Binominal.Tree a) | size v == size t1 + size t2}","ident":"lq_anf$##7205759403792806118","stop":{"line":375,"column":45}},{"start":{"line":375,"column":39},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t1}","ident":"t1","stop":{"line":375,"column":41}},{"start":{"line":375,"column":42},"ann":"{v : (Data.Heap.Binominal.Tree a) | v == t2}","ident":"t2","stop":{"line":375,"column":44}},{"start":{"line":375,"column":46},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList ts1' + sumSizeList ts2'}","ident":"lq_anf$##7205759403792806119","stop":{"line":375,"column":64}},{"start":{"line":375,"column":54},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts1'}","ident":"ts1'","stop":{"line":375,"column":58}},{"start":{"line":375,"column":59},"ann":"{v : [(Data.Heap.Binominal.Tree a)] | lubRank v >= 0\n                                      && sumSizeList v >= 0\n                                      && len v >= 0\n                                      && maxRankList v >= 0\n                                      && v == ts2'}","ident":"ts2'","stop":{"line":375,"column":63}},{"start":{"line":391,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Heap a) -> {VV : [a]<\\x1 VV -> {VV : a | x1 <= VV}> | len VV == heapSize x2}","ident":"Data.Heap.Binominal.heapSort","stop":{"line":391,"column":9}},{"start":{"line":391,"column":22},"ann":"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | Set_emp (listElts v)\n                                            && len v == 0\n                                            && lubRank v == 0\n                                            && sumSizeList v == 0\n                                            && maxRankList v == 0}","ident":"_","stop":{"line":391,"column":24}},{"start":{"line":393,"column":8},"ann":"a","ident":"minElt","stop":{"line":393,"column":14}},{"start":{"line":393,"column":16},"ann":"(Data.Heap.Binominal.Heap {VV : a | minElt <= VV\n                                    && VV >= minElt})","ident":"h'","stop":{"line":393,"column":18}},{"start":{"line":393,"column":22},"ann":"(a, (Data.Heap.Binominal.Heap a))<\\x4 VV -> (Data.Heap.Binominal.Heap {VV : a | x4 <= VV})>","ident":"_","stop":{"line":393,"column":34}},{"start":{"line":393,"column":33},"ann":"{v : (Data.Heap.Binominal.Heap a) | heapSize v >= 0}","ident":"ds_d3cM","stop":{"line":393,"column":34}},{"start":{"line":394,"column":3},"ann":"{VV : a | VV == minElt}","ident":"minElt","stop":{"line":394,"column":9}},{"start":{"line":394,"column":12},"ann":"{VV : [a]<\\x1 VV -> {VV : a | x1 <= VV}> | len VV == heapSize h'}","ident":"lq_anf$##7205759403792806212","stop":{"line":394,"column":23}},{"start":{"line":394,"column":21},"ann":"{v : (Data.Heap.Binominal.Heap {VV : a | minElt <= VV\n                                         && VV >= minElt}) | heapSize v >= 0\n                                                             && v == h'}","ident":"h'","stop":{"line":394,"column":23}},{"start":{"line":398,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:[a] -> {VV : [a]<\\x1 VV -> {VV : a | x1 <= VV}> | len VV == len x2}","ident":"Data.Heap.Binominal.sortUsingHeap","stop":{"line":398,"column":14}},{"start":{"line":398,"column":17},"ann":"x1:(Data.Heap.Binominal.Heap a) -> {v : [a]<\\x5 VV -> {VV : a | x5 <= VV}> | len v == heapSize x1}","ident":"lq_anf$##7205759403792806213","stop":{"line":398,"column":25}},{"start":{"line":398,"column":28},"ann":"x1:[a] -> {v : (Data.Heap.Binominal.Heap a) | heapSize v == len x1}","ident":"lq_anf$##7205759403792806214","stop":{"line":398,"column":36}}],"errors":[]}