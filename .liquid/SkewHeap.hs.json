{"status":"safe","types":{"51":{"1":{"ann":"forall a . (Data.Heap.Skew.Skew a)","ident":"Data.Heap.Skew.empty","row":51,"col":1}},"185":{"25":{"ann":"(Data.Heap.Skew.Skew a)","ident":"s","row":185,"col":25},"1":{"ann":"forall a .\nx1:a -> x2:(Data.Heap.Skew.Skew {VV : a | x1 <= VV}) -> x3:{VV : a | VV <= x1} -> {r : (Data.Heap.Skew.Skew {VV : a | x3 <= VV}) | size x2 == size r}","ident":"Data.Heap.Skew.boundedSkewTransitive","row":185,"col":1}},"189":{"7":{"ann":"(Data.Heap.Skew.Skew a)","ident":"t1","row":189,"col":7},"17":{"ann":"{v : (Data.Heap.Skew.Skew a) | size v >= 0\n                               && v == t1}","ident":"t1","row":189,"col":17},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\n(Data.Heap.Skew.Skew a) -> (Data.Heap.Skew.Skew a) -> (Data.Heap.Skew.Skew a)","ident":"Data.Heap.Skew.merge","row":189,"col":1}},"190":{"17":{"ann":"{v : (Data.Heap.Skew.Skew a) | size v >= 0}","ident":"ds_d2Vn","row":190,"col":17}},"169":{"13":{"ann":"forall a . {v : (Data.Set.Internal.Set a) | Set_emp v}","ident":"_","row":169,"col":13},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Skew.Skew a) -> {VV : (Data.Set.Internal.Set a) | VV == elts x2}","ident":"Data.Heap.Skew.elts","row":169,"col":1}},"170":{"72":{"ann":"{v : (Data.Heap.Skew.Skew {VV : a | rt <= VV}) | size v >= 0\n                                                 && v == r}","ident":"r","row":170,"col":72},"22":{"ann":"{v : (GHC.Classes.Ord a) | v == $dOrd_a2RN}","ident":"$dOrd_a2RN","row":170,"col":22},"66":{"ann":"{v : (Data.Set.Internal.Set a) | v == elts r}","ident":"lq_anf$##7205759403792804944","row":170,"col":66},"56":{"ann":"{v : (Data.Set.Internal.Set a) | v == elts l}","ident":"lq_anf$##7205759403792804942","row":170,"col":56},"30":{"ann":"(Data.Set.Internal.Set a)","ident":"lq_anf$##7205759403792804943","row":170,"col":30},"62":{"ann":"{v : (Data.Heap.Skew.Skew {VV : a | rt <= VV}) | size v >= 0\n                                                 && v == l}","ident":"l","row":170,"col":62},"52":{"ann":"{VV : a | VV == rt}","ident":"rt","row":170,"col":52},"39":{"ann":"{v : (Data.Set.Internal.Set a) | v == Set_sng rt}","ident":"lq_anf$##7205759403792804941","row":170,"col":39}},"71":{"22":{"ann":"forall a .\n{v : (Data.Heap.Skew.Skew a) | elts v == Set_empty 0\n                               && size v == 0}","ident":"_","row":71,"col":22},"1":{"ann":"forall a . a -> (Data.Heap.Skew.Skew a)","ident":"Data.Heap.Skew.singleton","row":71,"col":1},"20":{"ann":"{VV : a | VV == x}","ident":"x","row":71,"col":20},"27":{"ann":"forall a .\n{v : (Data.Heap.Skew.Skew a) | elts v == Set_empty 0\n                               && size v == 0}","ident":"_","row":71,"col":27},"11":{"ann":"a","ident":"x","row":71,"col":11}},"134":{"25":{"ann":"{v : GHC.Types.Int | v == size l\n                     && v >= 0}","ident":"lq_anf$##7205759403792804935","row":134,"col":25},"30":{"ann":"{v : (Data.Heap.Skew.Skew a) | v == l}","ident":"l","row":134,"col":30},"34":{"ann":"{v : GHC.Types.Int | v == size r\n                     && v >= 0}","ident":"lq_anf$##7205759403792804937","row":134,"col":34},"39":{"ann":"{v : (Data.Heap.Skew.Skew a) | v == r}","ident":"r","row":134,"col":39},"21":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792804934","row":134,"col":21}},"1":{"1":{"ann":"GHC.Types.Module","ident":"Data.Heap.Skew.$trModule","row":1,"col":1}},"194":{"84":{"ann":"{VV : a | VV == rt1}","ident":"rt1","row":194,"col":84},"15":{"ann":"{VV : a | VV == rt2}","ident":"rt2","row":194,"col":15},"96":{"ann":"{VV : a | VV == rt2}","ident":"rt2","row":194,"col":96},"78":{"ann":"{v : (Data.Heap.Skew.Skew a) | right v == r1\n                               && left v == l1\n                               && root v == rt1\n                               && elts v == Set_cup (Set_cup (Set_sng rt1) (elts l1)) (elts r1)\n                               && minimum v == rt1\n                               && size v == (1 + size l1) + size r1}","ident":"lq_anf$##7205759403792804953","row":194,"col":78},"22":{"ann":"(Data.Heap.Skew.Skew a)","ident":"lq_anf$##7205759403792804956","row":194,"col":22},"19":{"ann":"{v : (Data.Heap.Skew.Skew {VV : a | rt2 <= VV}) | size v >= 0\n                                                  && v == l2}","ident":"l2","row":194,"col":19},"91":{"ann":"{v : (Data.Heap.Skew.Skew {VV : a | rt1 <= VV}) | size v >= 0\n                                                  && v == r1}","ident":"r1","row":194,"col":91},"88":{"ann":"{v : (Data.Heap.Skew.Skew {VV : a | rt1 <= VV}) | size v >= 0\n                                                  && v == l1}","ident":"l1","row":194,"col":88},"29":{"ann":"{v : (Data.Heap.Skew.Skew {VV : a | rt2 <= VV}) | size v >= 0\n                                                  && v == l2}","ident":"l2","row":194,"col":29},"59":{"ann":"(Data.Heap.Skew.Skew a)","ident":"lq_anf$##7205759403792804954","row":194,"col":59},"55":{"ann":"{VV : a | VV == rt1}","ident":"rt1","row":194,"col":55},"10":{"ann":"forall a .\nx1:a -> x2:(Data.Heap.Skew.Skew {VV : a | x1 <= VV}) -> x3:(Data.Heap.Skew.Skew {VV : a | x1 <= VV}) -> {v : (Data.Heap.Skew.Skew a) | right v == x3\n                                                                                                                                       && left v == x2\n                                                                                                                                       && root v == x1\n                                                                                                                                       && elts v == Set_cup (Set_cup (Set_sng x1) (elts x2)) (elts x3)\n                                                                                                                                       && minimum v == x1\n                                                                                                                                       && size v == (1 + size x2) + size x3}","ident":"Data.Heap.Skew.Node","row":194,"col":10},"32":{"ann":"(Data.Heap.Skew.Skew {VV : a | rt2 <= VV})","ident":"lq_anf$##7205759403792804955","row":194,"col":32}},"192":{"15":{"ann":"{VV : a | VV == rt2}","ident":"rt2","row":192,"col":15},"8":{"ann":"{VV : a | VV == rt1}","ident":"rt1","row":192,"col":8}},"181":{"43":{"ann":"{v : (Data.Heap.Skew.Skew {VV : a | rt <= VV}) | size v >= 0\n                                                 && v == l}","ident":"l","row":181,"col":43},"35":{"ann":"forall a .\nx1:a -> x2:(Data.Heap.Skew.Skew {VV : a | x1 <= VV}) -> x3:(Data.Heap.Skew.Skew {VV : a | x1 <= VV}) -> {v : (Data.Heap.Skew.Skew a) | right v == x3\n                                                                                                                                       && left v == x2\n                                                                                                                                       && root v == x1\n                                                                                                                                       && elts v == Set_cup (Set_cup (Set_sng x1) (elts x2)) (elts x3)\n                                                                                                                                       && minimum v == x1\n                                                                                                                                       && size v == (1 + size x2) + size x3}","ident":"Data.Heap.Skew.Node","row":181,"col":35},"45":{"ann":"{v : (Data.Heap.Skew.Skew {VV : a | rt <= VV}) | size v >= 0\n                                                 && v == r}","ident":"r","row":181,"col":45},"1":{"ann":"forall a .\nx1:{VV : (Data.Heap.Skew.Skew a) | 0 < size VV} -> {r : (Data.Heap.Skew.Skew {VV : a | minimum x1 <= VV}) | size x1 == size r}","ident":"Data.Heap.Skew.skewBoundedByRoot","row":181,"col":1},"40":{"ann":"{VV : a | VV == rt}","ident":"rt","row":181,"col":40}},"139":{"1":{"ann":"forall a .\nx1:{VV : (Data.Heap.Skew.Skew a) | 0 < size VV} -> {VV : a | VV == minimum x1}","ident":"Data.Heap.Skew.minimum","row":139,"col":1},"24":{"ann":"{VV : a | VV == x}","ident":"x","row":139,"col":24}},"193":{"28":{"ann":"{v : (Data.Heap.Skew.Skew {VV : a | rt1 <= VV}) | size v >= 0\n                                                  && v == l1}","ident":"l1","row":193,"col":28},"31":{"ann":"(Data.Heap.Skew.Skew {VV : a | rt1 <= VV})","ident":"lq_anf$##7205759403792804959","row":193,"col":31},"14":{"ann":"{VV : a | VV == rt1}","ident":"rt1","row":193,"col":14},"83":{"ann":"{VV : a | VV == rt2}","ident":"rt2","row":193,"col":83},"90":{"ann":"{v : (Data.Heap.Skew.Skew {VV : a | rt2 <= VV}) | size v >= 0\n                                                  && v == r2}","ident":"r2","row":193,"col":90},"18":{"ann":"{v : (Data.Heap.Skew.Skew {VV : a | rt1 <= VV}) | size v >= 0\n                                                  && v == l1}","ident":"l1","row":193,"col":18},"95":{"ann":"{VV : a | VV == rt1}","ident":"rt1","row":193,"col":95},"87":{"ann":"{v : (Data.Heap.Skew.Skew {VV : a | rt2 <= VV}) | size v >= 0\n                                                  && v == l2}","ident":"l2","row":193,"col":87},"58":{"ann":"(Data.Heap.Skew.Skew a)","ident":"lq_anf$##7205759403792804958","row":193,"col":58},"77":{"ann":"{v : (Data.Heap.Skew.Skew a) | right v == r2\n                               && left v == l2\n                               && root v == rt2\n                               && elts v == Set_cup (Set_cup (Set_sng rt2) (elts l2)) (elts r2)\n                               && minimum v == rt2\n                               && size v == (1 + size l2) + size r2}","ident":"lq_anf$##7205759403792804957","row":193,"col":77},"21":{"ann":"(Data.Heap.Skew.Skew a)","ident":"lq_anf$##7205759403792804960","row":193,"col":21},"9":{"ann":"forall a .\nx1:a -> x2:(Data.Heap.Skew.Skew {VV : a | x1 <= VV}) -> x3:(Data.Heap.Skew.Skew {VV : a | x1 <= VV}) -> {v : (Data.Heap.Skew.Skew a) | right v == x3\n                                                                                                                                       && left v == x2\n                                                                                                                                       && root v == x1\n                                                                                                                                       && elts v == Set_cup (Set_cup (Set_sng x1) (elts x2)) (elts x3)\n                                                                                                                                       && minimum v == x1\n                                                                                                                                       && size v == (1 + size x2) + size x3}","ident":"Data.Heap.Skew.Node","row":193,"col":9},"54":{"ann":"{VV : a | VV == rt2}","ident":"rt2","row":193,"col":54}},"177":{"1":{"ann":"forall a . {v : GHC.Types.Bool | v} -> a -> a","ident":"Data.Heap.Skew.assert","row":177,"col":1},"10":{"ann":"a","ident":"x","row":177,"col":10}},"133":{"13":{"ann":"{v : GHC.Prim.Int# | v == 0}","ident":"lq_anf$##7205759403792804932","row":133,"col":13},"1":{"ann":"forall a .\nx1:(Data.Heap.Skew.Skew a) -> {VV : GHC.Types.Int | VV == size x1\n                                                    && VV >= 0}","ident":"Data.Heap.Skew.size","row":133,"col":1}}},"sptypes":[{"start":{"line":1,"column":1},"ann":"GHC.Types.Module","ident":"Data.Heap.Skew.$trModule","stop":{"line":1,"column":1}},{"start":{"line":51,"column":1},"ann":"forall a . (Data.Heap.Skew.Skew a)","ident":"Data.Heap.Skew.empty","stop":{"line":51,"column":6}},{"start":{"line":71,"column":1},"ann":"forall a . a -> (Data.Heap.Skew.Skew a)","ident":"Data.Heap.Skew.singleton","stop":{"line":71,"column":10}},{"start":{"line":71,"column":11},"ann":"a","ident":"x","stop":{"line":71,"column":12}},{"start":{"line":71,"column":20},"ann":"{VV : a | VV == x}","ident":"x","stop":{"line":71,"column":21}},{"start":{"line":71,"column":22},"ann":"forall a .\n{v : (Data.Heap.Skew.Skew a) | elts v == Set_empty 0\n                               && size v == 0}","ident":"_","stop":{"line":71,"column":26}},{"start":{"line":71,"column":27},"ann":"forall a .\n{v : (Data.Heap.Skew.Skew a) | elts v == Set_empty 0\n                               && size v == 0}","ident":"_","stop":{"line":71,"column":31}},{"start":{"line":133,"column":1},"ann":"forall a .\nx1:(Data.Heap.Skew.Skew a) -> {VV : GHC.Types.Int | VV == size x1\n                                                    && VV >= 0}","ident":"Data.Heap.Skew.size","stop":{"line":133,"column":5}},{"start":{"line":133,"column":13},"ann":"{v : GHC.Prim.Int# | v == 0}","ident":"lq_anf$##7205759403792804932","stop":{"line":133,"column":14}},{"start":{"line":134,"column":21},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792804934","stop":{"line":134,"column":22}},{"start":{"line":134,"column":25},"ann":"{v : GHC.Types.Int | v == size l\n                     && v >= 0}","ident":"lq_anf$##7205759403792804935","stop":{"line":134,"column":31}},{"start":{"line":134,"column":30},"ann":"{v : (Data.Heap.Skew.Skew a) | v == l}","ident":"l","stop":{"line":134,"column":31}},{"start":{"line":134,"column":34},"ann":"{v : GHC.Types.Int | v == size r\n                     && v >= 0}","ident":"lq_anf$##7205759403792804937","stop":{"line":134,"column":40}},{"start":{"line":134,"column":39},"ann":"{v : (Data.Heap.Skew.Skew a) | v == r}","ident":"r","stop":{"line":134,"column":40}},{"start":{"line":139,"column":1},"ann":"forall a .\nx1:{VV : (Data.Heap.Skew.Skew a) | 0 < size VV} -> {VV : a | VV == minimum x1}","ident":"Data.Heap.Skew.minimum","stop":{"line":139,"column":8}},{"start":{"line":139,"column":24},"ann":"{VV : a | VV == x}","ident":"x","stop":{"line":139,"column":25}},{"start":{"line":169,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Skew.Skew a) -> {VV : (Data.Set.Internal.Set a) | VV == elts x2}","ident":"Data.Heap.Skew.elts","stop":{"line":169,"column":5}},{"start":{"line":169,"column":13},"ann":"forall a . {v : (Data.Set.Internal.Set a) | Set_emp v}","ident":"_","stop":{"line":169,"column":20}},{"start":{"line":170,"column":22},"ann":"{v : (GHC.Classes.Ord a) | v == $dOrd_a2RN}","ident":"$dOrd_a2RN","stop":{"line":170,"column":74}},{"start":{"line":170,"column":30},"ann":"(Data.Set.Internal.Set a)","ident":"lq_anf$##7205759403792804943","stop":{"line":170,"column":65}},{"start":{"line":170,"column":39},"ann":"{v : (Data.Set.Internal.Set a) | v == Set_sng rt}","ident":"lq_anf$##7205759403792804941","stop":{"line":170,"column":55}},{"start":{"line":170,"column":52},"ann":"{VV : a | VV == rt}","ident":"rt","stop":{"line":170,"column":54}},{"start":{"line":170,"column":56},"ann":"{v : (Data.Set.Internal.Set a) | v == elts l}","ident":"lq_anf$##7205759403792804942","stop":{"line":170,"column":64}},{"start":{"line":170,"column":62},"ann":"{v : (Data.Heap.Skew.Skew {VV : a | rt <= VV}) | size v >= 0\n                                                 && v == l}","ident":"l","stop":{"line":170,"column":63}},{"start":{"line":170,"column":66},"ann":"{v : (Data.Set.Internal.Set a) | v == elts r}","ident":"lq_anf$##7205759403792804944","stop":{"line":170,"column":74}},{"start":{"line":170,"column":72},"ann":"{v : (Data.Heap.Skew.Skew {VV : a | rt <= VV}) | size v >= 0\n                                                 && v == r}","ident":"r","stop":{"line":170,"column":73}},{"start":{"line":177,"column":1},"ann":"forall a . {v : GHC.Types.Bool | v} -> a -> a","ident":"Data.Heap.Skew.assert","stop":{"line":177,"column":7}},{"start":{"line":177,"column":10},"ann":"a","ident":"x","stop":{"line":177,"column":11}},{"start":{"line":181,"column":1},"ann":"forall a .\nx1:{VV : (Data.Heap.Skew.Skew a) | 0 < size VV} -> {r : (Data.Heap.Skew.Skew {VV : a | minimum x1 <= VV}) | size x1 == size r}","ident":"Data.Heap.Skew.skewBoundedByRoot","stop":{"line":181,"column":18}},{"start":{"line":181,"column":35},"ann":"forall a .\nx1:a -> x2:(Data.Heap.Skew.Skew {VV : a | x1 <= VV}) -> x3:(Data.Heap.Skew.Skew {VV : a | x1 <= VV}) -> {v : (Data.Heap.Skew.Skew a) | right v == x3\n                                                                                                                                       && left v == x2\n                                                                                                                                       && root v == x1\n                                                                                                                                       && elts v == Set_cup (Set_cup (Set_sng x1) (elts x2)) (elts x3)\n                                                                                                                                       && minimum v == x1\n                                                                                                                                       && size v == (1 + size x2) + size x3}","ident":"Data.Heap.Skew.Node","stop":{"line":181,"column":46}},{"start":{"line":181,"column":40},"ann":"{VV : a | VV == rt}","ident":"rt","stop":{"line":181,"column":42}},{"start":{"line":181,"column":43},"ann":"{v : (Data.Heap.Skew.Skew {VV : a | rt <= VV}) | size v >= 0\n                                                 && v == l}","ident":"l","stop":{"line":181,"column":44}},{"start":{"line":181,"column":45},"ann":"{v : (Data.Heap.Skew.Skew {VV : a | rt <= VV}) | size v >= 0\n                                                 && v == r}","ident":"r","stop":{"line":181,"column":46}},{"start":{"line":185,"column":1},"ann":"forall a .\nx1:a -> x2:(Data.Heap.Skew.Skew {VV : a | x1 <= VV}) -> x3:{VV : a | VV <= x1} -> {r : (Data.Heap.Skew.Skew {VV : a | x3 <= VV}) | size x2 == size r}","ident":"Data.Heap.Skew.boundedSkewTransitive","stop":{"line":185,"column":22}},{"start":{"line":185,"column":25},"ann":"(Data.Heap.Skew.Skew a)","ident":"s","stop":{"line":185,"column":26}},{"start":{"line":189,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\n(Data.Heap.Skew.Skew a) -> (Data.Heap.Skew.Skew a) -> (Data.Heap.Skew.Skew a)","ident":"Data.Heap.Skew.merge","stop":{"line":189,"column":6}},{"start":{"line":189,"column":7},"ann":"(Data.Heap.Skew.Skew a)","ident":"t1","stop":{"line":189,"column":9}},{"start":{"line":189,"column":17},"ann":"{v : (Data.Heap.Skew.Skew a) | size v >= 0\n                               && v == t1}","ident":"t1","stop":{"line":189,"column":19}},{"start":{"line":190,"column":17},"ann":"{v : (Data.Heap.Skew.Skew a) | size v >= 0}","ident":"ds_d2Vn","stop":{"line":190,"column":19}},{"start":{"line":192,"column":8},"ann":"{VV : a | VV == rt1}","ident":"rt1","stop":{"line":192,"column":11}},{"start":{"line":192,"column":15},"ann":"{VV : a | VV == rt2}","ident":"rt2","stop":{"line":192,"column":18}},{"start":{"line":193,"column":9},"ann":"forall a .\nx1:a -> x2:(Data.Heap.Skew.Skew {VV : a | x1 <= VV}) -> x3:(Data.Heap.Skew.Skew {VV : a | x1 <= VV}) -> {v : (Data.Heap.Skew.Skew a) | right v == x3\n                                                                                                                                       && left v == x2\n                                                                                                                                       && root v == x1\n                                                                                                                                       && elts v == Set_cup (Set_cup (Set_sng x1) (elts x2)) (elts x3)\n                                                                                                                                       && minimum v == x1\n                                                                                                                                       && size v == (1 + size x2) + size x3}","ident":"Data.Heap.Skew.Node","stop":{"line":193,"column":100}},{"start":{"line":193,"column":14},"ann":"{VV : a | VV == rt1}","ident":"rt1","stop":{"line":193,"column":17}},{"start":{"line":193,"column":18},"ann":"{v : (Data.Heap.Skew.Skew {VV : a | rt1 <= VV}) | size v >= 0\n                                                  && v == l1}","ident":"l1","stop":{"line":193,"column":20}},{"start":{"line":193,"column":21},"ann":"(Data.Heap.Skew.Skew a)","ident":"lq_anf$##7205759403792804960","stop":{"line":193,"column":100}},{"start":{"line":193,"column":28},"ann":"{v : (Data.Heap.Skew.Skew {VV : a | rt1 <= VV}) | size v >= 0\n                                                  && v == l1}","ident":"l1","stop":{"line":193,"column":30}},{"start":{"line":193,"column":31},"ann":"(Data.Heap.Skew.Skew {VV : a | rt1 <= VV})","ident":"lq_anf$##7205759403792804959","stop":{"line":193,"column":99}},{"start":{"line":193,"column":54},"ann":"{VV : a | VV == rt2}","ident":"rt2","stop":{"line":193,"column":57}},{"start":{"line":193,"column":58},"ann":"(Data.Heap.Skew.Skew a)","ident":"lq_anf$##7205759403792804958","stop":{"line":193,"column":94}},{"start":{"line":193,"column":77},"ann":"{v : (Data.Heap.Skew.Skew a) | right v == r2\n                               && left v == l2\n                               && root v == rt2\n                               && elts v == Set_cup (Set_cup (Set_sng rt2) (elts l2)) (elts r2)\n                               && minimum v == rt2\n                               && size v == (1 + size l2) + size r2}","ident":"lq_anf$##7205759403792804957","stop":{"line":193,"column":93}},{"start":{"line":193,"column":83},"ann":"{VV : a | VV == rt2}","ident":"rt2","stop":{"line":193,"column":86}},{"start":{"line":193,"column":87},"ann":"{v : (Data.Heap.Skew.Skew {VV : a | rt2 <= VV}) | size v >= 0\n                                                  && v == l2}","ident":"l2","stop":{"line":193,"column":89}},{"start":{"line":193,"column":90},"ann":"{v : (Data.Heap.Skew.Skew {VV : a | rt2 <= VV}) | size v >= 0\n                                                  && v == r2}","ident":"r2","stop":{"line":193,"column":92}},{"start":{"line":193,"column":95},"ann":"{VV : a | VV == rt1}","ident":"rt1","stop":{"line":193,"column":98}},{"start":{"line":194,"column":10},"ann":"forall a .\nx1:a -> x2:(Data.Heap.Skew.Skew {VV : a | x1 <= VV}) -> x3:(Data.Heap.Skew.Skew {VV : a | x1 <= VV}) -> {v : (Data.Heap.Skew.Skew a) | right v == x3\n                                                                                                                                       && left v == x2\n                                                                                                                                       && root v == x1\n                                                                                                                                       && elts v == Set_cup (Set_cup (Set_sng x1) (elts x2)) (elts x3)\n                                                                                                                                       && minimum v == x1\n                                                                                                                                       && size v == (1 + size x2) + size x3}","ident":"Data.Heap.Skew.Node","stop":{"line":194,"column":101}},{"start":{"line":194,"column":15},"ann":"{VV : a | VV == rt2}","ident":"rt2","stop":{"line":194,"column":18}},{"start":{"line":194,"column":19},"ann":"{v : (Data.Heap.Skew.Skew {VV : a | rt2 <= VV}) | size v >= 0\n                                                  && v == l2}","ident":"l2","stop":{"line":194,"column":21}},{"start":{"line":194,"column":22},"ann":"(Data.Heap.Skew.Skew a)","ident":"lq_anf$##7205759403792804956","stop":{"line":194,"column":101}},{"start":{"line":194,"column":29},"ann":"{v : (Data.Heap.Skew.Skew {VV : a | rt2 <= VV}) | size v >= 0\n                                                  && v == l2}","ident":"l2","stop":{"line":194,"column":31}},{"start":{"line":194,"column":32},"ann":"(Data.Heap.Skew.Skew {VV : a | rt2 <= VV})","ident":"lq_anf$##7205759403792804955","stop":{"line":194,"column":100}},{"start":{"line":194,"column":55},"ann":"{VV : a | VV == rt1}","ident":"rt1","stop":{"line":194,"column":58}},{"start":{"line":194,"column":59},"ann":"(Data.Heap.Skew.Skew a)","ident":"lq_anf$##7205759403792804954","stop":{"line":194,"column":95}},{"start":{"line":194,"column":78},"ann":"{v : (Data.Heap.Skew.Skew a) | right v == r1\n                               && left v == l1\n                               && root v == rt1\n                               && elts v == Set_cup (Set_cup (Set_sng rt1) (elts l1)) (elts r1)\n                               && minimum v == rt1\n                               && size v == (1 + size l1) + size r1}","ident":"lq_anf$##7205759403792804953","stop":{"line":194,"column":94}},{"start":{"line":194,"column":84},"ann":"{VV : a | VV == rt1}","ident":"rt1","stop":{"line":194,"column":87}},{"start":{"line":194,"column":88},"ann":"{v : (Data.Heap.Skew.Skew {VV : a | rt1 <= VV}) | size v >= 0\n                                                  && v == l1}","ident":"l1","stop":{"line":194,"column":90}},{"start":{"line":194,"column":91},"ann":"{v : (Data.Heap.Skew.Skew {VV : a | rt1 <= VV}) | size v >= 0\n                                                  && v == r1}","ident":"r1","stop":{"line":194,"column":93}},{"start":{"line":194,"column":96},"ann":"{VV : a | VV == rt2}","ident":"rt2","stop":{"line":194,"column":99}}],"errors":[]}