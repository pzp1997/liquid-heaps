{"status":"safe","types":{"172":{"72":{"ann":"{v : (Data.Heap.Skew.Skew {VV : a | rt <= VV}) | size v >= 0\n                                                 && v == r}","ident":"r","row":172,"col":72},"22":{"ann":"{v : (GHC.Classes.Ord a) | v == $dOrd_a2SZ}","ident":"$dOrd_a2SZ","row":172,"col":22},"66":{"ann":"{v : (Data.Set.Internal.Set a) | v == elts r}","ident":"lq_anf$##7205759403792805085","row":172,"col":66},"56":{"ann":"{v : (Data.Set.Internal.Set a) | v == elts l}","ident":"lq_anf$##7205759403792805083","row":172,"col":56},"30":{"ann":"(Data.Set.Internal.Set a)","ident":"lq_anf$##7205759403792805084","row":172,"col":30},"62":{"ann":"{v : (Data.Heap.Skew.Skew {VV : a | rt <= VV}) | size v >= 0\n                                                 && v == l}","ident":"l","row":172,"col":62},"52":{"ann":"{VV : a | VV == rt}","ident":"rt","row":172,"col":52},"39":{"ann":"{v : (Data.Set.Internal.Set a) | v == Set_sng rt}","ident":"lq_anf$##7205759403792805082","row":172,"col":39}},"51":{"1":{"ann":"forall a . {r : (Data.Heap.Skew.Skew a) | size r == 0}","ident":"Data.Heap.Skew.empty","row":51,"col":1}},"136":{"25":{"ann":"{v : GHC.Types.Int | v == size l\n                     && v >= 0}","ident":"lq_anf$##7205759403792805076","row":136,"col":25},"30":{"ann":"{v : (Data.Heap.Skew.Skew a) | v == l}","ident":"l","row":136,"col":30},"34":{"ann":"{v : GHC.Types.Int | v == size r\n                     && v >= 0}","ident":"lq_anf$##7205759403792805078","row":136,"col":34},"39":{"ann":"{v : (Data.Heap.Skew.Skew a) | v == r}","ident":"r","row":136,"col":39},"21":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805075","row":136,"col":21}},"179":{"1":{"ann":"forall a . {v : GHC.Types.Bool | v} -> a -> a","ident":"Data.Heap.Skew.assert","row":179,"col":1},"10":{"ann":"a","ident":"x","row":179,"col":10}},"183":{"43":{"ann":"{v : (Data.Heap.Skew.Skew {VV : a | rt <= VV}) | size v >= 0\n                                                 && v == l}","ident":"l","row":183,"col":43},"35":{"ann":"forall a .\nx1:a -> x2:(Data.Heap.Skew.Skew {VV : a | x1 <= VV}) -> x3:(Data.Heap.Skew.Skew {VV : a | x1 <= VV}) -> {v : (Data.Heap.Skew.Skew a) | right v == x3\n                                                                                                                                       && left v == x2\n                                                                                                                                       && root v == x1\n                                                                                                                                       && elts v == Set_cup (Set_cup (Set_sng x1) (elts x2)) (elts x3)\n                                                                                                                                       && minimum v == x1\n                                                                                                                                       && size v == (1 + size x2) + size x3}","ident":"Data.Heap.Skew.Node","row":183,"col":35},"45":{"ann":"{v : (Data.Heap.Skew.Skew {VV : a | rt <= VV}) | size v >= 0\n                                                 && v == r}","ident":"r","row":183,"col":45},"1":{"ann":"forall a .\nx1:{VV : (Data.Heap.Skew.Skew a) | 0 < size VV} -> {r : (Data.Heap.Skew.Skew {VV : a | minimum x1 <= VV}) | size x1 == size r}","ident":"Data.Heap.Skew.skewBoundedByRoot","row":183,"col":1},"40":{"ann":"{VV : a | VV == rt}","ident":"rt","row":183,"col":40}},"85":{"31":{"ann":"{VV : a | VV == x}","ident":"x","row":85,"col":31},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\na -> x3:(Data.Heap.Skew.Skew a) -> {r : (Data.Heap.Skew.Skew a) | size r == 1 + size x3}","ident":"Data.Heap.Skew.insert","row":85,"col":1},"34":{"ann":"{v : (Data.Heap.Skew.Skew a) | size v >= 0\n                               && v == t}","ident":"t","row":85,"col":34},"20":{"ann":"{v : (Data.Heap.Skew.Skew a) | size v == 1}","ident":"lq_anf$##7205759403792805107","row":85,"col":20},"8":{"ann":"a","ident":"x","row":85,"col":8},"10":{"ann":"(Data.Heap.Skew.Skew a)","ident":"t","row":85,"col":10}},"101":{"28":{"ann":"{VV : a | VV == x}","ident":"x","row":101,"col":28},"30":{"ann":"{v : (Data.Heap.Skew.Skew a) | size v == len xs}","ident":"lq_anf$##7205759403792805109","row":101,"col":30},"40":{"ann":"{v : [a] | len v >= 0\n           && v == xs}","ident":"xs","row":101,"col":40},"21":{"ann":"{v : (GHC.Classes.Ord a) | v == $dOrd_a2TV}","ident":"$dOrd_a2TV","row":101,"col":21}},"71":{"22":{"ann":"forall a .\n{v : (Data.Heap.Skew.Skew a) | elts v == Set_empty 0\n                               && size v == 0}","ident":"_","row":71,"col":22},"1":{"ann":"forall a . a -> {r : (Data.Heap.Skew.Skew a) | size r == 1}","ident":"Data.Heap.Skew.singleton","row":71,"col":1},"20":{"ann":"{VV : a | VV == x}","ident":"x","row":71,"col":20},"27":{"ann":"forall a .\n{v : (Data.Heap.Skew.Skew a) | elts v == Set_empty 0\n                               && size v == 0}","ident":"_","row":71,"col":27},"11":{"ann":"a","ident":"x","row":71,"col":11}},"187":{"25":{"ann":"(Data.Heap.Skew.Skew a)","ident":"s","row":187,"col":25},"1":{"ann":"forall a .\nx1:a -> x2:(Data.Heap.Skew.Skew {VV : a | x1 <= VV}) -> x3:{VV : a | VV <= x1} -> {r : (Data.Heap.Skew.Skew {VV : a | x3 <= VV}) | size x2 == size r}","ident":"Data.Heap.Skew.boundedSkewTransitive","row":187,"col":1}},"191":{"7":{"ann":"(Data.Heap.Skew.Skew a)","ident":"t1","row":191,"col":7},"17":{"ann":"{v : (Data.Heap.Skew.Skew a) | size v >= 0\n                               && v == t1}","ident":"t1","row":191,"col":17},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Skew.Skew a) -> x3:(Data.Heap.Skew.Skew a) -> {r : (Data.Heap.Skew.Skew a) | size r == size x2 + size x3}","ident":"Data.Heap.Skew.merge","row":191,"col":1}},"100":{"15":{"ann":"forall a .\n{v : (Data.Heap.Skew.Skew a) | elts v == Set_empty 0\n                               && size v == 0}","ident":"_","row":100,"col":15},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:[a] -> {r : (Data.Heap.Skew.Skew a) | size r == len x2}","ident":"Data.Heap.Skew.fromList","row":100,"col":1}},"1":{"1":{"ann":"GHC.Types.Module","ident":"Data.Heap.Skew.$trModule","row":1,"col":1}},"141":{"1":{"ann":"forall a .\nx1:{VV : (Data.Heap.Skew.Skew a) | 0 < size VV} -> {VV : a | VV == minimum x1}","ident":"Data.Heap.Skew.minimum","row":141,"col":1},"24":{"ann":"{VV : a | VV == x}","ident":"x","row":141,"col":24}},"194":{"15":{"ann":"{VV : a | VV == rt2}","ident":"rt2","row":194,"col":15},"8":{"ann":"{VV : a | VV == rt1}","ident":"rt1","row":194,"col":8}},"135":{"13":{"ann":"{v : GHC.Prim.Int# | v == 0}","ident":"lq_anf$##7205759403792805073","row":135,"col":13},"1":{"ann":"forall a .\nx1:(Data.Heap.Skew.Skew a) -> {VV : GHC.Types.Int | VV == size x1\n                                                    && VV >= 0}","ident":"Data.Heap.Skew.size","row":135,"col":1}},"171":{"13":{"ann":"forall a . {v : (Data.Set.Internal.Set a) | Set_emp v}","ident":"_","row":171,"col":13},"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Skew.Skew a) -> {VV : (Data.Set.Internal.Set a) | VV == elts x2}","ident":"Data.Heap.Skew.elts","row":171,"col":1}},"192":{"17":{"ann":"{v : (Data.Heap.Skew.Skew a) | size v >= 0}","ident":"ds_d2Xj","row":192,"col":17}},"195":{"28":{"ann":"{v : (Data.Heap.Skew.Skew {VV : a | rt1 <= VV}) | size v >= 0\n                                                  && v == l1}","ident":"l1","row":195,"col":28},"31":{"ann":"(Data.Heap.Skew.Skew {VV : a | rt1 <= VV})","ident":"lq_anf$##7205759403792805100","row":195,"col":31},"14":{"ann":"{VV : a | VV == rt1}","ident":"rt1","row":195,"col":14},"83":{"ann":"{VV : a | VV == rt2}","ident":"rt2","row":195,"col":83},"90":{"ann":"{v : (Data.Heap.Skew.Skew {VV : a | rt2 <= VV}) | size v >= 0\n                                                  && v == r2}","ident":"r2","row":195,"col":90},"18":{"ann":"{v : (Data.Heap.Skew.Skew {VV : a | rt1 <= VV}) | size v >= 0\n                                                  && v == r1}","ident":"r1","row":195,"col":18},"95":{"ann":"{VV : a | VV == rt1}","ident":"rt1","row":195,"col":95},"87":{"ann":"{v : (Data.Heap.Skew.Skew {VV : a | rt2 <= VV}) | size v >= 0\n                                                  && v == l2}","ident":"l2","row":195,"col":87},"58":{"ann":"(Data.Heap.Skew.Skew a)","ident":"lq_anf$##7205759403792805099","row":195,"col":58},"77":{"ann":"{v : (Data.Heap.Skew.Skew a) | right v == r2\n                               && left v == l2\n                               && root v == rt2\n                               && elts v == Set_cup (Set_cup (Set_sng rt2) (elts l2)) (elts r2)\n                               && minimum v == rt2\n                               && size v == (1 + size l2) + size r2}","ident":"lq_anf$##7205759403792805098","row":195,"col":77},"21":{"ann":"(Data.Heap.Skew.Skew a)","ident":"lq_anf$##7205759403792805101","row":195,"col":21},"9":{"ann":"forall a .\nx1:a -> x2:(Data.Heap.Skew.Skew {VV : a | x1 <= VV}) -> x3:(Data.Heap.Skew.Skew {VV : a | x1 <= VV}) -> {v : (Data.Heap.Skew.Skew a) | right v == x3\n                                                                                                                                       && left v == x2\n                                                                                                                                       && root v == x1\n                                                                                                                                       && elts v == Set_cup (Set_cup (Set_sng x1) (elts x2)) (elts x3)\n                                                                                                                                       && minimum v == x1\n                                                                                                                                       && size v == (1 + size x2) + size x3}","ident":"Data.Heap.Skew.Node","row":195,"col":9},"54":{"ann":"{VV : a | VV == rt2}","ident":"rt2","row":195,"col":54}},"196":{"84":{"ann":"{VV : a | VV == rt1}","ident":"rt1","row":196,"col":84},"15":{"ann":"{VV : a | VV == rt2}","ident":"rt2","row":196,"col":15},"96":{"ann":"{VV : a | VV == rt2}","ident":"rt2","row":196,"col":96},"78":{"ann":"{v : (Data.Heap.Skew.Skew a) | right v == r1\n                               && left v == l1\n                               && root v == rt1\n                               && elts v == Set_cup (Set_cup (Set_sng rt1) (elts l1)) (elts r1)\n                               && minimum v == rt1\n                               && size v == (1 + size l1) + size r1}","ident":"lq_anf$##7205759403792805094","row":196,"col":78},"22":{"ann":"(Data.Heap.Skew.Skew a)","ident":"lq_anf$##7205759403792805097","row":196,"col":22},"19":{"ann":"{v : (Data.Heap.Skew.Skew {VV : a | rt2 <= VV}) | size v >= 0\n                                                  && v == r2}","ident":"r2","row":196,"col":19},"91":{"ann":"{v : (Data.Heap.Skew.Skew {VV : a | rt1 <= VV}) | size v >= 0\n                                                  && v == r1}","ident":"r1","row":196,"col":91},"88":{"ann":"{v : (Data.Heap.Skew.Skew {VV : a | rt1 <= VV}) | size v >= 0\n                                                  && v == l1}","ident":"l1","row":196,"col":88},"29":{"ann":"{v : (Data.Heap.Skew.Skew {VV : a | rt2 <= VV}) | size v >= 0\n                                                  && v == l2}","ident":"l2","row":196,"col":29},"59":{"ann":"(Data.Heap.Skew.Skew a)","ident":"lq_anf$##7205759403792805095","row":196,"col":59},"55":{"ann":"{VV : a | VV == rt1}","ident":"rt1","row":196,"col":55},"10":{"ann":"forall a .\nx1:a -> x2:(Data.Heap.Skew.Skew {VV : a | x1 <= VV}) -> x3:(Data.Heap.Skew.Skew {VV : a | x1 <= VV}) -> {v : (Data.Heap.Skew.Skew a) | right v == x3\n                                                                                                                                       && left v == x2\n                                                                                                                                       && root v == x1\n                                                                                                                                       && elts v == Set_cup (Set_cup (Set_sng x1) (elts x2)) (elts x3)\n                                                                                                                                       && minimum v == x1\n                                                                                                                                       && size v == (1 + size x2) + size x3}","ident":"Data.Heap.Skew.Node","row":196,"col":10},"32":{"ann":"(Data.Heap.Skew.Skew {VV : a | rt2 <= VV})","ident":"lq_anf$##7205759403792805096","row":196,"col":32}},"155":{"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:{s : (Data.Heap.Skew.Skew a) | 0 < size s} -> {r : (Data.Heap.Skew.Skew a) | size r + 1 == size x2}","ident":"Data.Heap.Skew.deleteMin","row":155,"col":1},"26":{"ann":"{v : (GHC.Classes.Ord a) | v == $dOrd_a2Tg}","ident":"$dOrd_a2Tg","row":155,"col":26},"34":{"ann":"{v : (Data.Heap.Skew.Skew a) | size v >= 0\n                               && v == r}","ident":"r","row":155,"col":34},"32":{"ann":"{v : (Data.Heap.Skew.Skew a) | size v >= 0\n                               && v == l}","ident":"l","row":155,"col":32}}},"sptypes":[{"start":{"line":1,"column":1},"ann":"GHC.Types.Module","ident":"Data.Heap.Skew.$trModule","stop":{"line":1,"column":1}},{"start":{"line":51,"column":1},"ann":"forall a . {r : (Data.Heap.Skew.Skew a) | size r == 0}","ident":"Data.Heap.Skew.empty","stop":{"line":51,"column":6}},{"start":{"line":71,"column":1},"ann":"forall a . a -> {r : (Data.Heap.Skew.Skew a) | size r == 1}","ident":"Data.Heap.Skew.singleton","stop":{"line":71,"column":10}},{"start":{"line":71,"column":11},"ann":"a","ident":"x","stop":{"line":71,"column":12}},{"start":{"line":71,"column":20},"ann":"{VV : a | VV == x}","ident":"x","stop":{"line":71,"column":21}},{"start":{"line":71,"column":22},"ann":"forall a .\n{v : (Data.Heap.Skew.Skew a) | elts v == Set_empty 0\n                               && size v == 0}","ident":"_","stop":{"line":71,"column":26}},{"start":{"line":71,"column":27},"ann":"forall a .\n{v : (Data.Heap.Skew.Skew a) | elts v == Set_empty 0\n                               && size v == 0}","ident":"_","stop":{"line":71,"column":31}},{"start":{"line":85,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\na -> x3:(Data.Heap.Skew.Skew a) -> {r : (Data.Heap.Skew.Skew a) | size r == 1 + size x3}","ident":"Data.Heap.Skew.insert","stop":{"line":85,"column":7}},{"start":{"line":85,"column":8},"ann":"a","ident":"x","stop":{"line":85,"column":9}},{"start":{"line":85,"column":10},"ann":"(Data.Heap.Skew.Skew a)","ident":"t","stop":{"line":85,"column":11}},{"start":{"line":85,"column":20},"ann":"{v : (Data.Heap.Skew.Skew a) | size v == 1}","ident":"lq_anf$##7205759403792805107","stop":{"line":85,"column":33}},{"start":{"line":85,"column":31},"ann":"{VV : a | VV == x}","ident":"x","stop":{"line":85,"column":32}},{"start":{"line":85,"column":34},"ann":"{v : (Data.Heap.Skew.Skew a) | size v >= 0\n                               && v == t}","ident":"t","stop":{"line":85,"column":35}},{"start":{"line":100,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:[a] -> {r : (Data.Heap.Skew.Skew a) | size r == len x2}","ident":"Data.Heap.Skew.fromList","stop":{"line":100,"column":9}},{"start":{"line":100,"column":15},"ann":"forall a .\n{v : (Data.Heap.Skew.Skew a) | elts v == Set_empty 0\n                               && size v == 0}","ident":"_","stop":{"line":100,"column":19}},{"start":{"line":101,"column":21},"ann":"{v : (GHC.Classes.Ord a) | v == $dOrd_a2TV}","ident":"$dOrd_a2TV","stop":{"line":101,"column":43}},{"start":{"line":101,"column":28},"ann":"{VV : a | VV == x}","ident":"x","stop":{"line":101,"column":29}},{"start":{"line":101,"column":30},"ann":"{v : (Data.Heap.Skew.Skew a) | size v == len xs}","ident":"lq_anf$##7205759403792805109","stop":{"line":101,"column":43}},{"start":{"line":101,"column":40},"ann":"{v : [a] | len v >= 0\n           && v == xs}","ident":"xs","stop":{"line":101,"column":42}},{"start":{"line":135,"column":1},"ann":"forall a .\nx1:(Data.Heap.Skew.Skew a) -> {VV : GHC.Types.Int | VV == size x1\n                                                    && VV >= 0}","ident":"Data.Heap.Skew.size","stop":{"line":135,"column":5}},{"start":{"line":135,"column":13},"ann":"{v : GHC.Prim.Int# | v == 0}","ident":"lq_anf$##7205759403792805073","stop":{"line":135,"column":14}},{"start":{"line":136,"column":21},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792805075","stop":{"line":136,"column":22}},{"start":{"line":136,"column":25},"ann":"{v : GHC.Types.Int | v == size l\n                     && v >= 0}","ident":"lq_anf$##7205759403792805076","stop":{"line":136,"column":31}},{"start":{"line":136,"column":30},"ann":"{v : (Data.Heap.Skew.Skew a) | v == l}","ident":"l","stop":{"line":136,"column":31}},{"start":{"line":136,"column":34},"ann":"{v : GHC.Types.Int | v == size r\n                     && v >= 0}","ident":"lq_anf$##7205759403792805078","stop":{"line":136,"column":40}},{"start":{"line":136,"column":39},"ann":"{v : (Data.Heap.Skew.Skew a) | v == r}","ident":"r","stop":{"line":136,"column":40}},{"start":{"line":141,"column":1},"ann":"forall a .\nx1:{VV : (Data.Heap.Skew.Skew a) | 0 < size VV} -> {VV : a | VV == minimum x1}","ident":"Data.Heap.Skew.minimum","stop":{"line":141,"column":8}},{"start":{"line":141,"column":24},"ann":"{VV : a | VV == x}","ident":"x","stop":{"line":141,"column":25}},{"start":{"line":155,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:{s : (Data.Heap.Skew.Skew a) | 0 < size s} -> {r : (Data.Heap.Skew.Skew a) | size r + 1 == size x2}","ident":"Data.Heap.Skew.deleteMin","stop":{"line":155,"column":10}},{"start":{"line":155,"column":26},"ann":"{v : (GHC.Classes.Ord a) | v == $dOrd_a2Tg}","ident":"$dOrd_a2Tg","stop":{"line":155,"column":35}},{"start":{"line":155,"column":32},"ann":"{v : (Data.Heap.Skew.Skew a) | size v >= 0\n                               && v == l}","ident":"l","stop":{"line":155,"column":33}},{"start":{"line":155,"column":34},"ann":"{v : (Data.Heap.Skew.Skew a) | size v >= 0\n                               && v == r}","ident":"r","stop":{"line":155,"column":35}},{"start":{"line":171,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Skew.Skew a) -> {VV : (Data.Set.Internal.Set a) | VV == elts x2}","ident":"Data.Heap.Skew.elts","stop":{"line":171,"column":5}},{"start":{"line":171,"column":13},"ann":"forall a . {v : (Data.Set.Internal.Set a) | Set_emp v}","ident":"_","stop":{"line":171,"column":20}},{"start":{"line":172,"column":22},"ann":"{v : (GHC.Classes.Ord a) | v == $dOrd_a2SZ}","ident":"$dOrd_a2SZ","stop":{"line":172,"column":74}},{"start":{"line":172,"column":30},"ann":"(Data.Set.Internal.Set a)","ident":"lq_anf$##7205759403792805084","stop":{"line":172,"column":65}},{"start":{"line":172,"column":39},"ann":"{v : (Data.Set.Internal.Set a) | v == Set_sng rt}","ident":"lq_anf$##7205759403792805082","stop":{"line":172,"column":55}},{"start":{"line":172,"column":52},"ann":"{VV : a | VV == rt}","ident":"rt","stop":{"line":172,"column":54}},{"start":{"line":172,"column":56},"ann":"{v : (Data.Set.Internal.Set a) | v == elts l}","ident":"lq_anf$##7205759403792805083","stop":{"line":172,"column":64}},{"start":{"line":172,"column":62},"ann":"{v : (Data.Heap.Skew.Skew {VV : a | rt <= VV}) | size v >= 0\n                                                 && v == l}","ident":"l","stop":{"line":172,"column":63}},{"start":{"line":172,"column":66},"ann":"{v : (Data.Set.Internal.Set a) | v == elts r}","ident":"lq_anf$##7205759403792805085","stop":{"line":172,"column":74}},{"start":{"line":172,"column":72},"ann":"{v : (Data.Heap.Skew.Skew {VV : a | rt <= VV}) | size v >= 0\n                                                 && v == r}","ident":"r","stop":{"line":172,"column":73}},{"start":{"line":179,"column":1},"ann":"forall a . {v : GHC.Types.Bool | v} -> a -> a","ident":"Data.Heap.Skew.assert","stop":{"line":179,"column":7}},{"start":{"line":179,"column":10},"ann":"a","ident":"x","stop":{"line":179,"column":11}},{"start":{"line":183,"column":1},"ann":"forall a .\nx1:{VV : (Data.Heap.Skew.Skew a) | 0 < size VV} -> {r : (Data.Heap.Skew.Skew {VV : a | minimum x1 <= VV}) | size x1 == size r}","ident":"Data.Heap.Skew.skewBoundedByRoot","stop":{"line":183,"column":18}},{"start":{"line":183,"column":35},"ann":"forall a .\nx1:a -> x2:(Data.Heap.Skew.Skew {VV : a | x1 <= VV}) -> x3:(Data.Heap.Skew.Skew {VV : a | x1 <= VV}) -> {v : (Data.Heap.Skew.Skew a) | right v == x3\n                                                                                                                                       && left v == x2\n                                                                                                                                       && root v == x1\n                                                                                                                                       && elts v == Set_cup (Set_cup (Set_sng x1) (elts x2)) (elts x3)\n                                                                                                                                       && minimum v == x1\n                                                                                                                                       && size v == (1 + size x2) + size x3}","ident":"Data.Heap.Skew.Node","stop":{"line":183,"column":46}},{"start":{"line":183,"column":40},"ann":"{VV : a | VV == rt}","ident":"rt","stop":{"line":183,"column":42}},{"start":{"line":183,"column":43},"ann":"{v : (Data.Heap.Skew.Skew {VV : a | rt <= VV}) | size v >= 0\n                                                 && v == l}","ident":"l","stop":{"line":183,"column":44}},{"start":{"line":183,"column":45},"ann":"{v : (Data.Heap.Skew.Skew {VV : a | rt <= VV}) | size v >= 0\n                                                 && v == r}","ident":"r","stop":{"line":183,"column":46}},{"start":{"line":187,"column":1},"ann":"forall a .\nx1:a -> x2:(Data.Heap.Skew.Skew {VV : a | x1 <= VV}) -> x3:{VV : a | VV <= x1} -> {r : (Data.Heap.Skew.Skew {VV : a | x3 <= VV}) | size x2 == size r}","ident":"Data.Heap.Skew.boundedSkewTransitive","stop":{"line":187,"column":22}},{"start":{"line":187,"column":25},"ann":"(Data.Heap.Skew.Skew a)","ident":"s","stop":{"line":187,"column":26}},{"start":{"line":191,"column":1},"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Skew.Skew a) -> x3:(Data.Heap.Skew.Skew a) -> {r : (Data.Heap.Skew.Skew a) | size r == size x2 + size x3}","ident":"Data.Heap.Skew.merge","stop":{"line":191,"column":6}},{"start":{"line":191,"column":7},"ann":"(Data.Heap.Skew.Skew a)","ident":"t1","stop":{"line":191,"column":9}},{"start":{"line":191,"column":17},"ann":"{v : (Data.Heap.Skew.Skew a) | size v >= 0\n                               && v == t1}","ident":"t1","stop":{"line":191,"column":19}},{"start":{"line":192,"column":17},"ann":"{v : (Data.Heap.Skew.Skew a) | size v >= 0}","ident":"ds_d2Xj","stop":{"line":192,"column":19}},{"start":{"line":194,"column":8},"ann":"{VV : a | VV == rt1}","ident":"rt1","stop":{"line":194,"column":11}},{"start":{"line":194,"column":15},"ann":"{VV : a | VV == rt2}","ident":"rt2","stop":{"line":194,"column":18}},{"start":{"line":195,"column":9},"ann":"forall a .\nx1:a -> x2:(Data.Heap.Skew.Skew {VV : a | x1 <= VV}) -> x3:(Data.Heap.Skew.Skew {VV : a | x1 <= VV}) -> {v : (Data.Heap.Skew.Skew a) | right v == x3\n                                                                                                                                       && left v == x2\n                                                                                                                                       && root v == x1\n                                                                                                                                       && elts v == Set_cup (Set_cup (Set_sng x1) (elts x2)) (elts x3)\n                                                                                                                                       && minimum v == x1\n                                                                                                                                       && size v == (1 + size x2) + size x3}","ident":"Data.Heap.Skew.Node","stop":{"line":195,"column":100}},{"start":{"line":195,"column":14},"ann":"{VV : a | VV == rt1}","ident":"rt1","stop":{"line":195,"column":17}},{"start":{"line":195,"column":18},"ann":"{v : (Data.Heap.Skew.Skew {VV : a | rt1 <= VV}) | size v >= 0\n                                                  && v == r1}","ident":"r1","stop":{"line":195,"column":20}},{"start":{"line":195,"column":21},"ann":"(Data.Heap.Skew.Skew a)","ident":"lq_anf$##7205759403792805101","stop":{"line":195,"column":100}},{"start":{"line":195,"column":28},"ann":"{v : (Data.Heap.Skew.Skew {VV : a | rt1 <= VV}) | size v >= 0\n                                                  && v == l1}","ident":"l1","stop":{"line":195,"column":30}},{"start":{"line":195,"column":31},"ann":"(Data.Heap.Skew.Skew {VV : a | rt1 <= VV})","ident":"lq_anf$##7205759403792805100","stop":{"line":195,"column":99}},{"start":{"line":195,"column":54},"ann":"{VV : a | VV == rt2}","ident":"rt2","stop":{"line":195,"column":57}},{"start":{"line":195,"column":58},"ann":"(Data.Heap.Skew.Skew a)","ident":"lq_anf$##7205759403792805099","stop":{"line":195,"column":94}},{"start":{"line":195,"column":77},"ann":"{v : (Data.Heap.Skew.Skew a) | right v == r2\n                               && left v == l2\n                               && root v == rt2\n                               && elts v == Set_cup (Set_cup (Set_sng rt2) (elts l2)) (elts r2)\n                               && minimum v == rt2\n                               && size v == (1 + size l2) + size r2}","ident":"lq_anf$##7205759403792805098","stop":{"line":195,"column":93}},{"start":{"line":195,"column":83},"ann":"{VV : a | VV == rt2}","ident":"rt2","stop":{"line":195,"column":86}},{"start":{"line":195,"column":87},"ann":"{v : (Data.Heap.Skew.Skew {VV : a | rt2 <= VV}) | size v >= 0\n                                                  && v == l2}","ident":"l2","stop":{"line":195,"column":89}},{"start":{"line":195,"column":90},"ann":"{v : (Data.Heap.Skew.Skew {VV : a | rt2 <= VV}) | size v >= 0\n                                                  && v == r2}","ident":"r2","stop":{"line":195,"column":92}},{"start":{"line":195,"column":95},"ann":"{VV : a | VV == rt1}","ident":"rt1","stop":{"line":195,"column":98}},{"start":{"line":196,"column":10},"ann":"forall a .\nx1:a -> x2:(Data.Heap.Skew.Skew {VV : a | x1 <= VV}) -> x3:(Data.Heap.Skew.Skew {VV : a | x1 <= VV}) -> {v : (Data.Heap.Skew.Skew a) | right v == x3\n                                                                                                                                       && left v == x2\n                                                                                                                                       && root v == x1\n                                                                                                                                       && elts v == Set_cup (Set_cup (Set_sng x1) (elts x2)) (elts x3)\n                                                                                                                                       && minimum v == x1\n                                                                                                                                       && size v == (1 + size x2) + size x3}","ident":"Data.Heap.Skew.Node","stop":{"line":196,"column":101}},{"start":{"line":196,"column":15},"ann":"{VV : a | VV == rt2}","ident":"rt2","stop":{"line":196,"column":18}},{"start":{"line":196,"column":19},"ann":"{v : (Data.Heap.Skew.Skew {VV : a | rt2 <= VV}) | size v >= 0\n                                                  && v == r2}","ident":"r2","stop":{"line":196,"column":21}},{"start":{"line":196,"column":22},"ann":"(Data.Heap.Skew.Skew a)","ident":"lq_anf$##7205759403792805097","stop":{"line":196,"column":101}},{"start":{"line":196,"column":29},"ann":"{v : (Data.Heap.Skew.Skew {VV : a | rt2 <= VV}) | size v >= 0\n                                                  && v == l2}","ident":"l2","stop":{"line":196,"column":31}},{"start":{"line":196,"column":32},"ann":"(Data.Heap.Skew.Skew {VV : a | rt2 <= VV})","ident":"lq_anf$##7205759403792805096","stop":{"line":196,"column":100}},{"start":{"line":196,"column":55},"ann":"{VV : a | VV == rt1}","ident":"rt1","stop":{"line":196,"column":58}},{"start":{"line":196,"column":59},"ann":"(Data.Heap.Skew.Skew a)","ident":"lq_anf$##7205759403792805095","stop":{"line":196,"column":95}},{"start":{"line":196,"column":78},"ann":"{v : (Data.Heap.Skew.Skew a) | right v == r1\n                               && left v == l1\n                               && root v == rt1\n                               && elts v == Set_cup (Set_cup (Set_sng rt1) (elts l1)) (elts r1)\n                               && minimum v == rt1\n                               && size v == (1 + size l1) + size r1}","ident":"lq_anf$##7205759403792805094","stop":{"line":196,"column":94}},{"start":{"line":196,"column":84},"ann":"{VV : a | VV == rt1}","ident":"rt1","stop":{"line":196,"column":87}},{"start":{"line":196,"column":88},"ann":"{v : (Data.Heap.Skew.Skew {VV : a | rt1 <= VV}) | size v >= 0\n                                                  && v == l1}","ident":"l1","stop":{"line":196,"column":90}},{"start":{"line":196,"column":91},"ann":"{v : (Data.Heap.Skew.Skew {VV : a | rt1 <= VV}) | size v >= 0\n                                                  && v == r1}","ident":"r1","stop":{"line":196,"column":93}},{"start":{"line":196,"column":96},"ann":"{VV : a | VV == rt2}","ident":"rt2","stop":{"line":196,"column":99}}],"errors":[]}