{"o_vars":null,"o_types":[[{"spanInfo":{"startLine":151,"endLine":151,"endCol":32,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["x","{VV : a | VV == x}"]]],[{"spanInfo":{"startLine":159,"endLine":159,"endCol":51,"startCol":40,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792804993","GHC.Types.Int"]]],[{"spanInfo":{"startLine":332,"endLine":332,"endCol":34,"startCol":22,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[[null,"(a, (Data.Heap.Binominal.Heap {VV : a | fst x4 <= VV}))"]]],[{"spanInfo":{"startLine":162,"endLine":162,"endCol":73,"startCol":25,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[[null,"{v : (Data.Heap.Binominal.Tree a) | size v == size t1BoundedByX1}"]]],[{"spanInfo":{"startLine":159,"endLine":159,"endCol":50,"startCol":47,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ds_d2TF","{v : GHC.Types.Int | 1 <= v}"]]],[{"spanInfo":{"startLine":262,"endLine":262,"endCol":36,"startCol":34,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805060","{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == ts}"]]],[{"spanInfo":{"startLine":330,"endLine":330,"endCol":9,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.heapSort","forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Heap a) -> {VV : [a]<\\x1 VV -> {VV : a | x1 <= VV}> | len VV == heapSize x2}"]]],[{"spanInfo":{"startLine":167,"endLine":167,"endCol":16,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805040","{v : [(Data.Heap.Binominal.Tree a)] | Set_emp (listElts v)\n                                      && len v == 0\n                                      && mapSize v == []\n                                      && sumPositives v == 0\n                                      && sumSizeList v == 0}"]]],[{"spanInfo":{"startLine":187,"endLine":187,"endCol":51,"startCol":36,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805007","{v : (Data.Heap.Binominal.Tree a) | root v == x}"]]],[{"spanInfo":{"startLine":278,"endLine":278,"endCol":24,"startCol":22,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[[null,"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | Set_emp (listElts v)\n                                            && len v == 0\n                                            && mapSize v == []\n                                            && sumPositives v == 0\n                                            && sumSizeList v == 0}"]]],[{"spanInfo":{"startLine":205,"endLine":205,"endCol":27,"startCol":26,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["x","{VV : a | VV == x}"]]],[{"spanInfo":{"startLine":274,"endLine":274,"endCol":10,"startCol":4,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["minElt","{VV : a | VV == minElt}"]]],[{"spanInfo":{"startLine":281,"endLine":281,"endCol":8,"startCol":7,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["x","{VV : a | VV == root t}"]]],[{"spanInfo":{"startLine":191,"endLine":191,"endCol":8,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.insert'","forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Tree a) -> x3:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == size x2 + sumSizeList x3}"]]],[{"spanInfo":{"startLine":159,"endLine":159,"endCol":39,"startCol":20,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792804992","{v : [(Data.Heap.Binominal.Tree a)] | head v == t2BoundedByX1}"]]],[{"spanInfo":{"startLine":163,"endLine":163,"endCol":44,"startCol":41,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ds_d2TB","{v : GHC.Types.Int | 1 <= v}"]]],[{"spanInfo":{"startLine":274,"endLine":274,"endCol":51,"startCol":12,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805080","(Data.Heap.Binominal.Heap a)"]]],[{"spanInfo":{"startLine":314,"endLine":314,"endCol":64,"startCol":25,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.insert'","forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Tree a) -> x3:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == size x2 + sumSizeList x3}"]]],[{"spanInfo":{"startLine":187,"endLine":187,"endCol":48,"startCol":46,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[[null,"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | Set_emp (listElts v)\n                                            && len v == 0\n                                            && mapSize v == []\n                                            && sumPositives v == 0\n                                            && sumSizeList v == 0}"]]],[{"spanInfo":{"startLine":291,"endLine":291,"endCol":56,"startCol":14,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[[null,"{v : (Data.Heap.Binominal.Tree {VV : a | x' <= VV}) | size v == size tBounded}"]]],[{"spanInfo":{"startLine":161,"endLine":161,"endCol":55,"startCol":53,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792804980","{v : (Data.Heap.Binominal.Tree a) | v == t1}"]]],[{"spanInfo":{"startLine":289,"endLine":289,"endCol":11,"startCol":9,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["hd","{v : (Data.Heap.Binominal.Tree {VV : a | x <= VV}) | size v == size tBounded'\n                                                     && v == hd}"]]],[{"spanInfo":{"startLine":157,"endLine":159,"endCol":51,"startCol":5,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.Node","forall a .\nx1:{v : GHC.Types.Int | v >= 0} -> x2:a -> x3:[(Data.Heap.Binominal.Tree {VV : a | x2 <= VV})] -> x4:{v : GHC.Types.Int | 1 <= v\n                                                                                                                          && v == 1 + sumSizeList x3} -> {v : (Data.Heap.Binominal.Tree a) | size v == x4\n                                                                                                                                                                                             && subtrees v == x3\n                                                                                                                                                                                             && root v == x2\n                                                                                                                                                                                             && rank v == x1}"]]],[{"spanInfo":{"startLine":267,"endLine":267,"endCol":60,"startCol":42,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805068","{v : [(Data.Heap.Binominal.Tree a)] | 0 < len v\n                                      && sumSizeList v == heapSize h}"]]],[{"spanInfo":{"startLine":107,"endLine":107,"endCol":40,"startCol":38,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ts","[(Data.Heap.Binominal.Tree {VV : a | y <= VV})]"]]],[{"spanInfo":{"startLine":288,"endLine":288,"endCol":48,"startCol":47,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["x","{VV : a | VV == root t\n          && VV == x}"]]],[{"spanInfo":{"startLine":107,"endLine":107,"endCol":45,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ts","{v : [(Data.Heap.Binominal.Tree {VV : a | y <= VV})] | sumSizeList v >= 0\n                                                       && len v >= 0\n                                                       && v == ts}"]]],[{"spanInfo":{"startLine":332,"endLine":332,"endCol":34,"startCol":33,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ds_d2VY","{v : (Data.Heap.Binominal.Heap a) | heapSize v >= 0}"]]],[{"spanInfo":{"startLine":155,"endLine":155,"endCol":8,"startCol":6,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["t1","(Data.Heap.Binominal.Tree a)"]]],[{"spanInfo":{"startLine":247,"endLine":247,"endCol":15,"startCol":11,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[[null,"forall a .\nx1:(Data.Heap.Binominal.Tree a) -> {VV : a | VV == root x1}"]]],[{"spanInfo":{"startLine":257,"endLine":257,"endCol":19,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.reverseHeapListAux","forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> x2:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList x1 + sumSizeList x2}"]]],[{"spanInfo":{"startLine":103,"endLine":103,"endCol":33,"startCol":32,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["y","{VV : a | x <= VV}"]]],[{"spanInfo":{"startLine":156,"endLine":156,"endCol":13,"startCol":5,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792804982","GHC.Types.Bool"]]],[{"spanInfo":{"startLine":175,"endLine":175,"endCol":27,"startCol":26,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805044","GHC.Types.Int"]]],[{"spanInfo":{"startLine":151,"endLine":151,"endCol":28,"startCol":27,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["x","a"]]],[{"spanInfo":{"startLine":175,"endLine":175,"endCol":10,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.singleton","forall a .\na -> {v : (Data.Heap.Binominal.Heap a) | heapSize v == 1}"]]],[{"spanInfo":{"startLine":175,"endLine":175,"endCol":29,"startCol":28,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["x","{VV : a | VV == x}"]]],[{"spanInfo":{"startLine":267,"endLine":267,"endCol":60,"startCol":31,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805069","((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | root (fst x9) <= VV})])"]]],[{"spanInfo":{"startLine":312,"endLine":312,"endCol":41,"startCol":37,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ts1'","{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == ts1'}"]]],[{"spanInfo":{"startLine":68,"endLine":68,"endCol":9,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.heapSize","forall a .\nx1:(Data.Heap.Binominal.Heap a) -> {VV : GHC.Types.Int | VV == heapSize x1\n                                                         && VV >= 0}"]]],[{"spanInfo":{"startLine":287,"endLine":287,"endCol":57,"startCol":48,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["tBounded'","{v : (Data.Heap.Binominal.Tree {VV : a | root t' <= VV}) | size v == size t'\n                                                           && v == tBounded'}"]]],[{"spanInfo":{"startLine":143,"endLine":143,"endCol":11,"startCol":10,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["x","a"]]],[{"spanInfo":{"startLine":332,"endLine":332,"endCol":18,"startCol":16,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["h'","(Data.Heap.Binominal.Heap {VV : a | minElt <= VV\n                                    && VV >= minElt})"]]],[{"spanInfo":{"startLine":103,"endLine":103,"endCol":31,"startCol":30,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["x","a"]]],[{"spanInfo":{"startLine":268,"endLine":268,"endCol":42,"startCol":8,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805073","[(Data.Heap.Binominal.Tree a)]"]]],[{"spanInfo":{"startLine":309,"endLine":309,"endCol":11,"startCol":8,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ts1","[(Data.Heap.Binominal.Tree a)]"]]],[{"spanInfo":{"startLine":292,"endLine":292,"endCol":8,"startCol":6,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["t'","{v : (Data.Heap.Binominal.Tree a) | v == t'}"]]],[{"spanInfo":{"startLine":313,"endLine":313,"endCol":12,"startCol":5,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805017","{v : GHC.Types.Int | v >= 0\n                     && v == rank t2}"]]],[{"spanInfo":{"startLine":262,"endLine":262,"endCol":15,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.unheapNonempty","forall a .\nx1:{VV : (Data.Heap.Binominal.Heap a) | 0 < len (unheap VV)} -> {v : [(Data.Heap.Binominal.Tree a)] | 0 < len v\n                                                                                                      && sumSizeList v == heapSize x1}"]]],[{"spanInfo":{"startLine":200,"endLine":200,"endCol":24,"startCol":18,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805055","{v : GHC.Types.Int | v == len xs\n                     && v >= 0}"]]],[{"spanInfo":{"startLine":312,"endLine":312,"endCol":45,"startCol":25,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["GHC.Types.:","forall a <p :: a a -> Bool> .\nx1:a -> x2:[{VV : a<p x1> | true}]<\\x7 VV -> {VV : a<p x7> | true}> -> {v : [a]<\\x7 VV -> {VV : a<p x7> | true}> | tail v == x2\n                                                                                                                   && head v == x1\n                                                                                                                   && listElts v == Set_cup (Set_sng x1) (listElts x2)\n                                                                                                                   && len v == 1 + len x2\n                                                                                                                   && mapSize v == : (size x1) (mapSize x2)\n                                                                                                                   && sumPositives v == x1 + sumPositives x2\n                                                                                                                   && sumSizeList v == sumPositives (mapSize (: x1 x2))}"]]],[{"spanInfo":{"startLine":274,"endLine":274,"endCol":51,"startCol":17,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805079","[(Data.Heap.Binominal.Tree a)]"]]],[{"spanInfo":{"startLine":162,"endLine":162,"endCol":59,"startCol":57,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ds_d2Tz","a"]]],[{"spanInfo":{"startLine":266,"endLine":268,"endCol":42,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805071","(Data.Heap.Binominal.Tree a)"]]],[{"spanInfo":{"startLine":266,"endLine":266,"endCol":10,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.deleteMin","forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:{VV : (Data.Heap.Binominal.Heap a) | 0 < len (unheap VV)} -> {v : (Data.Heap.Binominal.Heap a) | 1 + heapSize v == heapSize x2}"]]],[{"spanInfo":{"startLine":285,"endLine":285,"endCol":12,"startCol":6,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805033","{v : GHC.Types.Bool | v <=> x < x'}"]]],[{"spanInfo":{"startLine":194,"endLine":194,"endCol":39,"startCol":38,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["t","{v : (Data.Heap.Binominal.Tree a) | v == t}"]]],[{"spanInfo":{"startLine":287,"endLine":287,"endCol":47,"startCol":45,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["x'","{VV : a | VV == root t'\n          && VV == x'}"]]],[{"spanInfo":{"startLine":98,"endLine":98,"endCol":23,"startCol":22,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ds_d2T9","a"]]],[{"spanInfo":{"startLine":193,"endLine":193,"endCol":21,"startCol":5,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792804998","GHC.Types.Bool"]]],[{"spanInfo":{"startLine":247,"endLine":247,"endCol":51,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805062","x1:(Data.Heap.Binominal.Tree a) -> {VV : a | VV == root x1}"]]],[{"spanInfo":{"startLine":278,"endLine":278,"endCol":20,"startCol":19,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["t","{v : (Data.Heap.Binominal.Tree a) | v == t}"]]],[{"spanInfo":{"startLine":98,"endLine":98,"endCol":15,"startCol":14,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ds_d2T8","{v : GHC.Types.Int | v >= 0}"]]],[{"spanInfo":{"startLine":193,"endLine":193,"endCol":30,"startCol":24,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["GHC.Types.:","forall a <p :: a a -> Bool> .\nx1:a -> x2:[{VV : a<p x1> | true}]<\\x7 VV -> {VV : a<p x7> | true}> -> {v : [a]<\\x7 VV -> {VV : a<p x7> | true}> | tail v == x2\n                                                                                                                   && head v == x1\n                                                                                                                   && listElts v == Set_cup (Set_sng x1) (listElts x2)\n                                                                                                                   && len v == 1 + len x2\n                                                                                                                   && mapSize v == : (size x1) (mapSize x2)\n                                                                                                                   && sumPositives v == x1 + sumPositives x2\n                                                                                                                   && sumSizeList v == sumPositives (mapSize (: x1 x2))}"]]],[{"spanInfo":{"startLine":313,"endLine":313,"endCol":12,"startCol":10,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["t2","{v : (Data.Heap.Binominal.Tree a) | v == t2}"]]],[{"spanInfo":{"startLine":253,"endLine":253,"endCol":46,"startCol":44,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[[null,"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | Set_emp (listElts v)\n                                            && len v == 0\n                                            && mapSize v == []\n                                            && sumPositives v == 0\n                                            && sumSizeList v == 0}"]]],[{"spanInfo":{"startLine":1,"endLine":1,"endCol":1,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.$trModule","GHC.Types.Module"]]],[{"spanInfo":{"startLine":51,"endLine":51,"endCol":42,"startCol":23,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["GHC.Num.$fNumInt","{v : (GHC.Num.Num GHC.Types.Int) | v == $fNumInt}"]]],[{"spanInfo":{"startLine":314,"endLine":314,"endCol":45,"startCol":33,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805021","{v : (Data.Heap.Binominal.Tree a) | size v == size t1 + size t2}"]]],[{"spanInfo":{"startLine":314,"endLine":314,"endCol":64,"startCol":46,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805022","{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList ts1' + sumSizeList ts2'}"]]],[{"spanInfo":{"startLine":272,"endLine":272,"endCol":11,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.deleteMin2","forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:{VV : (Data.Heap.Binominal.Heap a) | 0 < len (unheap VV)} -> {v : (a, (Data.Heap.Binominal.Heap {VV : a | fst v <= VV})) | 1 + heapSize (snd v) == heapSize x2}"]]],[{"spanInfo":{"startLine":314,"endLine":314,"endCol":44,"startCol":42,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["t2","{v : (Data.Heap.Binominal.Tree a) | v == t2}"]]],[{"spanInfo":{"startLine":305,"endLine":305,"endCol":6,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.merge","forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Heap a) -> x3:(Data.Heap.Binominal.Heap a) -> {VV : (Data.Heap.Binominal.Heap a) | heapSize VV == heapSize x2 + heapSize x3}"]]],[{"spanInfo":{"startLine":289,"endLine":289,"endCol":14,"startCol":9,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805036","{v : [(Data.Heap.Binominal.Tree a)] | tail v == tl\n                                      && head v == hd\n                                      && listElts v == Set_cup (Set_sng hd) (listElts tl)\n                                      && len v == 1 + len tl\n                                      && mapSize v == : (size hd) (mapSize tl)\n                                      && sumPositives v == hd + sumPositives tl\n                                      && sumSizeList v == sumPositives (mapSize (: hd tl))}"]]],[{"spanInfo":{"startLine":163,"endLine":163,"endCol":50,"startCol":47,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ds_d2TF","{v : GHC.Types.Int | 1 <= v}"]]],[{"spanInfo":{"startLine":193,"endLine":193,"endCol":25,"startCol":24,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["t","{v : (Data.Heap.Binominal.Tree a) | v == t}"]]],[{"spanInfo":{"startLine":158,"endLine":158,"endCol":73,"startCol":25,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[[null,"{v : (Data.Heap.Binominal.Tree a) | size v == size t2BoundedByX2}"]]],[{"spanInfo":{"startLine":205,"endLine":205,"endCol":41,"startCol":28,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805042","{v : (Data.Heap.Binominal.Heap a) | heapSize v == len xs}"]]],[{"spanInfo":{"startLine":45,"endLine":45,"endCol":24,"startCol":23,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["x","{v : (Data.Heap.Binominal.Tree a) | v == x}"]]],[{"spanInfo":{"startLine":330,"endLine":330,"endCol":24,"startCol":22,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[[null,"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | Set_emp (listElts v)\n                                            && len v == 0\n                                            && mapSize v == []\n                                            && sumPositives v == 0\n                                            && sumSizeList v == 0}"]]],[{"spanInfo":{"startLine":199,"endLine":199,"endCol":4,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.len","forall a .\nx1:[a] -> {VV : GHC.Types.Int | VV == len x1\n                                && VV >= 0}"]]],[{"spanInfo":{"startLine":314,"endLine":314,"endCol":63,"startCol":59,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ts2'","{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == ts2'}"]]],[{"spanInfo":{"startLine":312,"endLine":312,"endCol":27,"startCol":25,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["t1","{v : (Data.Heap.Binominal.Tree a) | v == t1}"]]],[{"spanInfo":{"startLine":289,"endLine":289,"endCol":7,"startCol":6,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["t","{v : (Data.Heap.Binominal.Tree a) | v == t}"]]],[{"spanInfo":{"startLine":175,"endLine":175,"endCol":35,"startCol":20,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805050","[(Data.Heap.Binominal.Tree a)]"]]],[{"spanInfo":{"startLine":157,"endLine":157,"endCol":55,"startCol":53,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792804981","{v : (Data.Heap.Binominal.Tree a) | v == t2}"]]],[{"spanInfo":{"startLine":194,"endLine":194,"endCol":43,"startCol":32,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805000","{v : (Data.Heap.Binominal.Tree a) | size v == size t + size t'}"]]],[{"spanInfo":{"startLine":187,"endLine":187,"endCol":54,"startCol":52,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ts","{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == ts}"]]],[{"spanInfo":{"startLine":163,"endLine":163,"endCol":16,"startCol":10,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792804986","GHC.Types.Int"]]],[{"spanInfo":{"startLine":45,"endLine":45,"endCol":37,"startCol":35,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["xs","{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == xs}"]]],[{"spanInfo":{"startLine":253,"endLine":253,"endCol":43,"startCol":41,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["xs","{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == xs}"]]],[{"spanInfo":{"startLine":333,"endLine":333,"endCol":23,"startCol":21,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["h'","{v : (Data.Heap.Binominal.Heap {VV : a | minElt <= VV\n                                         && VV >= minElt}) | heapSize v >= 0\n                                                             && v == h'}"]]],[{"spanInfo":{"startLine":175,"endLine":175,"endCol":32,"startCol":30,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[[null,"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | Set_emp (listElts v)\n                                            && len v == 0\n                                            && mapSize v == []\n                                            && sumPositives v == 0\n                                            && sumSizeList v == 0}"]]],[{"spanInfo":{"startLine":253,"endLine":253,"endCol":19,"startCol":17,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["xs","[(Data.Heap.Binominal.Tree a)]"]]],[{"spanInfo":{"startLine":98,"endLine":98,"endCol":46,"startCol":3,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.Node","forall a .\nx1:{v : GHC.Types.Int | v >= 0} -> x2:a -> x3:[(Data.Heap.Binominal.Tree {VV : a | x2 <= VV})] -> x4:{v : GHC.Types.Int | 1 <= v\n                                                                                                                          && v == 1 + sumSizeList x3} -> {v : (Data.Heap.Binominal.Tree a) | size v == x4\n                                                                                                                                                                                             && subtrees v == x3\n                                                                                                                                                                                             && root v == x2\n                                                                                                                                                                                             && rank v == x1}"]]],[{"spanInfo":{"startLine":51,"endLine":51,"endCol":42,"startCol":40,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["xs","{v : [{v : GHC.Types.Int | 1 <= v}] | len v >= 0\n                                      && v == xs}"]]],[{"spanInfo":{"startLine":268,"endLine":268,"endCol":37,"startCol":16,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805072","{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList ts1}"]]],[{"spanInfo":{"startLine":284,"endLine":284,"endCol":16,"startCol":7,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["tBounded'","{v : (Data.Heap.Binominal.Tree {VV : a | root t' <= VV}) | size v == size t'}"]]],[{"spanInfo":{"startLine":161,"endLine":163,"endCol":51,"startCol":5,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.Node","forall a .\nx1:{v : GHC.Types.Int | v >= 0} -> x2:a -> x3:[(Data.Heap.Binominal.Tree {VV : a | x2 <= VV})] -> x4:{v : GHC.Types.Int | 1 <= v\n                                                                                                                          && v == 1 + sumSizeList x3} -> {v : (Data.Heap.Binominal.Tree a) | size v == x4\n                                                                                                                                                                                             && subtrees v == x3\n                                                                                                                                                                                             && root v == x2\n                                                                                                                                                                                             && rank v == x1}"]]],[{"spanInfo":{"startLine":171,"endLine":171,"endCol":25,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["GHC.Classes.$fEqInt","{v : (GHC.Classes.Eq GHC.Types.Int) | v == $fEqInt}"]]],[{"spanInfo":{"startLine":272,"endLine":272,"endCol":13,"startCol":12,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["h","{VV : (Data.Heap.Binominal.Heap a) | 0 < len (unheap VV)}"]]],[{"spanInfo":{"startLine":337,"endLine":337,"endCol":36,"startCol":28,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805085","x1:[a] -> {v : (Data.Heap.Binominal.Heap a) | heapSize v == len x1}"]]],[{"spanInfo":{"startLine":107,"endLine":107,"endCol":37,"startCol":36,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["y","{VV : a | x <= VV}"]]],[{"spanInfo":{"startLine":313,"endLine":313,"endCol":22,"startCol":15,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805018","{v : GHC.Types.Int | v >= 0\n                     && v == rank t1}"]]],[{"spanInfo":{"startLine":45,"endLine":45,"endCol":37,"startCol":18,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["GHC.Types.:","forall a <p :: a a -> Bool> .\nx1:a -> x2:[{VV : a<p x1> | true}]<\\x7 VV -> {VV : a<p x7> | true}> -> {v : [a]<\\x7 VV -> {VV : a<p x7> | true}> | tail v == x2\n                                                                                                                   && head v == x1\n                                                                                                                   && listElts v == Set_cup (Set_sng x1) (listElts x2)\n                                                                                                                   && len v == 1 + len x2\n                                                                                                                   && mapSize v == : (size x1) (mapSize x2)\n                                                                                                                   && sumPositives v == x1 + sumPositives x2\n                                                                                                                   && sumSizeList v == sumPositives (mapSize (: x1 x2))}"]]],[{"spanInfo":{"startLine":313,"endLine":313,"endCol":40,"startCol":37,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ts1","{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == ts1}"]]],[{"spanInfo":{"startLine":253,"endLine":253,"endCol":16,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.reverseHeapList","forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList x1}"]]],[{"spanInfo":{"startLine":51,"endLine":51,"endCol":24,"startCol":23,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["x","{v : GHC.Types.Int | 1 <= v\n                     && v == x}"]]],[{"spanInfo":{"startLine":171,"endLine":171,"endCol":20,"startCol":19,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["h","{v : (Data.Heap.Binominal.Heap a) | heapSize v >= 0\n                                    && v == h}"]]],[{"spanInfo":{"startLine":151,"endLine":151,"endCol":22,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.assertBoundedTreeList","forall a b .\nx1:a -> [(Data.Heap.Binominal.Tree {VV : a | x1 <= VV})] -> b -> b"]]],[{"spanInfo":{"startLine":280,"endLine":280,"endCol":32,"startCol":30,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ds_d2V9","{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0}"]]],[{"spanInfo":{"startLine":278,"endLine":278,"endCol":11,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.deleteMin'","forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:{v : [(Data.Heap.Binominal.Tree a)] | 0 < len v} -> {v : ((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | root (fst v) <= VV})]) | size (fst v) + sumSizeList (snd v) == sumSizeList x2}"]]],[{"spanInfo":{"startLine":175,"endLine":175,"endCol":34,"startCol":21,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805048","{v : (Data.Heap.Binominal.Tree a) | root v == x}"]]],[{"spanInfo":{"startLine":187,"endLine":187,"endCol":43,"startCol":42,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805003","GHC.Types.Int"]]],[{"spanInfo":{"startLine":305,"endLine":305,"endCol":52,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805028","{v : (Data.Heap.Binominal.Heap a) | heapSize v >= 0}"]]],[{"spanInfo":{"startLine":314,"endLine":314,"endCol":41,"startCol":39,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["t1","{v : (Data.Heap.Binominal.Tree a) | v == t1}"]]],[{"spanInfo":{"startLine":167,"endLine":167,"endCol":6,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.empty","forall a . {v : (Data.Heap.Binominal.Heap a) | heapSize v == 0}"]]],[{"spanInfo":{"startLine":159,"endLine":159,"endCol":34,"startCol":21,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["t2BoundedByX1","{v : (Data.Heap.Binominal.Tree a) | size v == size t2BoundedByX2\n                                    && v == t2BoundedByX1}"]]],[{"spanInfo":{"startLine":107,"endLine":107,"endCol":35,"startCol":34,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["x","a"]]],[{"spanInfo":{"startLine":305,"endLine":305,"endCol":51,"startCol":48,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ts2","{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == ts2}"]]],[{"spanInfo":{"startLine":200,"endLine":200,"endCol":24,"startCol":22,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["xs","{v : [a] | sumSizeList v >= 0\n           && sumPositives v >= 0\n           && len v >= 0\n           && v == xs}"]]],[{"spanInfo":{"startLine":337,"endLine":337,"endCol":36,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["GHC.Base..","forall a\n       b\n       c <r :: c b -> Bool, q :: c c -> Bool, p :: c b -> Bool> .\n{xcmp :: c, wcmp :: {VV : c<q xcmp> | true} |- {VV : b<p wcmp> | true} <: {VV : b<r xcmp> | true}} =>\n(ycmp:c -> {VV : b<p ycmp> | true}) -> (zcmp:c -> {VV : c<q zcmp> | true}) -> xcmp:c -> {VV : b<r xcmp> | true}"]]],[{"spanInfo":{"startLine":158,"endLine":158,"endCol":59,"startCol":57,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ds_d2TD","a"]]],[{"spanInfo":{"startLine":44,"endLine":45,"endCol":37,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792804964","{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0}"]]],[{"spanInfo":{"startLine":267,"endLine":267,"endCol":59,"startCol":58,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["h","{v : (Data.Heap.Binominal.Heap a) | 0 < len (unheap v)\n                                    && heapSize v >= 0\n                                    && v == h}"]]],[{"spanInfo":{"startLine":280,"endLine":280,"endCol":10,"startCol":8,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["t'","(Data.Heap.Binominal.Tree a)"]]],[{"spanInfo":{"startLine":292,"endLine":292,"endCol":16,"startCol":10,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805035","{v : [(Data.Heap.Binominal.Tree a)] | tail v == ts'\n                                      && head v == hd\n                                      && listElts v == Set_cup (Set_sng hd) (listElts ts')\n                                      && len v == 1 + len ts'\n                                      && mapSize v == : (size hd) (mapSize ts')\n                                      && sumPositives v == hd + sumPositives ts'\n                                      && sumSizeList v == sumPositives (mapSize (: hd ts'))}"]]],[{"spanInfo":{"startLine":314,"endLine":314,"endCol":58,"startCol":54,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ts1'","{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == ts1'}"]]],[{"spanInfo":{"startLine":282,"endLine":282,"endCol":9,"startCol":7,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["x'","{VV : a | VV == root t'}"]]],[{"spanInfo":{"startLine":147,"endLine":147,"endCol":18,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.assertBoundedTree","forall a b .\nx1:a -> (Data.Heap.Binominal.Tree {VV : a | x1 <= VV}) -> b -> b"]]],[{"spanInfo":{"startLine":147,"endLine":147,"endCol":24,"startCol":23,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["x","a"]]],[{"spanInfo":{"startLine":163,"endLine":163,"endCol":15,"startCol":14,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792804985","GHC.Types.Int"]]],[{"spanInfo":{"startLine":291,"endLine":291,"endCol":47,"startCol":46,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["x","{VV : a | VV == root t\n          && VV == x}"]]],[{"spanInfo":{"startLine":187,"endLine":187,"endCol":45,"startCol":44,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["x","{VV : a | VV == x}"]]],[{"spanInfo":{"startLine":332,"endLine":332,"endCol":14,"startCol":8,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["minElt","a"]]],[{"spanInfo":{"startLine":274,"endLine":274,"endCol":46,"startCol":25,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805078","{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList ts1}"]]],[{"spanInfo":{"startLine":205,"endLine":205,"endCol":40,"startCol":38,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["xs","{v : [a] | sumSizeList v >= 0\n           && sumPositives v >= 0\n           && len v >= 0\n           && v == xs}"]]],[{"spanInfo":{"startLine":143,"endLine":143,"endCol":15,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["x","{VV : a | VV == x}"]]],[{"spanInfo":{"startLine":288,"endLine":288,"endCol":55,"startCol":52,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ts'","{v : [(Data.Heap.Binominal.Tree {VV : a | root t' <= VV})] | len v >= 0\n                                                             && sumSizeList v >= 0\n                                                             && v == ts'}"]]],[{"spanInfo":{"startLine":155,"endLine":155,"endCol":61,"startCol":59,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["t2","(Data.Heap.Binominal.Tree a)"]]],[{"spanInfo":{"startLine":312,"endLine":312,"endCol":12,"startCol":5,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805013","{v : GHC.Types.Int | v >= 0\n                     && v == rank t1}"]]],[{"spanInfo":{"startLine":268,"endLine":268,"endCol":36,"startCol":33,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ts1","{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == ts1}"]]],[{"spanInfo":{"startLine":285,"endLine":285,"endCol":12,"startCol":10,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["x'","{VV : a | VV == root t'\n          && VV == x'}"]]],[{"spanInfo":{"startLine":266,"endLine":266,"endCol":12,"startCol":11,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["h","{VV : (Data.Heap.Binominal.Heap a) | 0 < len (unheap VV)}"]]],[{"spanInfo":{"startLine":313,"endLine":313,"endCol":22,"startCol":20,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["t1","{v : (Data.Heap.Binominal.Tree a) | v == t1}"]]],[{"spanInfo":{"startLine":191,"endLine":194,"endCol":47,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792804999","GHC.Types.Bool"]]],[{"spanInfo":{"startLine":163,"endLine":163,"endCol":19,"startCol":17,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ds_d2TD","a"]]],[{"spanInfo":{"startLine":291,"endLine":291,"endCol":11,"startCol":9,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["hd","{v : (Data.Heap.Binominal.Tree {VV : a | x' <= VV}) | size v == size tBounded}"]]],[{"spanInfo":{"startLine":158,"endLine":158,"endCol":73,"startCol":60,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["t2BoundedByX2","{v : (Data.Heap.Binominal.Tree a) | v == t2BoundedByX2}"]]],[{"spanInfo":{"startLine":253,"endLine":253,"endCol":46,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805058","{v : [(Data.Heap.Binominal.Tree a)] | Set_emp (listElts v)\n                                      && len v == 0\n                                      && mapSize v == []\n                                      && sumPositives v == 0\n                                      && sumSizeList v == 0}"]]],[{"spanInfo":{"startLine":156,"endLine":156,"endCol":7,"startCol":5,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ds_d2Tz","a"]]],[{"spanInfo":{"startLine":284,"endLine":284,"endCol":49,"startCol":19,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[[null,"{v : (Data.Heap.Binominal.Tree {VV : a | root t' <= VV}) | size v == size t'}"]]],[{"spanInfo":{"startLine":158,"endLine":158,"endCol":56,"startCol":54,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ds_d2Tz","a"]]],[{"spanInfo":{"startLine":285,"endLine":285,"endCol":7,"startCol":6,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["x","{VV : a | VV == root t\n          && VV == x}"]]],[{"spanInfo":{"startLine":247,"endLine":247,"endCol":8,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.minimum","forall a .\n(GHC.Classes.Ord<[]> a) =>\n{VV : (Data.Heap.Binominal.Heap a) | 0 < len (unheap VV)} -> a"]]],[{"spanInfo":{"startLine":273,"endLine":273,"endCol":65,"startCol":36,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805075","((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | root (fst x9) <= VV})])"]]],[{"spanInfo":{"startLine":273,"endLine":273,"endCol":64,"startCol":63,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["h","{v : (Data.Heap.Binominal.Heap a) | 0 < len (unheap v)\n                                    && heapSize v >= 0\n                                    && v == h}"]]],[{"spanInfo":{"startLine":191,"endLine":191,"endCol":19,"startCol":16,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792804995","{v : [(Data.Heap.Binominal.Tree a)] | Set_emp (listElts v)\n                                      && len v == 0\n                                      && mapSize v == []\n                                      && sumPositives v == 0\n                                      && sumSizeList v == 0}"]]],[{"spanInfo":{"startLine":159,"endLine":159,"endCol":38,"startCol":35,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ds_d2TA","{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0}"]]],[{"spanInfo":{"startLine":157,"endLine":157,"endCol":22,"startCol":9,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["t2BoundedByX2","(Data.Heap.Binominal.Tree a)"]]],[{"spanInfo":{"startLine":313,"endLine":313,"endCol":22,"startCol":5,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805019","GHC.Types.Bool"]]],[{"spanInfo":{"startLine":247,"endLine":247,"endCol":51,"startCol":24,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805066","(Data.Heap.Binominal.Heap a) -> ((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree a)])"]]],[{"spanInfo":{"startLine":51,"endLine":51,"endCol":42,"startCol":27,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792804969","{v : GHC.Types.Int | v == sumPositives xs\n                     && v >= 0\n                     && len xs <= v}"]]],[{"spanInfo":{"startLine":199,"endLine":200,"endCol":24,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805051","{v : [a] | sumSizeList v >= 0\n           && sumPositives v >= 0\n           && len v >= 0}"]]],[{"spanInfo":{"startLine":147,"endLine":147,"endCol":28,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["x","{VV : a | VV == x}"]]],[{"spanInfo":{"startLine":171,"endLine":171,"endCol":20,"startCol":10,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792804976","{v : GHC.Types.Int | v == heapSize h\n                     && v >= 0}"]]],[{"spanInfo":{"startLine":282,"endLine":282,"endCol":19,"startCol":12,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[[null,"{VV : a | VV == root t'}"]]],[{"spanInfo":{"startLine":333,"endLine":333,"endCol":9,"startCol":3,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["minElt","{VV : a | VV == minElt}"]]],[{"spanInfo":{"startLine":194,"endLine":194,"endCol":47,"startCol":24,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.insert'","forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Tree a) -> x3:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == size x2 + sumSizeList x3}"]]],[{"spanInfo":{"startLine":56,"endLine":56,"endCol":19,"startCol":18,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792804972","{v : GHC.Prim.Int# | v == 0}"]]],[{"spanInfo":{"startLine":205,"endLine":205,"endCol":41,"startCol":19,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["$dOrd_a2G1","{v : (GHC.Classes.Ord a) | v == $dOrd_a2G1}"]]],[{"spanInfo":{"startLine":258,"endLine":258,"endCol":62,"startCol":55,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805057","{v : [(Data.Heap.Binominal.Tree a)] | tail v == acc\n                                      && head v == x\n                                      && listElts v == Set_cup (Set_sng x) (listElts acc)\n                                      && len v == 1 + len acc\n                                      && mapSize v == : (size x) (mapSize acc)\n                                      && sumPositives v == x + sumPositives acc\n                                      && sumSizeList v == sumPositives (mapSize (: x acc))}"]]],[{"spanInfo":{"startLine":193,"endLine":193,"endCol":21,"startCol":19,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["t'","{v : (Data.Heap.Binominal.Tree a) | v == t'}"]]],[{"spanInfo":{"startLine":291,"endLine":292,"endCol":17,"startCol":5,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["GHC.Tuple.(,)","forall a b <p2 :: a b -> Bool> .\nx1:a -> x2:{VV : b<p2 x1> | true} -> {v : (a, b)<\\x5 VV -> {VV : b<p2 x5> | true}> | x_Tuple22 v == x2\n                                                                                     && x_Tuple21 v == x1\n                                                                                     && snd v == x2\n                                                                                     && fst v == x1}"]]],[{"spanInfo":{"startLine":288,"endLine":288,"endCol":55,"startCol":14,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[[null,"{v : [(Data.Heap.Binominal.Tree {VV : a | x <= VV})] | sumSizeList v == sumSizeList ts'}"]]],[{"spanInfo":{"startLine":204,"endLine":204,"endCol":20,"startCol":15,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[[null,"forall a . {v : (Data.Heap.Binominal.Heap a) | heapSize v == 0}"]]],[{"spanInfo":{"startLine":155,"endLine":155,"endCol":5,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.link","forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(Data.Heap.Binominal.Tree a) -> x3:(Data.Heap.Binominal.Tree a) -> {v : (Data.Heap.Binominal.Tree a) | size v == size x2 + size x3}"]]],[{"spanInfo":{"startLine":310,"endLine":310,"endCol":20,"startCol":17,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ds_d2U4","{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0}"]]],[{"spanInfo":{"startLine":309,"endLine":309,"endCol":7,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.merge'","forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:[(Data.Heap.Binominal.Tree a)] -> x3:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList x2 + sumSizeList x3}"]]],[{"spanInfo":{"startLine":313,"endLine":313,"endCol":27,"startCol":25,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["t2","{v : (Data.Heap.Binominal.Tree a) | v == t2}"]]],[{"spanInfo":{"startLine":273,"endLine":273,"endCol":65,"startCol":47,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805074","{v : [(Data.Heap.Binominal.Tree a)] | 0 < len v\n                                      && sumSizeList v == heapSize h}"]]],[{"spanInfo":{"startLine":247,"endLine":247,"endCol":34,"startCol":24,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805064","x1:{v : [(Data.Heap.Binominal.Tree a)] | 0 < len v} -> {v : ((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | root (fst x15) <= VV})]) | size (fst v) + sumSizeList (snd v) == sumSizeList x1}"]]],[{"spanInfo":{"startLine":200,"endLine":200,"endCol":15,"startCol":14,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805054","GHC.Types.Int"]]],[{"spanInfo":{"startLine":171,"endLine":171,"endCol":5,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.null","forall a .\nx1:(Data.Heap.Binominal.Heap a) -> {v : GHC.Types.Bool | v <=> heapSize x1 == 0}"]]],[{"spanInfo":{"startLine":283,"endLine":283,"endCol":15,"startCol":7,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["tBounded","{v : (Data.Heap.Binominal.Tree {VV : a | root t <= VV}) | size v == size t}"]]],[{"spanInfo":{"startLine":262,"endLine":262,"endCol":36,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805061","{v : GHC.Prim.Addr# | v == \"/Users/palmerpa/cis673-proj/BinomialHeap.hs:262:1-35|function unheapNonempty\"}"]]],[{"spanInfo":{"startLine":159,"endLine":159,"endCol":16,"startCol":10,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792804991","GHC.Types.Int"]]],[{"spanInfo":{"startLine":157,"endLine":157,"endCol":55,"startCol":25,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[[null,"(Data.Heap.Binominal.Tree a)"]]],[{"spanInfo":{"startLine":247,"endLine":247,"endCol":51,"startCol":18,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805067","(Data.Heap.Binominal.Heap a) -> (Data.Heap.Binominal.Tree a)"]]],[{"spanInfo":{"startLine":44,"endLine":44,"endCol":16,"startCol":14,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[[null,"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | Set_emp (listElts v)\n                                            && len v == 0\n                                            && mapSize v == []\n                                            && sumPositives v == 0\n                                            && sumSizeList v == 0}"]]],[{"spanInfo":{"startLine":199,"endLine":199,"endCol":11,"startCol":10,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805052","{v : GHC.Prim.Int# | v == 0}"]]],[{"spanInfo":{"startLine":191,"endLine":191,"endCol":10,"startCol":9,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["t","(Data.Heap.Binominal.Tree a)"]]],[{"spanInfo":{"startLine":159,"endLine":159,"endCol":15,"startCol":14,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792804990","GHC.Types.Int"]]],[{"spanInfo":{"startLine":68,"endLine":68,"endCol":36,"startCol":34,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ts","{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == ts}"]]],[{"spanInfo":{"startLine":257,"endLine":257,"endCol":26,"startCol":23,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["acc","[(Data.Heap.Binominal.Tree a)]"]]],[{"spanInfo":{"startLine":204,"endLine":205,"endCol":41,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805041","{v : [a] | sumSizeList v >= 0\n           && sumPositives v >= 0\n           && len v >= 0}"]]],[{"spanInfo":{"startLine":309,"endLine":309,"endCol":20,"startCol":17,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ts1","{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == ts1}"]]],[{"spanInfo":{"startLine":287,"endLine":287,"endCol":44,"startCol":43,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["x","{VV : a | VV == root t\n          && VV == x}"]]],[{"spanInfo":{"startLine":204,"endLine":204,"endCol":9,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.fromList","forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:[a] -> {v : (Data.Heap.Binominal.Heap a) | heapSize v == len x2}"]]],[{"spanInfo":{"startLine":283,"endLine":283,"endCol":47,"startCol":18,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[[null,"{v : (Data.Heap.Binominal.Tree {VV : a | root t <= VV}) | size v == size t}"]]],[{"spanInfo":{"startLine":163,"endLine":163,"endCol":34,"startCol":21,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["t1BoundedByX2","{v : (Data.Heap.Binominal.Tree a) | size v == size t1BoundedByX1\n                                    && v == t1BoundedByX2}"]]],[{"spanInfo":{"startLine":175,"endLine":175,"endCol":12,"startCol":11,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["x","a"]]],[{"spanInfo":{"startLine":333,"endLine":333,"endCol":23,"startCol":12,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805083","{VV : [a]<\\x1 VV -> {VV : a | x1 <= VV}> | len VV == heapSize h'}"]]],[{"spanInfo":{"startLine":292,"endLine":292,"endCol":12,"startCol":10,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["hd","{v : (Data.Heap.Binominal.Tree {VV : a | x' <= VV}) | size v == size tBounded\n                                                      && v == hd}"]]],[{"spanInfo":{"startLine":175,"endLine":175,"endCol":34,"startCol":33,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805047","GHC.Types.Int"]]],[{"spanInfo":{"startLine":191,"endLine":191,"endCol":18,"startCol":17,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["t","{v : (Data.Heap.Binominal.Tree a) | v == t}"]]],[{"spanInfo":{"startLine":282,"endLine":282,"endCol":19,"startCol":17,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["t'","{v : (Data.Heap.Binominal.Tree a) | v == t'}"]]],[{"spanInfo":{"startLine":45,"endLine":45,"endCol":24,"startCol":18,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792804965","{v : GHC.Types.Int | 1 <= v\n                     && v == 1 + sumSizeList (subtrees x)\n                     && v == size x}"]]],[{"spanInfo":{"startLine":175,"endLine":175,"endCol":35,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.Heap","forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {v : (Data.Heap.Binominal.Heap a) | unheap v == x1\n                                                                         && heapSize v == sumSizeList x1}"]]],[{"spanInfo":{"startLine":159,"endLine":159,"endCol":19,"startCol":17,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ds_d2Tz","a"]]],[{"spanInfo":{"startLine":272,"endLine":274,"endCol":52,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805077","(Data.Heap.Binominal.Tree a)"]]],[{"spanInfo":{"startLine":57,"endLine":57,"endCol":43,"startCol":31,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792804971","[{v : GHC.Types.Int | 1 <= v}]"]]],[{"spanInfo":{"startLine":268,"endLine":268,"endCol":41,"startCol":38,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ts2","{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == ts2}"]]],[{"spanInfo":{"startLine":158,"endLine":158,"endCol":22,"startCol":9,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["t2BoundedByX1","{v : (Data.Heap.Binominal.Tree a) | size v == size t2BoundedByX2}"]]],[{"spanInfo":{"startLine":187,"endLine":187,"endCol":7,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.insert","forall a .\n(GHC.Classes.Ord<[]> a) =>\na -> x3:(Data.Heap.Binominal.Heap a) -> {v : (Data.Heap.Binominal.Heap a) | 1 + heapSize x3 == heapSize v}"]]],[{"spanInfo":{"startLine":312,"endLine":312,"endCol":45,"startCol":30,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805024","[(Data.Heap.Binominal.Tree a)]"]]],[{"spanInfo":{"startLine":187,"endLine":187,"endCol":55,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805001","{v : (Data.Heap.Binominal.Heap a) | heapSize v >= 0}"]]],[{"spanInfo":{"startLine":159,"endLine":159,"endCol":13,"startCol":11,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ds_d2Ty","{v : GHC.Types.Int | v >= 0}"]]],[{"spanInfo":{"startLine":44,"endLine":44,"endCol":8,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.mapSize","forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {VV : [{VV : GHC.Types.Int | 1 <= VV}] | VV == mapSize x1\n                                                                              && len VV == len x1}"]]],[{"spanInfo":{"startLine":287,"endLine":289,"endCol":15,"startCol":5,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["GHC.Tuple.(,)","forall a b <p2 :: a b -> Bool> .\nx1:a -> x2:{VV : b<p2 x1> | true} -> {v : (a, b)<\\x5 VV -> {VV : b<p2 x5> | true}> | x_Tuple22 v == x2\n                                                                                     && x_Tuple21 v == x1\n                                                                                     && snd v == x2\n                                                                                     && fst v == x1}"]]],[{"spanInfo":{"startLine":56,"endLine":56,"endCol":12,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.sumSizeList","forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {VV : GHC.Types.Int | VV == sumSizeList x1\n                                                           && VV >= 0\n                                                           && len x1 <= VV}"]]],[{"spanInfo":{"startLine":50,"endLine":51,"endCol":42,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792804967","{v : [{v : GHC.Types.Int | 1 <= v}] | len v >= 0}"]]],[{"spanInfo":{"startLine":162,"endLine":162,"endCol":73,"startCol":60,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["t1BoundedByX1","{v : (Data.Heap.Binominal.Tree a) | v == t1BoundedByX1}"]]],[{"spanInfo":{"startLine":287,"endLine":287,"endCol":11,"startCol":9,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["hd","{v : (Data.Heap.Binominal.Tree {VV : a | x <= VV}) | size v == size tBounded'}"]]],[{"spanInfo":{"startLine":337,"endLine":337,"endCol":25,"startCol":17,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805084","x1:(Data.Heap.Binominal.Heap a) -> {v : [a]<\\x5 VV -> {VV : a | x5 <= VV}> | len v == heapSize x1}"]]],[{"spanInfo":{"startLine":163,"endLine":163,"endCol":39,"startCol":20,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792804987","{v : [(Data.Heap.Binominal.Tree a)] | head v == t1BoundedByX2}"]]],[{"spanInfo":{"startLine":288,"endLine":288,"endCol":11,"startCol":9,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["tl","{v : [(Data.Heap.Binominal.Tree {VV : a | x <= VV})] | sumSizeList v == sumSizeList ts'}"]]],[{"spanInfo":{"startLine":280,"endLine":292,"endCol":17,"startCol":3,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805034","{v : GHC.Types.Bool | v <=> x < x'}"]]],[{"spanInfo":{"startLine":98,"endLine":98,"endCol":36,"startCol":34,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ds_d2Ta","{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0}"]]],[{"spanInfo":{"startLine":97,"endLine":98,"endCol":46,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792804979","(Data.Heap.Binominal.Tree a)"]]],[{"spanInfo":{"startLine":247,"endLine":247,"endCol":21,"startCol":18,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[[null,"forall a b . x1:(a, b) -> {VV : a | VV == fst x1}"]]],[{"spanInfo":{"startLine":278,"endLine":292,"endCol":17,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805032","{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0}"]]],[{"spanInfo":{"startLine":163,"endLine":163,"endCol":51,"startCol":40,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792804988","GHC.Types.Int"]]],[{"spanInfo":{"startLine":288,"endLine":288,"endCol":51,"startCol":49,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["x'","{VV : a | VV == root t'\n          && VV == x'}"]]],[{"spanInfo":{"startLine":194,"endLine":194,"endCol":42,"startCol":40,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["t'","{v : (Data.Heap.Binominal.Tree a) | v == t'}"]]],[{"spanInfo":{"startLine":57,"endLine":57,"endCol":43,"startCol":18,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.sumPositives","x1:[{VV : GHC.Types.Int | 1 <= VV}] -> {VV : GHC.Types.Int | VV == sumPositives x1\n                                                             && VV >= 0\n                                                             && len x1 <= VV}"]]],[{"spanInfo":{"startLine":156,"endLine":156,"endCol":13,"startCol":11,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ds_d2TD","a"]]],[{"spanInfo":{"startLine":159,"endLine":159,"endCol":44,"startCol":41,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ds_d2TB","{v : GHC.Types.Int | 1 <= v}"]]],[{"spanInfo":{"startLine":305,"endLine":305,"endCol":52,"startCol":31,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.Heap","forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {v : (Data.Heap.Binominal.Heap a) | unheap v == x1\n                                                                         && heapSize v == sumSizeList x1}"]]],[{"spanInfo":{"startLine":284,"endLine":284,"endCol":49,"startCol":47,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["t'","{v : (Data.Heap.Binominal.Tree a) | v == t'}"]]],[{"spanInfo":{"startLine":193,"endLine":193,"endCol":11,"startCol":10,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["t","{v : (Data.Heap.Binominal.Tree a) | v == t}"]]],[{"spanInfo":{"startLine":163,"endLine":163,"endCol":38,"startCol":35,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ds_d2TE","{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0}"]]],[{"spanInfo":{"startLine":337,"endLine":337,"endCol":14,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.sortUsingHeap","forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:[a] -> {VV : [a]<\\x1 VV -> {VV : a | x1 <= VV}> | len VV == len x2}"]]],[{"spanInfo":{"startLine":162,"endLine":162,"endCol":56,"startCol":54,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ds_d2TD","a"]]],[{"spanInfo":{"startLine":258,"endLine":258,"endCol":54,"startCol":52,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["xs","{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == xs}"]]],[{"spanInfo":{"startLine":161,"endLine":161,"endCol":22,"startCol":9,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["t1BoundedByX1","(Data.Heap.Binominal.Tree a)"]]],[{"spanInfo":{"startLine":257,"endLine":258,"endCol":62,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805056","{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0}"]]],[{"spanInfo":{"startLine":56,"endLine":57,"endCol":43,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792804970","{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0}"]]],[{"spanInfo":{"startLine":50,"endLine":50,"endCol":13,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.sumPositives","x1:[{VV : GHC.Types.Int | 1 <= VV}] -> {VV : GHC.Types.Int | VV == sumPositives x1\n                                                             && VV >= 0\n                                                             && len x1 <= VV}"]]],[{"spanInfo":{"startLine":287,"endLine":287,"endCol":57,"startCol":14,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[[null,"{v : (Data.Heap.Binominal.Tree {VV : a | x <= VV}) | size v == size tBounded'}"]]],[{"spanInfo":{"startLine":281,"endLine":281,"endCol":17,"startCol":16,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["t","{v : (Data.Heap.Binominal.Tree a) | v == t}"]]],[{"spanInfo":{"startLine":305,"endLine":305,"endCol":52,"startCol":36,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805029","{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList ts1 + sumSizeList ts2}"]]],[{"spanInfo":{"startLine":103,"endLine":103,"endCol":45,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["tree","{v : (Data.Heap.Binominal.Tree {VV : a | y <= VV}) | v == tree}"]]],[{"spanInfo":{"startLine":167,"endLine":167,"endCol":16,"startCol":14,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[[null,"forall a <p :: a a -> Bool> .\n{v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | Set_emp (listElts v)\n                                            && len v == 0\n                                            && mapSize v == []\n                                            && sumPositives v == 0\n                                            && sumSizeList v == 0}"]]],[{"spanInfo":{"startLine":103,"endLine":103,"endCol":29,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.boundedTreeTransitivityLemma","forall a .\nx1:a -> x2:{VV : a | x1 <= VV} -> x3:(Data.Heap.Binominal.Tree {VV : a | x2 <= VV}) -> {VV : (Data.Heap.Binominal.Tree {VV : a | x1 <= VV}) | size VV == size x3}"]]],[{"spanInfo":{"startLine":274,"endLine":274,"endCol":45,"startCol":42,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ts1","{v : [(Data.Heap.Binominal.Tree {VV : a | minElt <= VV})] | sumSizeList v >= 0\n                                                            && len v >= 0\n                                                            && v == ts1}"]]],[{"spanInfo":{"startLine":45,"endLine":45,"endCol":37,"startCol":27,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792804966","{v : [{v : GHC.Types.Int | 1 <= v}] | v == mapSize xs\n                                      && len v == len xs}"]]],[{"spanInfo":{"startLine":193,"endLine":193,"endCol":11,"startCol":5,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792804996","{v : GHC.Types.Int | v >= 0\n                     && v == rank t}"]]],[{"spanInfo":{"startLine":312,"endLine":312,"endCol":22,"startCol":5,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805015","GHC.Types.Bool"]]],[{"spanInfo":{"startLine":281,"endLine":281,"endCol":17,"startCol":11,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[[null,"{VV : a | VV == root t}"]]],[{"spanInfo":{"startLine":161,"endLine":161,"endCol":55,"startCol":25,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[[null,"(Data.Heap.Binominal.Tree a)"]]],[{"spanInfo":{"startLine":107,"endLine":107,"endCol":33,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.boundedTreeListTransitivityLemma","forall a .\nx1:a -> x2:{VV : a | x1 <= VV} -> x3:[(Data.Heap.Binominal.Tree {VV : a | x2 <= VV})] -> {v : [(Data.Heap.Binominal.Tree {VV : a | x1 <= VV})] | sumSizeList v == sumSizeList x3}"]]],[{"spanInfo":{"startLine":258,"endLine":258,"endCol":61,"startCol":58,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["acc","{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == acc}"]]],[{"spanInfo":{"startLine":278,"endLine":278,"endCol":25,"startCol":18,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805037","{v : [(Data.Heap.Binominal.Tree a)] | Set_emp (listElts v)\n                                      && len v == 0\n                                      && mapSize v == []\n                                      && sumPositives v == 0\n                                      && sumSizeList v == 0}"]]],[{"spanInfo":{"startLine":194,"endLine":194,"endCol":47,"startCol":44,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ts'","{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == ts'}"]]],[{"spanInfo":{"startLine":274,"endLine":274,"endCol":50,"startCol":47,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ts2","{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == ts2}"]]],[{"spanInfo":{"startLine":187,"endLine":187,"endCol":55,"startCol":27,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805008","[(Data.Heap.Binominal.Tree a)]"]]],[{"spanInfo":{"startLine":280,"endLine":280,"endCol":32,"startCol":19,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.deleteMin'","forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:{v : [(Data.Heap.Binominal.Tree a)] | 0 < len v} -> {v : ((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | root (fst v) <= VV})]) | size (fst v) + sumSizeList (snd v) == sumSizeList x2}"]]],[{"spanInfo":{"startLine":332,"endLine":333,"endCol":23,"startCol":3,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["GHC.Types.:","forall a <p :: a a -> Bool> .\nx1:a -> x2:[{VV : a<p x1> | true}]<\\x7 VV -> {VV : a<p x7> | true}> -> {v : [a]<\\x7 VV -> {VV : a<p x7> | true}> | tail v == x2\n                                                                                                                   && head v == x1\n                                                                                                                   && listElts v == Set_cup (Set_sng x1) (listElts x2)\n                                                                                                                   && len v == 1 + len x2\n                                                                                                                   && mapSize v == : (size x1) (mapSize x2)\n                                                                                                                   && sumPositives v == x1 + sumPositives x2\n                                                                                                                   && sumSizeList v == sumPositives (mapSize (: x1 x2))}"]]],[{"spanInfo":{"startLine":98,"endLine":98,"endCol":45,"startCol":43,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ds_d2Tb","{v : GHC.Types.Int | 1 <= v}"]]],[{"spanInfo":{"startLine":97,"endLine":97,"endCol":28,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.treeIsBoundedByItsRootLemma","forall a .\nx1:(Data.Heap.Binominal.Tree a) -> {VV : (Data.Heap.Binominal.Tree {VV : a | root x1 <= VV}) | size VV == size x1}"]]],[{"spanInfo":{"startLine":171,"endLine":171,"endCol":25,"startCol":24,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792804978","GHC.Types.Int"]]],[{"spanInfo":{"startLine":171,"endLine":171,"endCol":7,"startCol":6,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["h","(Data.Heap.Binominal.Heap a)"]]],[{"spanInfo":{"startLine":283,"endLine":283,"endCol":47,"startCol":46,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["t","{v : (Data.Heap.Binominal.Tree a) | v == t}"]]],[{"spanInfo":{"startLine":193,"endLine":193,"endCol":21,"startCol":14,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792804997","{v : GHC.Types.Int | v >= 0\n                     && v == rank t'}"]]],[{"spanInfo":{"startLine":330,"endLine":333,"endCol":23,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805082","{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0}"]]],[{"spanInfo":{"startLine":187,"endLine":187,"endCol":9,"startCol":8,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["x","a"]]],[{"spanInfo":{"startLine":187,"endLine":187,"endCol":55,"startCol":22,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.Heap","forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {v : (Data.Heap.Binominal.Heap a) | unheap v == x1\n                                                                         && heapSize v == sumSizeList x1}"]]],[{"spanInfo":{"startLine":312,"endLine":312,"endCol":22,"startCol":20,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["t2","{v : (Data.Heap.Binominal.Tree a) | v == t2}"]]],[{"spanInfo":{"startLine":312,"endLine":312,"endCol":12,"startCol":10,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["t1","{v : (Data.Heap.Binominal.Tree a) | v == t1}"]]],[{"spanInfo":{"startLine":68,"endLine":68,"endCol":36,"startCol":22,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.sumSizeList","forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> {v : GHC.Types.Int | v == sumSizeList x1\n                                                          && v >= 0\n                                                          && len x1 <= v}"]]],[{"spanInfo":{"startLine":200,"endLine":200,"endCol":24,"startCol":14,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["GHC.Num.$fNumInt","{v : (GHC.Num.Num GHC.Types.Int) | v == $fNumInt}"]]],[{"spanInfo":{"startLine":257,"endLine":257,"endCol":32,"startCol":29,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["acc","{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == acc}"]]],[{"spanInfo":{"startLine":313,"endLine":313,"endCol":45,"startCol":30,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805023","{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList ts1 + sumSizeList ts2'}"]]],[{"spanInfo":{"startLine":309,"endLine":314,"endCol":64,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805020","GHC.Types.Bool"]]],[{"spanInfo":{"startLine":187,"endLine":187,"endCol":50,"startCol":49,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805006","GHC.Types.Int"]]],[{"spanInfo":{"startLine":305,"endLine":305,"endCol":47,"startCol":44,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ts1","{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == ts1}"]]],[{"spanInfo":{"startLine":312,"endLine":312,"endCol":22,"startCol":15,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805014","{v : GHC.Types.Int | v >= 0\n                     && v == rank t2}"]]],[{"spanInfo":{"startLine":68,"endLine":68,"endCol":36,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792804975","(Data.Heap.Binominal.Heap a)"]]],[{"spanInfo":{"startLine":258,"endLine":258,"endCol":57,"startCol":56,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["x","{v : (Data.Heap.Binominal.Tree a) | v == x}"]]],[{"spanInfo":{"startLine":258,"endLine":258,"endCol":62,"startCol":33,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.reverseHeapListAux","forall a .\nx1:[(Data.Heap.Binominal.Tree a)] -> x2:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v == sumSizeList x1 + sumSizeList x2}"]]],[{"spanInfo":{"startLine":162,"endLine":162,"endCol":22,"startCol":9,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["t1BoundedByX2","{v : (Data.Heap.Binominal.Tree a) | size v == size t1BoundedByX1}"]]],[{"spanInfo":{"startLine":155,"endLine":163,"endCol":51,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792804983","GHC.Types.Bool"]]],[{"spanInfo":{"startLine":143,"endLine":143,"endCol":7,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.assert","forall a . {v : GHC.Types.Bool | v} -> a -> a"]]],[{"spanInfo":{"startLine":57,"endLine":57,"endCol":42,"startCol":40,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ds_d2WE","{v : [(Data.Heap.Binominal.Tree a)] | len v >= 0}"]]],[{"spanInfo":{"startLine":193,"endLine":193,"endCol":30,"startCol":28,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ds_d2TI","{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0}"]]],[{"spanInfo":{"startLine":312,"endLine":312,"endCol":45,"startCol":42,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ds_d2U4","{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0}"]]],[{"spanInfo":{"startLine":291,"endLine":291,"endCol":56,"startCol":48,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["tBounded","{v : (Data.Heap.Binominal.Tree {VV : a | root t <= VV}) | size v == size t\n                                                          && v == tBounded}"]]],[{"spanInfo":{"startLine":103,"endLine":103,"endCol":38,"startCol":34,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["tree","(Data.Heap.Binominal.Tree {VV : a | y <= VV})"]]],[{"spanInfo":{"startLine":280,"endLine":280,"endCol":15,"startCol":12,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ts'","{VV : [(Data.Heap.Binominal.Tree {VV : a | root t' <= VV})] | len VV >= 0}"]]],[{"spanInfo":{"startLine":313,"endLine":313,"endCol":45,"startCol":25,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["GHC.Types.:","forall a <p :: a a -> Bool> .\nx1:a -> x2:[{VV : a<p x1> | true}]<\\x7 VV -> {VV : a<p x7> | true}> -> {v : [a]<\\x7 VV -> {VV : a<p x7> | true}> | tail v == x2\n                                                                                                                   && head v == x1\n                                                                                                                   && listElts v == Set_cup (Set_sng x1) (listElts x2)\n                                                                                                                   && len v == 1 + len x2\n                                                                                                                   && mapSize v == : (size x1) (mapSize x2)\n                                                                                                                   && sumPositives v == x1 + sumPositives x2\n                                                                                                                   && sumSizeList v == sumPositives (mapSize (: x1 x2))}"]]],[{"spanInfo":{"startLine":292,"endLine":292,"endCol":16,"startCol":13,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ts'","{v : [(Data.Heap.Binominal.Tree {VV : a | root t' <= VV})] | len v >= 0\n                                                             && sumSizeList v >= 0\n                                                             && v == ts'}"]]],[{"spanInfo":{"startLine":50,"endLine":50,"endCol":20,"startCol":19,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792804968","{v : GHC.Prim.Int# | v == 0}"]]],[{"spanInfo":{"startLine":163,"endLine":163,"endCol":13,"startCol":11,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ds_d2TC","{v : GHC.Types.Int | v >= 0}"]]],[{"spanInfo":{"startLine":289,"endLine":289,"endCol":14,"startCol":12,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["tl","{v : [(Data.Heap.Binominal.Tree {VV : a | x <= VV})] | sumSizeList v == sumSizeList ts'\n                                                       && sumSizeList v >= 0\n                                                       && len v >= 0\n                                                       && v == tl}"]]],[{"spanInfo":{"startLine":291,"endLine":291,"endCol":45,"startCol":43,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["x'","{VV : a | VV == root t'\n          && VV == x'}"]]],[{"spanInfo":{"startLine":247,"endLine":247,"endCol":51,"startCol":37,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[[null,"forall a .\nx1:{v : (Data.Heap.Binominal.Heap a) | 0 < len (unheap v)} -> {v : [(Data.Heap.Binominal.Tree a)] | 0 < len v\n                                                                                                    && sumSizeList v == heapSize x1}"]]],[{"spanInfo":{"startLine":313,"endLine":313,"endCol":45,"startCol":41,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ts2'","{v : [(Data.Heap.Binominal.Tree a)] | sumSizeList v >= 0\n                                      && len v >= 0\n                                      && v == ts2'}"]]]],"o_templs":[[{"spanInfo":{"startLine":151,"endLine":151,"endCol":32,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["x","{lq_tmp$x##4365 : b | lq_tmp$x##4365 == x##a224}"]]],[{"spanInfo":{"startLine":159,"endLine":159,"endCol":51,"startCol":40,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792804993","{lq_tmp$x##1918 : GHC.Types.Int^\"lq_tmp$x##1917\" | lq_tmp$x##1918 == ds_d2TB + ds_d2TF}"]]],[{"spanInfo":{"startLine":332,"endLine":332,"endCol":34,"startCol":22,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[[null,"{lq_tmp$x##6624 : ({lq_tmp$x##6633 : a^\"lq_tmp$x##6632\" | $k_##6631[VV##6630:=lq_tmp$x##6633][lq_tmp$x##6627:=fix$36$$36$dOrd_a2Ll][lq_tmp$x##6628:=ds_d2VY]}, (Data.Heap.Binominal.Heap {lq_tmp$x##6633 : a^\"lq_tmp$x##6632\" | $k_##6631[VV##6630:=lq_tmp$x##6633][lq_tmp$x##6627:=fix$36$$36$dOrd_a2Ll][lq_tmp$x##6628:=ds_d2VY]\n                                                                                                                                                                                                                                && fst lq_tmp$x##6624 <= lq_tmp$x##6633})) | 1 + Data.Heap.Binominal.heapSize (snd lq_tmp$x##6624) == Data.Heap.Binominal.heapSize ds_d2VY}"]]],[{"spanInfo":{"startLine":162,"endLine":162,"endCol":73,"startCol":25,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[[null,"{lq_tmp$x##1662 : (Data.Heap.Binominal.Tree {lq_tmp$x##1672 : a^\"lq_tmp$x##1671\" | $k_##1670[VV##1669:=lq_tmp$x##1672][lq_tmp$x##1666:=ds_d2TD][lq_tmp$x##1667:=ds_d2Tz][lq_tmp$x##1668:=t1BoundedByX1##a22h]\n                                                                                   && ds_d2TD <= lq_tmp$x##1672}) | Data.Heap.Binominal.size lq_tmp$x##1662 == Data.Heap.Binominal.size t1BoundedByX1##a22h}"]]],[{"spanInfo":{"startLine":159,"endLine":159,"endCol":50,"startCol":47,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ds_d2TF","{lq_tmp$x##1922 : GHC.Types.Int | 1 <= lq_tmp$x##1922\n                                  && lq_tmp$x##1922 == 1 + Data.Heap.Binominal.sumSizeList ds_d2TE\n                                  && lq_tmp$x##1922 == ds_d2TF}"]]],[{"spanInfo":{"startLine":262,"endLine":262,"endCol":36,"startCol":34,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805060","{lq_tmp$x##5260 : [(Data.Heap.Binominal.Tree a)] | Data.Heap.Binominal.sumSizeList lq_tmp$x##5260 >= 0\n                                                   && len lq_tmp$x##5260 >= 0\n                                                   && len lq_tmp$x##5260 >= 0\n                                                   && lq_tmp$x##5260 == ts##a22Q\n                                                   && Data.Heap.Binominal.sumSizeList lq_tmp$x##5260 >= 0\n                                                   && len lq_tmp$x##5260 >= 0\n                                                   && len lq_tmp$x##5260 >= 0\n                                                   && tail lq_tmp$x##5260 == ds_d2Ss\n                                                   && head lq_tmp$x##5260 == ds_d2Sr\n                                                   && listElts lq_tmp$x##5260 == Set_cup (Set_sng ds_d2Sr) (listElts ds_d2Ss)\n                                                   && len lq_tmp$x##5260 == 1 + len ds_d2Ss\n                                                   && Data.Heap.Binominal.mapSize lq_tmp$x##5260 == GHC.Types.: (Data.Heap.Binominal.size ds_d2Sr) (Data.Heap.Binominal.mapSize ds_d2Ss)\n                                                   && Data.Heap.Binominal.sumPositives lq_tmp$x##5260 == ds_d2Sr + Data.Heap.Binominal.sumPositives ds_d2Ss\n                                                   && Data.Heap.Binominal.len lq_tmp$x##5260 == 1 + Data.Heap.Binominal.len ds_d2Ss\n                                                   && Data.Heap.Binominal.sumSizeList lq_tmp$x##5260 == Data.Heap.Binominal.sumPositives (Data.Heap.Binominal.mapSize (GHC.Types.: ds_d2Sr ds_d2Ss))\n                                                   && lq_tmp$x##5260 == GHC.Types.: ds_d2Sr ds_d2Ss\n                                                   && tail lq_tmp$x##5260 == ds_d2Ss\n                                                   && head lq_tmp$x##5260 == ds_d2Sr\n                                                   && listElts lq_tmp$x##5260 == Set_cup (Set_sng ds_d2Sr) (listElts ds_d2Ss)\n                                                   && len lq_tmp$x##5260 == 1 + len ds_d2Ss\n                                                   && Data.Heap.Binominal.mapSize lq_tmp$x##5260 == GHC.Types.: (Data.Heap.Binominal.size ds_d2Sr) (Data.Heap.Binominal.mapSize ds_d2Ss)\n                                                   && Data.Heap.Binominal.sumPositives lq_tmp$x##5260 == ds_d2Sr + Data.Heap.Binominal.sumPositives ds_d2Ss\n                                                   && Data.Heap.Binominal.len lq_tmp$x##5260 == 1 + Data.Heap.Binominal.len ds_d2Ss\n                                                   && Data.Heap.Binominal.sumSizeList lq_tmp$x##5260 == Data.Heap.Binominal.sumPositives (Data.Heap.Binominal.mapSize (GHC.Types.: ds_d2Sr ds_d2Ss))\n                                                   && Data.Heap.Binominal.sumSizeList lq_tmp$x##5260 >= 0\n                                                   && len lq_tmp$x##5260 >= 0\n                                                   && len lq_tmp$x##5260 >= 0\n                                                   && lq_tmp$x##5260 == lq_anf$##7205759403792805060##d2YQ}"]]],[{"spanInfo":{"startLine":330,"endLine":330,"endCol":9,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.heapSort","forall a .\n(GHC.Classes.Ord<[]> a) =>\nlq_tmp$x##6502:(Data.Heap.Binominal.Heap a) -> {VV##0 : [a]<\\lq_tmp$x##6503 VV -> {VV : a | lq_tmp$x##6503 <= VV}> | len VV##0 == Data.Heap.Binominal.heapSize lq_tmp$x##6502}"]]],[{"spanInfo":{"startLine":167,"endLine":167,"endCol":16,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805040","{lq_tmp$x##4390 : [{lq_tmp$x##4399 : (Data.Heap.Binominal.Tree {lq_tmp$x##4398 : a^\"lq_tmp$x##4394\" | $k_##4393[VV##4392:=lq_tmp$x##4398][VV##4395:=lq_tmp$x##4399]})^\"lq_tmp$x##4397\" | $k_##4396[VV##4395:=lq_tmp$x##4399]}]<\\lq_tmp$x##4391 VV -> {lq_tmp$x##4399 : (Data.Heap.Binominal.Tree {lq_tmp$x##4398 : a^\"lq_tmp$x##4394\" \"lq_tmp$x##4402\" | $k_##4401[VV##4400:=lq_tmp$x##4398][VV##4403:=lq_tmp$x##4399][lq_tmp$x##4406:=lq_tmp$x##4391]})^\"lq_tmp$x##4397\" \"lq_tmp$x##4405\" | $k_##4404[VV##4403:=lq_tmp$x##4399][lq_tmp$x##4406:=lq_tmp$x##4391]}> | Set_emp (listElts lq_tmp$x##4390)\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     && len lq_tmp$x##4390 == 0\nata.Heap.Binominal.mapSize lq_tmp$x##4390 == GHC.Types.[]\nata.Heap.Binominal.sumPositives lq_tmp$x##4390 == 0\nata.Heap.Binominal.len lq_tmp$x##4390 == 0\nata.Heap.Binominal.sumSizeList lq_tmp$x##4390 == 0}"]]],[{"spanInfo":{"startLine":187,"endLine":187,"endCol":51,"startCol":36,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805007","{lq_tmp$x##2400 : (Data.Heap.Binominal.Tree {lq_tmp$x##2414 : a^\"lq_tmp$x##2413\" | $k_##2412[VV##2411:=lq_tmp$x##2414][lq_tmp$x##2406:=lq_anf$##7205759403792805003##d2XV][lq_tmp$x##2407:=x##a22l][lq_tmp$x##2408:=lq_anf$##7205759403792805004##d2XW][lq_tmp$x##2409:=lq_anf$##7205759403792805006##d2XY]}) | Data.Heap.Binominal.size lq_tmp$x##2400 == lq_anf$##7205759403792805006##d2XY\n                                                                                                                                                                                                                                                                                                                && Data.Heap.Binominal.subtrees lq_tmp$x##2400 == lq_anf$##7205759403792805004##d2XW\n                                                                                                                                                                                                                                                                                                                && Data.Heap.Binominal.root lq_tmp$x##2400 == x##a22l\n                                                                                                                                                                                                                                                                                                                && Data.Heap.Binominal.rank lq_tmp$x##2400 == lq_anf$##7205759403792805003##d2XV}"]]],[{"spanInfo":{"startLine":278,"endLine":278,"endCol":24,"startCol":22,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[[null,"forall a <p :: a a -> Bool> .\n{lq_tmp$x##3604 : [a]<\\lq_tmp$x##3605 VV -> {lq_tmp$x##3603 : a<p lq_tmp$x##3605> | true}> | Set_emp (listElts lq_tmp$x##3604)\n                                                                                             && len lq_tmp$x##3604 == 0\n                                                                                             && Data.Heap.Binominal.mapSize lq_tmp$x##3604 == GHC.Types.[]\n                                                                                             && Data.Heap.Binominal.sumPositives lq_tmp$x##3604 == 0\n                                                                                             && Data.Heap.Binominal.len lq_tmp$x##3604 == 0\n                                                                                             && Data.Heap.Binominal.sumSizeList lq_tmp$x##3604 == 0}"]]],[{"spanInfo":{"startLine":205,"endLine":205,"endCol":27,"startCol":26,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["x","{lq_tmp$x##4549 : a | lq_tmp$x##4549 == x##a22t}"]]],[{"spanInfo":{"startLine":274,"endLine":274,"endCol":10,"startCol":4,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["minElt","{lq_tmp$x##6476 : a^\"lq_tmp$x##6216\" | $k_##6215[VV##6214:=lq_tmp$x##6476][lq_tmp$x##6190:=lq_anf$##7205759403792805077##d2Z7][lq_tmp$x##6204:=lq_anf$##7205759403792805076##d2Z6][lq_tmp$x##6208:=fix$36$$36$dOrd_a2KR][lq_tmp$x##6209:=lq_anf$##7205759403792805074##d2Z4][lq_tmp$x##6217:=lq_tmp$x##6476][lq_tmp$x##6228:=lq_tmp$x##6476][lq_tmp$x##6229:=lq_anf$##7205759403792805077##d2Z7][lq_tmp$x##6243:=lq_anf$##7205759403792805076##d2Z6][lq_tmp$x##6248:=lq_tmp$x##6476][lq_tmp$x##6249:=lq_anf$##7205759403792805077##d2Z7][lq_tmp$x##6263:=lq_anf$##7205759403792805076##d2Z6][lq_tmp$x##6292:=lq_tmp$x##6476][lq_tmp$x##6293:=lq_anf$##7205759403792805077##d2Z7][lq_tmp$x##6295:=lq_tmp$x##6476][lq_tmp$x##6296:=lq_anf$##7205759403792805077##d2Z7][lq_tmp$x##6313:=ds_d2VU]\n                                       && lq_tmp$x##6476 == minElt##a2KZ}"]]],[{"spanInfo":{"startLine":281,"endLine":281,"endCol":8,"startCol":7,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["x","{lq_tmp$x##3910 : a^\"lq_tmp$x##3909\" | $k_##3908[VV##3907:=lq_tmp$x##3910][lq_tmp$x##3906:=t##a22Y]\n                                       && lq_tmp$x##3910 == Data.Heap.Binominal.root t##a22Y}"]]],[{"spanInfo":{"startLine":191,"endLine":191,"endCol":8,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.insert'","forall a .\n(GHC.Classes.Ord<[]> a) =>\nlq_tmp$x##1982:(Data.Heap.Binominal.Tree a) -> lq_tmp$x##1983:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | Data.Heap.Binominal.sumSizeList v == Data.Heap.Binominal.size lq_tmp$x##1982 + Data.Heap.Binominal.sumSizeList lq_tmp$x##1983}"]]],[{"spanInfo":{"startLine":159,"endLine":159,"endCol":39,"startCol":20,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792804992","{lq_tmp$x##1872 : [{lq_tmp$x##1887 : (Data.Heap.Binominal.Tree {lq_tmp$x##1886 : a^\"lq_tmp$x##1882\" | $k_##1881[VV##1880:=lq_tmp$x##1886][VV##1883:=lq_tmp$x##1887][lq_tmp$x##1876:=t2BoundedByX1##a22g][lq_tmp$x##1877:=ds_d2TA]})^\"lq_tmp$x##1885\" | $k_##1884[VV##1883:=lq_tmp$x##1887][lq_tmp$x##1876:=t2BoundedByX1##a22g][lq_tmp$x##1877:=ds_d2TA]}]<\\lq_tmp$x##1879 VV -> {lq_tmp$x##1887 : (Data.Heap.Binominal.Tree {lq_tmp$x##1886 : a^\"lq_tmp$x##1882\" \"lq_tmp$x##1890\" | $k_##1889[VV##1888:=lq_tmp$x##1886][VV##1891:=lq_tmp$x##1887][lq_tmp$x##1876:=t2BoundedByX1##a22g][lq_tmp$x##1877:=ds_d2TA][lq_tmp$x##1894:=lq_tmp$x##1879]})^\"lq_tmp$x##1885\" \"lq_tmp$x##1893\" | $k_##1892[VV##1891:=lq_tmp$x##1887][lq_tmp$x##1876:=t2BoundedByX1##a22g][lq_tmp$x##1877:=ds_d2TA][lq_tmp$x##1894:=lq_tmp$x##1879]}> | tail lq_tmp$x##1872 == ds_d2TA\nhead lq_tmp$x##1872 == t2BoundedByX1##a22g\nlistElts lq_tmp$x##1872 == Set_cup (Set_sng t2BoundedByX1##a22g) (listElts ds_d2TA)\nlen lq_tmp$x##1872 == 1 + len ds_d2TA\nata.Heap.Binominal.mapSize lq_tmp$x##1872 == GHC.Types.: (Data.Heap.Binominal.size t2BoundedByX1##a22g) (Data.Heap.Binominal.mapSize ds_d2TA)\nata.Heap.Binominal.sumPositives lq_tmp$x##1872 == t2BoundedByX1##a22g + Data.Heap.Binominal.sumPositives ds_d2TA\nata.Heap.Binominal.len lq_tmp$x##1872 == 1 + Data.Heap.Binominal.len ds_d2TA\nata.Heap.Binominal.sumSizeList lq_tmp$x##1872 == Data.Heap.Binominal.sumPositives (Data.Heap.Binominal.mapSize (GHC.Types.: t2BoundedByX1##a22g ds_d2TA))}"]]],[{"spanInfo":{"startLine":163,"endLine":163,"endCol":44,"startCol":41,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ds_d2TB","{lq_tmp$x##1761 : GHC.Types.Int | 1 <= lq_tmp$x##1761\n                                  && lq_tmp$x##1761 == 1 + Data.Heap.Binominal.sumSizeList ds_d2TA\n                                  && lq_tmp$x##1761 == ds_d2TB}"]]],[{"spanInfo":{"startLine":274,"endLine":274,"endCol":51,"startCol":12,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805080","{lq_tmp$x##6427 : (Data.Heap.Binominal.Heap {lq_tmp$x##6435 : a^\"lq_tmp$x##6434\" | $k_##6433[VV##6432:=lq_tmp$x##6435][lq_tmp$x##6430:=lq_anf$##7205759403792805079##d2Z9]}) | Data.Heap.Binominal.unheap lq_tmp$x##6427 == lq_anf$##7205759403792805079##d2Z9\n                                                                                                                                                                               && Data.Heap.Binominal.heapSize lq_tmp$x##6427 == Data.Heap.Binominal.sumSizeList lq_anf$##7205759403792805079##d2Z9}"]]],[{"spanInfo":{"startLine":314,"endLine":314,"endCol":64,"startCol":25,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.insert'","forall a .\n(GHC.Classes.Ord<[]> a) =>\nlq_tmp$x##1982:(Data.Heap.Binominal.Tree a) -> lq_tmp$x##1983:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | Data.Heap.Binominal.sumSizeList v == Data.Heap.Binominal.size lq_tmp$x##1982 + Data.Heap.Binominal.sumSizeList lq_tmp$x##1983}"]]],[{"spanInfo":{"startLine":187,"endLine":187,"endCol":48,"startCol":46,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[[null,"forall a <p :: a a -> Bool> .\n{lq_tmp$x##2363 : [a]<\\lq_tmp$x##2364 VV -> {lq_tmp$x##2362 : a<p lq_tmp$x##2364> | true}> | Set_emp (listElts lq_tmp$x##2363)\n                                                                                             && len lq_tmp$x##2363 == 0\n                                                                                             && Data.Heap.Binominal.mapSize lq_tmp$x##2363 == GHC.Types.[]\n                                                                                             && Data.Heap.Binominal.sumPositives lq_tmp$x##2363 == 0\n                                                                                             && Data.Heap.Binominal.len lq_tmp$x##2363 == 0\n                                                                                             && Data.Heap.Binominal.sumSizeList lq_tmp$x##2363 == 0}"]]],[{"spanInfo":{"startLine":291,"endLine":291,"endCol":56,"startCol":14,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[[null,"{lq_tmp$x##3984 : (Data.Heap.Binominal.Tree {lq_tmp$x##3994 : a^\"lq_tmp$x##3993\" | $k_##3992[VV##3991:=lq_tmp$x##3994][lq_tmp$x##3988:=x'##a234][lq_tmp$x##3989:=x##a233][lq_tmp$x##3990:=tBounded##a235]\n                                                                                   && x'##a234 <= lq_tmp$x##3994}) | Data.Heap.Binominal.size lq_tmp$x##3984 == Data.Heap.Binominal.size tBounded##a235}"]]],[{"spanInfo":{"startLine":161,"endLine":161,"endCol":55,"startCol":53,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792804980","{lq_tmp$x##1655 : (Data.Heap.Binominal.Tree a) | lq_tmp$x##1655 == t1##a225\n                                                 && Data.Heap.Binominal.size lq_tmp$x##1655 == ds_d2TB\n                                                 && Data.Heap.Binominal.subtrees lq_tmp$x##1655 == ds_d2TA\n                                                 && Data.Heap.Binominal.root lq_tmp$x##1655 == ds_d2Tz\n                                                 && Data.Heap.Binominal.rank lq_tmp$x##1655 == ds_d2Ty\n                                                 && lq_tmp$x##1655 == Data.Heap.Binominal.Node ds_d2Ty ds_d2Tz ds_d2TA ds_d2TB\n                                                 && Data.Heap.Binominal.size lq_tmp$x##1655 == ds_d2TB\n                                                 && Data.Heap.Binominal.subtrees lq_tmp$x##1655 == ds_d2TA\n                                                 && Data.Heap.Binominal.root lq_tmp$x##1655 == ds_d2Tz\n                                                 && Data.Heap.Binominal.rank lq_tmp$x##1655 == ds_d2Ty\n                                                 && lq_tmp$x##1655 == lq_anf$##7205759403792804980##d2Xy}"]]],[{"spanInfo":{"startLine":289,"endLine":289,"endCol":11,"startCol":9,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["hd","{lq_tmp$x##4207 : (Data.Heap.Binominal.Tree {lq_tmp$x##4206 : a^\"lq_tmp$x##4130\" | $k_##4129[VV##4128:=lq_tmp$x##4206][lq_tmp$x##4121:=lq_tmp$x##4207][lq_tmp$x##4125:=x##a233][lq_tmp$x##4126:=x'##a234][lq_tmp$x##4127:=tBounded'##a236][lq_tmp$x##4131:=lq_tmp$x##4206]\n                                                                                   && x##a233 <= lq_tmp$x##4206}) | Data.Heap.Binominal.size lq_tmp$x##4207 == Data.Heap.Binominal.size tBounded'##a236\n                                                                                                                    && lq_tmp$x##4207 == hd##a237}"]]],[{"spanInfo":{"startLine":157,"endLine":159,"endCol":51,"startCol":5,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.Node","forall a .\nlq_tmp$x##1940:{lq_tmp$x##1924 : GHC.Types.Int | lq_tmp$x##1924 >= 0} -> lq_tmp$x##1941:a -> lq_tmp$x##1942:[(Data.Heap.Binominal.Tree {lq_tmp$x##1926 : a | lq_tmp$x##1941 <= lq_tmp$x##1926})] -> lq_tmp$x##1943:{lq_tmp$x##1932 : GHC.Types.Int | 1 <= lq_tmp$x##1932\n                                                                                                                                                                                                                                                     && lq_tmp$x##1932 == 1 + Data.Heap.Binominal.sumSizeList lq_tmp$x##1942} -> {lq_tmp$x##1934 : (Data.Heap.Binominal.Tree a) | Data.Heap.Binominal.size lq_tmp$x##1934 == lq_tmp$x##1943\n                                                                                                                                                                                                                                                                                                                                                                                  && Data.Heap.Binominal.subtrees lq_tmp$x##1934 == lq_tmp$x##1942\n                                                                                                                                                                                                                                                                                                                                                                                  && Data.Heap.Binominal.root lq_tmp$x##1934 == lq_tmp$x##1941\n                                                                                                                                                                                                                                                                                                                                                                                  && Data.Heap.Binominal.rank lq_tmp$x##1934 == lq_tmp$x##1940}"]]],[{"spanInfo":{"startLine":267,"endLine":267,"endCol":60,"startCol":42,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805068","{lq_tmp$x##5874 : [(Data.Heap.Binominal.Tree {lq_tmp$x##5881 : a^\"lq_tmp$x##5880\" | $k_##5879[VV##5878:=lq_tmp$x##5881][lq_tmp$x##5876:=h##a22R]})] | 0 < len lq_tmp$x##5874\n                                                                                                                                                      && Data.Heap.Binominal.sumSizeList lq_tmp$x##5874 == Data.Heap.Binominal.heapSize h##a22R}"]]],[{"spanInfo":{"startLine":107,"endLine":107,"endCol":40,"startCol":38,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ts","[(Data.Heap.Binominal.Tree {VV : a | y##a220 <= VV})]"]]],[{"spanInfo":{"startLine":288,"endLine":288,"endCol":48,"startCol":47,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["x","{lq_tmp$x##4164 : a^\"lq_tmp$x##3909\" | $k_##3908[VV##3907:=lq_tmp$x##4164][lq_tmp$x##3906:=t##a22Y][lq_tmp$x##3910:=lq_tmp$x##4164]\n                                       && lq_tmp$x##4164 == Data.Heap.Binominal.root t##a22Y\n                                       && lq_tmp$x##4164 == x##a233}"]]],[{"spanInfo":{"startLine":107,"endLine":107,"endCol":45,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ts","{lq_tmp$x##3393 : [(Data.Heap.Binominal.Tree {lq_tmp$x##3388 : a | y##a220 <= lq_tmp$x##3388})] | Data.Heap.Binominal.sumSizeList lq_tmp$x##3393 >= 0\n                                                                                                  && len lq_tmp$x##3393 >= 0\n                                                                                                  && len lq_tmp$x##3393 >= 0\n                                                                                                  && lq_tmp$x##3393 == ts##a221}"]]],[{"spanInfo":{"startLine":332,"endLine":332,"endCol":34,"startCol":33,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ds_d2VY","{lq_tmp$x##6637 : (Data.Heap.Binominal.Heap a) | Data.Heap.Binominal.heapSize lq_tmp$x##6637 >= 0\n                                                 && lq_tmp$x##6637 == ds_d2VY}"]]],[{"spanInfo":{"startLine":155,"endLine":155,"endCol":8,"startCol":6,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["t1","(Data.Heap.Binominal.Tree a)"]]],[{"spanInfo":{"startLine":247,"endLine":247,"endCol":15,"startCol":11,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[[null,"forall a .\nlq_tmp$x##5277:(Data.Heap.Binominal.Tree a) -> {lq_tmp$x##5275 : a | lq_tmp$x##5275 == Data.Heap.Binominal.root lq_tmp$x##5277}"]]],[{"spanInfo":{"startLine":257,"endLine":257,"endCol":19,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.reverseHeapListAux","forall a .\nlq_tmp$x##4851:[(Data.Heap.Binominal.Tree a)] -> lq_tmp$x##4852:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | Data.Heap.Binominal.sumSizeList v == Data.Heap.Binominal.sumSizeList lq_tmp$x##4851 + Data.Heap.Binominal.sumSizeList lq_tmp$x##4852}"]]],[{"spanInfo":{"startLine":103,"endLine":103,"endCol":33,"startCol":32,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["y","{VV : a | x##a21W <= VV}"]]],[{"spanInfo":{"startLine":156,"endLine":156,"endCol":13,"startCol":5,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792804982","{lq_tmp$x##1621 : GHC.Types.Bool | lq_tmp$x##1621 <=> ds_d2Tz <= ds_d2TD}"]]],[{"spanInfo":{"startLine":175,"endLine":175,"endCol":27,"startCol":26,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805044","{lq_tmp$x##4569 : GHC.Types.Int | lq_tmp$x##4569 == lq_anf$##7205759403792805043##d2Yz}"]]],[{"spanInfo":{"startLine":151,"endLine":151,"endCol":28,"startCol":27,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["x","b"]]],[{"spanInfo":{"startLine":175,"endLine":175,"endCol":10,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.singleton","forall a .\nlq_tmp$x##4564:a -> {v : (Data.Heap.Binominal.Heap a) | Data.Heap.Binominal.heapSize v == 1}"]]],[{"spanInfo":{"startLine":175,"endLine":175,"endCol":29,"startCol":28,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["x","{lq_tmp$x##4630 : a | lq_tmp$x##4630 == x##a22k}"]]],[{"spanInfo":{"startLine":267,"endLine":267,"endCol":60,"startCol":31,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805069","{lq_tmp$x##5908 : ((Data.Heap.Binominal.Tree {lq_tmp$x##5921 : a^\"lq_tmp$x##5920\" | $k_##5919[VV##5918:=lq_tmp$x##5921][lq_tmp$x##5912:=fix$36$$36$dOrd_a2Kr][lq_tmp$x##5913:=lq_anf$##7205759403792805068##d2YY]}), [(Data.Heap.Binominal.Tree {lq_tmp$x##5921 : a^\"lq_tmp$x##5920\" | $k_##5919[VV##5918:=lq_tmp$x##5921][lq_tmp$x##5912:=fix$36$$36$dOrd_a2Kr][lq_tmp$x##5913:=lq_anf$##7205759403792805068##d2YY]\n                                                                                                                                                                                                                                                                                       && Data.Heap.Binominal.root (fst lq_tmp$x##5908) <= lq_tmp$x##5921})]) | Data.Heap.Binominal.size (fst lq_tmp$x##5908) + Data.Heap.Binominal.sumSizeList (snd lq_tmp$x##5908) == Data.Heap.Binominal.sumSizeList lq_anf$##7205759403792805068##d2YY}"]]],[{"spanInfo":{"startLine":312,"endLine":312,"endCol":41,"startCol":37,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ts1'","{lq_tmp$x##3124 : [(Data.Heap.Binominal.Tree a)] | Data.Heap.Binominal.sumSizeList lq_tmp$x##3124 >= 0\n                                                   && len lq_tmp$x##3124 >= 0\n                                                   && len lq_tmp$x##3124 >= 0\n                                                   && lq_tmp$x##3124 == ts1'##a23g}"]]],[{"spanInfo":{"startLine":68,"endLine":68,"endCol":9,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.heapSize","forall a .\nlq_tmp$x##1299:(Data.Heap.Binominal.Heap a) -> {VV : GHC.Types.Int | VV == Data.Heap.Binominal.heapSize lq_tmp$x##1299\n                                                                     && VV >= 0}"]]],[{"spanInfo":{"startLine":287,"endLine":287,"endCol":57,"startCol":48,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["tBounded'","{lq_tmp$x##4135 : (Data.Heap.Binominal.Tree {lq_tmp$x##4134 : a^\"lq_tmp$x##3947\" | $k_##3946[VV##3945:=lq_tmp$x##4134][lq_tmp$x##3942:=lq_tmp$x##4135][lq_tmp$x##3944:=t'##a2GM][lq_tmp$x##3948:=lq_tmp$x##4134]\n                                                                                   && Data.Heap.Binominal.root t'##a2GM <= lq_tmp$x##4134}) | Data.Heap.Binominal.size lq_tmp$x##4135 == Data.Heap.Binominal.size t'##a2GM\n                                                                                                                                              && lq_tmp$x##4135 == tBounded'##a236}"]]],[{"spanInfo":{"startLine":143,"endLine":143,"endCol":11,"startCol":10,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["x","a"]]],[{"spanInfo":{"startLine":332,"endLine":332,"endCol":18,"startCol":16,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["h'","{VV##6681 : (Data.Heap.Binominal.Heap {VV##6678 : a^\"lq_tmp$x##6680\" | $k_##6679})^\"lq_tmp$x##6683\" | $k_##6682}"]]],[{"spanInfo":{"startLine":103,"endLine":103,"endCol":31,"startCol":30,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["x","a"]]],[{"spanInfo":{"startLine":268,"endLine":268,"endCol":42,"startCol":8,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805073","{lq_tmp$x##6091 : [(Data.Heap.Binominal.Tree {lq_tmp$x##6106 : a^\"lq_tmp$x##6105\" | $k_##6104[VV##6103:=lq_tmp$x##6106][lq_tmp$x##6097:=fix$36$$36$dOrd_a2Kr][lq_tmp$x##6098:=lq_anf$##7205759403792805072##d2Z2][lq_tmp$x##6099:=ts2##a2KB]})] | Data.Heap.Binominal.sumSizeList lq_tmp$x##6091 == Data.Heap.Binominal.sumSizeList lq_anf$##7205759403792805072##d2Z2 + Data.Heap.Binominal.sumSizeList ts2##a2KB}"]]],[{"spanInfo":{"startLine":309,"endLine":309,"endCol":11,"startCol":8,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ts1","[(Data.Heap.Binominal.Tree a)]"]]],[{"spanInfo":{"startLine":292,"endLine":292,"endCol":8,"startCol":6,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["t'","{lq_tmp$x##4103 : (Data.Heap.Binominal.Tree {lq_tmp$x##4102 : a^\"lq_tmp$x##3779\" | $k_##3778[VV##3777:=lq_tmp$x##4102][VV##3780:=lq_tmp$x##4103]})^\"lq_tmp$x##3782\" | $k_##3781[VV##3780:=lq_tmp$x##4103]\n                                                                                                                                                                      && lq_tmp$x##4103 == t'##a2GM}"]]],[{"spanInfo":{"startLine":313,"endLine":313,"endCol":12,"startCol":5,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805017","{lq_tmp$x##2813 : GHC.Types.Int | lq_tmp$x##2813 >= 0\n                                  && lq_tmp$x##2813 == Data.Heap.Binominal.rank t2##a23i}"]]],[{"spanInfo":{"startLine":262,"endLine":262,"endCol":15,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.unheapNonempty","forall a .\nlq_tmp$x##5126:{VV##0 : (Data.Heap.Binominal.Heap a) | 0 < len (Data.Heap.Binominal.unheap VV##0)} -> {v : [(Data.Heap.Binominal.Tree a)] | 0 < len v\n                                                                                                                                            && Data.Heap.Binominal.sumSizeList v == Data.Heap.Binominal.heapSize lq_tmp$x##5126}"]]],[{"spanInfo":{"startLine":200,"endLine":200,"endCol":24,"startCol":18,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805055","{lq_tmp$x##4813 : GHC.Types.Int | lq_tmp$x##4813 == Data.Heap.Binominal.len xs##a22s\n                                  && lq_tmp$x##4813 >= 0}"]]],[{"spanInfo":{"startLine":312,"endLine":312,"endCol":45,"startCol":25,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["GHC.Types.:","forall a <p :: a a -> Bool> .\nlq_tmp$x##3146:a -> lq_tmp$x##3147:[{lq_tmp$x##3135 : a<p lq_tmp$x##3146> | true}]<\\lq_tmp$x##3148 VV -> {lq_tmp$x##3137 : a<p lq_tmp$x##3148> | true}> -> {lq_tmp$x##3142 : [a]<\\lq_tmp$x##3149 VV -> {lq_tmp$x##3141 : a<p lq_tmp$x##3149> | true}> | tail lq_tmp$x##3142 == lq_tmp$x##3147\n                                                                                                                                                                                                                                                        && head lq_tmp$x##3142 == lq_tmp$x##3146\n                                                                                                                                                                                                                                                        && listElts lq_tmp$x##3142 == Set_cup (Set_sng lq_tmp$x##3146) (listElts lq_tmp$x##3147)\n                                                                                                                                                                                                                                                        && len lq_tmp$x##3142 == 1 + len lq_tmp$x##3147\n                                                                                                                                                                                                                                                        && Data.Heap.Binominal.mapSize lq_tmp$x##3142 == GHC.Types.: (Data.Heap.Binominal.size lq_tmp$x##3146) (Data.Heap.Binominal.mapSize lq_tmp$x##3147)\n                                                                                                                                                                                                                                                        && Data.Heap.Binominal.sumPositives lq_tmp$x##3142 == lq_tmp$x##3146 + Data.Heap.Binominal.sumPositives lq_tmp$x##3147\n                                                                                                                                                                                                                                                        && Data.Heap.Binominal.len lq_tmp$x##3142 == 1 + Data.Heap.Binominal.len lq_tmp$x##3147\n                                                                                                                                                                                                                                                        && Data.Heap.Binominal.sumSizeList lq_tmp$x##3142 == Data.Heap.Binominal.sumPositives (Data.Heap.Binominal.mapSize (GHC.Types.: lq_tmp$x##3146 lq_tmp$x##3147))}"]]],[{"spanInfo":{"startLine":274,"endLine":274,"endCol":51,"startCol":17,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805079","{lq_tmp$x##6387 : [(Data.Heap.Binominal.Tree {lq_tmp$x##6402 : a^\"lq_tmp$x##6401\" | $k_##6400[VV##6399:=lq_tmp$x##6402][lq_tmp$x##6393:=fix$36$$36$dOrd_a2KR][lq_tmp$x##6394:=lq_anf$##7205759403792805078##d2Z8][lq_tmp$x##6395:=ts2##a2L3]})] | Data.Heap.Binominal.sumSizeList lq_tmp$x##6387 == Data.Heap.Binominal.sumSizeList lq_anf$##7205759403792805078##d2Z8 + Data.Heap.Binominal.sumSizeList ts2##a2L3}"]]],[{"spanInfo":{"startLine":162,"endLine":162,"endCol":59,"startCol":57,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ds_d2Tz","{lq_tmp$x##1674 : a | lq_tmp$x##1674 == ds_d2Tz}"]]],[{"spanInfo":{"startLine":266,"endLine":268,"endCol":42,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805071","{lq_tmp$x##5997 : (Data.Heap.Binominal.Tree {lq_tmp$x##5996 : a^\"lq_tmp$x##5920\" | $k_##5919[VV##5918:=lq_tmp$x##5996][lq_tmp$x##5894:=lq_tmp$x##5997][lq_tmp$x##5908:=lq_anf$##7205759403792805070##d2Z0][lq_tmp$x##5912:=fix$36$$36$dOrd_a2Kr][lq_tmp$x##5913:=lq_anf$##7205759403792805068##d2YY][lq_tmp$x##5921:=lq_tmp$x##5996][lq_tmp$x##5932:=lq_tmp$x##5996][lq_tmp$x##5933:=lq_tmp$x##5997][lq_tmp$x##5947:=lq_anf$##7205759403792805070##d2Z0][lq_tmp$x##5952:=lq_tmp$x##5996][lq_tmp$x##5953:=lq_tmp$x##5997][lq_tmp$x##5967:=lq_anf$##7205759403792805070##d2Z0]}) | lq_tmp$x##5997 == ds_d2Vx}"]]],[{"spanInfo":{"startLine":266,"endLine":266,"endCol":10,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.deleteMin","forall a .\n(GHC.Classes.Ord<[]> a) =>\nlq_tmp$x##5864:{VV##0 : (Data.Heap.Binominal.Heap a) | 0 < len (Data.Heap.Binominal.unheap VV##0)} -> {v : (Data.Heap.Binominal.Heap a) | 1 + Data.Heap.Binominal.heapSize v == Data.Heap.Binominal.heapSize lq_tmp$x##5864}"]]],[{"spanInfo":{"startLine":285,"endLine":285,"endCol":12,"startCol":6,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805033","{lq_tmp$x##3956 : GHC.Types.Bool | lq_tmp$x##3956 <=> x##a233 < x'##a234}"]]],[{"spanInfo":{"startLine":194,"endLine":194,"endCol":39,"startCol":38,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["t","{lq_tmp$x##2189 : (Data.Heap.Binominal.Tree a) | lq_tmp$x##2189 == t##a22n}"]]],[{"spanInfo":{"startLine":287,"endLine":287,"endCol":47,"startCol":45,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["x'","{lq_tmp$x##4133 : a^\"lq_tmp$x##3921\" | $k_##3920[VV##3919:=lq_tmp$x##4133][lq_tmp$x##3918:=t'##a2GM][lq_tmp$x##3922:=lq_tmp$x##4133]\n                                       && lq_tmp$x##4133 == Data.Heap.Binominal.root t'##a2GM\n                                       && lq_tmp$x##4133 == x'##a234}"]]],[{"spanInfo":{"startLine":98,"endLine":98,"endCol":23,"startCol":22,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ds_d2T9","{lq_tmp$x##1476 : a | lq_tmp$x##1476 == ds_d2T9}"]]],[{"spanInfo":{"startLine":193,"endLine":193,"endCol":21,"startCol":5,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792804998","{lq_tmp$x##2145 : GHC.Types.Bool | lq_tmp$x##2145 <=> lq_anf$##7205759403792804996##d2XO < lq_anf$##7205759403792804997##d2XP}"]]],[{"spanInfo":{"startLine":247,"endLine":247,"endCol":51,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805062","lq_tmp$x##5277:(Data.Heap.Binominal.Tree {lq_tmp$x##5281 : a^\"lq_tmp$x##5280\" | $k_##5279[VV##5278:=lq_tmp$x##5281]}) -> {lq_tmp$x##5281 : a^\"lq_tmp$x##5280\" | $k_##5279[VV##5278:=lq_tmp$x##5281]\n                                                                                                                                                                && lq_tmp$x##5281 == Data.Heap.Binominal.root lq_tmp$x##5277}"]]],[{"spanInfo":{"startLine":278,"endLine":278,"endCol":20,"startCol":19,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["t","{lq_tmp$x##3684 : (Data.Heap.Binominal.Tree a) | lq_tmp$x##3684 == t##a22Y}"]]],[{"spanInfo":{"startLine":98,"endLine":98,"endCol":15,"startCol":14,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ds_d2T8","{lq_tmp$x##1475 : GHC.Types.Int | lq_tmp$x##1475 >= 0\n                                  && lq_tmp$x##1475 == ds_d2T8}"]]],[{"spanInfo":{"startLine":193,"endLine":193,"endCol":30,"startCol":24,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["GHC.Types.:","forall a <p :: a a -> Bool> .\nlq_tmp$x##2250:a -> lq_tmp$x##2251:[{lq_tmp$x##2239 : a<p lq_tmp$x##2250> | true}]<\\lq_tmp$x##2252 VV -> {lq_tmp$x##2241 : a<p lq_tmp$x##2252> | true}> -> {lq_tmp$x##2246 : [a]<\\lq_tmp$x##2253 VV -> {lq_tmp$x##2245 : a<p lq_tmp$x##2253> | true}> | tail lq_tmp$x##2246 == lq_tmp$x##2251\n                                                                                                                                                                                                                                                        && head lq_tmp$x##2246 == lq_tmp$x##2250\n                                                                                                                                                                                                                                                        && listElts lq_tmp$x##2246 == Set_cup (Set_sng lq_tmp$x##2250) (listElts lq_tmp$x##2251)\n                                                                                                                                                                                                                                                        && len lq_tmp$x##2246 == 1 + len lq_tmp$x##2251\n                                                                                                                                                                                                                                                        && Data.Heap.Binominal.mapSize lq_tmp$x##2246 == GHC.Types.: (Data.Heap.Binominal.size lq_tmp$x##2250) (Data.Heap.Binominal.mapSize lq_tmp$x##2251)\n                                                                                                                                                                                                                                                        && Data.Heap.Binominal.sumPositives lq_tmp$x##2246 == lq_tmp$x##2250 + Data.Heap.Binominal.sumPositives lq_tmp$x##2251\n                                                                                                                                                                                                                                                        && Data.Heap.Binominal.len lq_tmp$x##2246 == 1 + Data.Heap.Binominal.len lq_tmp$x##2251\n                                                                                                                                                                                                                                                        && Data.Heap.Binominal.sumSizeList lq_tmp$x##2246 == Data.Heap.Binominal.sumPositives (Data.Heap.Binominal.mapSize (GHC.Types.: lq_tmp$x##2250 lq_tmp$x##2251))}"]]],[{"spanInfo":{"startLine":313,"endLine":313,"endCol":12,"startCol":10,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["t2","{lq_tmp$x##2821 : (Data.Heap.Binominal.Tree a) | lq_tmp$x##2821 == t2##a23i}"]]],[{"spanInfo":{"startLine":253,"endLine":253,"endCol":46,"startCol":44,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[[null,"forall a <p :: a a -> Bool> .\n{lq_tmp$x##5051 : [a]<\\lq_tmp$x##5052 VV -> {lq_tmp$x##5050 : a<p lq_tmp$x##5052> | true}> | Set_emp (listElts lq_tmp$x##5051)\n                                                                                             && len lq_tmp$x##5051 == 0\n                                                                                             && Data.Heap.Binominal.mapSize lq_tmp$x##5051 == GHC.Types.[]\n                                                                                             && Data.Heap.Binominal.sumPositives lq_tmp$x##5051 == 0\n                                                                                             && Data.Heap.Binominal.len lq_tmp$x##5051 == 0\n                                                                                             && Data.Heap.Binominal.sumSizeList lq_tmp$x##5051 == 0}"]]],[{"spanInfo":{"startLine":1,"endLine":1,"endCol":1,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.$trModule","{VV##6931 : GHC.Types.Module^\"lq_tmp$x##6933\" | $k_##6932}"]]],[{"spanInfo":{"startLine":51,"endLine":51,"endCol":42,"startCol":23,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["GHC.Num.$fNumInt","{lq_tmp$x##1169 : (GHC.Num.Num GHC.Types.Int) | lq_tmp$x##1169 == GHC.Num.$fNumInt}"]]],[{"spanInfo":{"startLine":314,"endLine":314,"endCol":45,"startCol":33,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805021","{lq_tmp$x##2869 : (Data.Heap.Binominal.Tree {lq_tmp$x##2879 : a^\"lq_tmp$x##2878\" | $k_##2877[VV##2876:=lq_tmp$x##2879][lq_tmp$x##2873:=fix$36$$36$dOrd_a2Ga][lq_tmp$x##2874:=t1##a23f][lq_tmp$x##2875:=t2##a23i]}) | Data.Heap.Binominal.size lq_tmp$x##2869 == Data.Heap.Binominal.size t1##a23f + Data.Heap.Binominal.size t2##a23i}"]]],[{"spanInfo":{"startLine":314,"endLine":314,"endCol":64,"startCol":46,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805022","{lq_tmp$x##2906 : [(Data.Heap.Binominal.Tree {lq_tmp$x##2921 : a^\"lq_tmp$x##2920\" | $k_##2919[VV##2918:=lq_tmp$x##2921][lq_tmp$x##2912:=fix$36$$36$dOrd_a2Ga][lq_tmp$x##2913:=ts1'##a23g][lq_tmp$x##2914:=ts2'##a23j]})] | Data.Heap.Binominal.sumSizeList lq_tmp$x##2906 == Data.Heap.Binominal.sumSizeList ts1'##a23g + Data.Heap.Binominal.sumSizeList ts2'##a23j}"]]],[{"spanInfo":{"startLine":272,"endLine":272,"endCol":11,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.deleteMin2","forall a .\n(GHC.Classes.Ord<[]> a) =>\nlq_tmp$x##6159:{VV##0 : (Data.Heap.Binominal.Heap a) | 0 < len (Data.Heap.Binominal.unheap VV##0)} -> {v : (a, (Data.Heap.Binominal.Heap {VV : a | fst v <= VV})) | 1 + Data.Heap.Binominal.heapSize (snd v) == Data.Heap.Binominal.heapSize lq_tmp$x##6159}"]]],[{"spanInfo":{"startLine":314,"endLine":314,"endCol":44,"startCol":42,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["t2","{lq_tmp$x##2885 : (Data.Heap.Binominal.Tree a) | lq_tmp$x##2885 == t2##a23i}"]]],[{"spanInfo":{"startLine":305,"endLine":305,"endCol":6,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.merge","forall a .\n(GHC.Classes.Ord<[]> a) =>\nlq_tmp$x##3220:(Data.Heap.Binominal.Heap a) -> lq_tmp$x##3221:(Data.Heap.Binominal.Heap a) -> {VV : (Data.Heap.Binominal.Heap a) | Data.Heap.Binominal.heapSize VV == Data.Heap.Binominal.heapSize lq_tmp$x##3220 + Data.Heap.Binominal.heapSize lq_tmp$x##3221}"]]],[{"spanInfo":{"startLine":289,"endLine":289,"endCol":14,"startCol":9,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805036","{lq_tmp$x##4182 : [{lq_tmp$x##4197 : (Data.Heap.Binominal.Tree {lq_tmp$x##4196 : a^\"lq_tmp$x##4192\" | $k_##4191[VV##4190:=lq_tmp$x##4196][VV##4193:=lq_tmp$x##4197][lq_tmp$x##4186:=hd##a237][lq_tmp$x##4187:=tl##a238]})^\"lq_tmp$x##4195\" | $k_##4194[VV##4193:=lq_tmp$x##4197][lq_tmp$x##4186:=hd##a237][lq_tmp$x##4187:=tl##a238]}]<\\lq_tmp$x##4189 VV -> {lq_tmp$x##4197 : (Data.Heap.Binominal.Tree {lq_tmp$x##4196 : a^\"lq_tmp$x##4192\" \"lq_tmp$x##4200\" | $k_##4199[VV##4198:=lq_tmp$x##4196][VV##4201:=lq_tmp$x##4197][lq_tmp$x##4186:=hd##a237][lq_tmp$x##4187:=tl##a238][lq_tmp$x##4204:=lq_tmp$x##4189]})^\"lq_tmp$x##4195\" \"lq_tmp$x##4203\" | $k_##4202[VV##4201:=lq_tmp$x##4197][lq_tmp$x##4186:=hd##a237][lq_tmp$x##4187:=tl##a238][lq_tmp$x##4204:=lq_tmp$x##4189]}> | tail lq_tmp$x##4182 == tl##a238\nhead lq_tmp$x##4182 == hd##a237\nlistElts lq_tmp$x##4182 == Set_cup (Set_sng hd##a237) (listElts tl##a238)\nlen lq_tmp$x##4182 == 1 + len tl##a238\nata.Heap.Binominal.mapSize lq_tmp$x##4182 == GHC.Types.: (Data.Heap.Binominal.size hd##a237) (Data.Heap.Binominal.mapSize tl##a238)\nata.Heap.Binominal.sumPositives lq_tmp$x##4182 == hd##a237 + Data.Heap.Binominal.sumPositives tl##a238\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     && Data.Heap.Binominal.len lq_tmp$x##4182 == 1 + Data.Heap.Binominal.len tl##a238\nata.Heap.Binominal.sumSizeList lq_tmp$x##4182 == Data.Heap.Binominal.sumPositives (Data.Heap.Binominal.mapSize (GHC.Types.: hd##a237 tl##a238))}"]]],[{"spanInfo":{"startLine":163,"endLine":163,"endCol":50,"startCol":47,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ds_d2TF","{lq_tmp$x##1762 : GHC.Types.Int | 1 <= lq_tmp$x##1762\n                                  && lq_tmp$x##1762 == 1 + Data.Heap.Binominal.sumSizeList ds_d2TE\n                                  && lq_tmp$x##1762 == ds_d2TF}"]]],[{"spanInfo":{"startLine":193,"endLine":193,"endCol":25,"startCol":24,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["t","{lq_tmp$x##2271 : (Data.Heap.Binominal.Tree a) | lq_tmp$x##2271 == t##a22n}"]]],[{"spanInfo":{"startLine":158,"endLine":158,"endCol":73,"startCol":25,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[[null,"{lq_tmp$x##1822 : (Data.Heap.Binominal.Tree {lq_tmp$x##1832 : a^\"lq_tmp$x##1831\" | $k_##1830[VV##1829:=lq_tmp$x##1832][lq_tmp$x##1826:=ds_d2Tz][lq_tmp$x##1827:=ds_d2TD][lq_tmp$x##1828:=t2BoundedByX2##a22f]\n                                                                                   && ds_d2Tz <= lq_tmp$x##1832}) | Data.Heap.Binominal.size lq_tmp$x##1822 == Data.Heap.Binominal.size t2BoundedByX2##a22f}"]]],[{"spanInfo":{"startLine":205,"endLine":205,"endCol":41,"startCol":28,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805042","{lq_tmp$x##4511 : (Data.Heap.Binominal.Heap {lq_tmp$x##4521 : a^\"lq_tmp$x##4520\" | $k_##4519[VV##4518:=lq_tmp$x##4521][lq_tmp$x##4515:=fix$36$$36$dOrd_a2G1][lq_tmp$x##4516:=xs##a22u]}) | Data.Heap.Binominal.heapSize lq_tmp$x##4511 == len xs##a22u}"]]],[{"spanInfo":{"startLine":45,"endLine":45,"endCol":24,"startCol":23,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["x","{lq_tmp$x##1002 : (Data.Heap.Binominal.Tree a) | lq_tmp$x##1002 == x##a1ZS}"]]],[{"spanInfo":{"startLine":330,"endLine":330,"endCol":24,"startCol":22,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[[null,"forall a <p :: a a -> Bool> .\n{lq_tmp$x##6565 : [a]<\\lq_tmp$x##6566 VV -> {lq_tmp$x##6564 : a<p lq_tmp$x##6566> | true}> | Set_emp (listElts lq_tmp$x##6565)\n                                                                                             && len lq_tmp$x##6565 == 0\n                                                                                             && Data.Heap.Binominal.mapSize lq_tmp$x##6565 == GHC.Types.[]\n                                                                                             && Data.Heap.Binominal.sumPositives lq_tmp$x##6565 == 0\n                                                                                             && Data.Heap.Binominal.len lq_tmp$x##6565 == 0\n                                                                                             && Data.Heap.Binominal.sumSizeList lq_tmp$x##6565 == 0}"]]],[{"spanInfo":{"startLine":199,"endLine":199,"endCol":4,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.len","forall a .\nlq_tmp$x##4732:[a] -> {VV : GHC.Types.Int | VV == Data.Heap.Binominal.len lq_tmp$x##4732\n                                            && VV >= 0}"]]],[{"spanInfo":{"startLine":314,"endLine":314,"endCol":63,"startCol":59,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ts2'","{lq_tmp$x##2936 : [(Data.Heap.Binominal.Tree a)] | Data.Heap.Binominal.sumSizeList lq_tmp$x##2936 >= 0\n                                                   && len lq_tmp$x##2936 >= 0\n                                                   && len lq_tmp$x##2936 >= 0\n                                                   && lq_tmp$x##2936 == ts2'##a23j}"]]],[{"spanInfo":{"startLine":312,"endLine":312,"endCol":27,"startCol":25,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["t1","{lq_tmp$x##3167 : (Data.Heap.Binominal.Tree a) | lq_tmp$x##3167 == t1##a23f}"]]],[{"spanInfo":{"startLine":289,"endLine":289,"endCol":7,"startCol":6,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["t","{lq_tmp$x##4277 : (Data.Heap.Binominal.Tree a) | lq_tmp$x##4277 == t##a22Y}"]]],[{"spanInfo":{"startLine":175,"endLine":175,"endCol":35,"startCol":20,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805050","{lq_tmp$x##4670 : [{lq_tmp$x##4685 : (Data.Heap.Binominal.Tree {lq_tmp$x##4684 : a^\"lq_tmp$x##4680\" | $k_##4679[VV##4678:=lq_tmp$x##4684][VV##4681:=lq_tmp$x##4685][lq_tmp$x##4674:=lq_anf$##7205759403792805048##d2YE][lq_tmp$x##4675:=lq_anf$##7205759403792805049##d2YF]})^\"lq_tmp$x##4683\" | $k_##4682[VV##4681:=lq_tmp$x##4685][lq_tmp$x##4674:=lq_anf$##7205759403792805048##d2YE][lq_tmp$x##4675:=lq_anf$##7205759403792805049##d2YF]}]<\\lq_tmp$x##4677 VV -> {lq_tmp$x##4685 : (Data.Heap.Binominal.Tree {lq_tmp$x##4684 : a^\"lq_tmp$x##4680\" \"lq_tmp$x##4688\" | $k_##4687[VV##4686:=lq_tmp$x##4684][VV##4689:=lq_tmp$x##4685][lq_tmp$x##4674:=lq_anf$##7205759403792805048##d2YE][lq_tmp$x##4675:=lq_anf$##7205759403792805049##d2YF][lq_tmp$x##4692:=lq_tmp$x##4677]})^\"lq_tmp$x##4683\" \"lq_tmp$x##4691\" | $k_##4690[VV##4689:=lq_tmp$x##4685][lq_tmp$x##4674:=lq_anf$##7205759403792805048##d2YE][lq_tmp$x##4675:=lq_anf$##7205759403792805049##d2YF][lq_tmp$x##4692:=lq_tmp$x##4677]}> | tail lq_tmp$x##4670 == lq_anf$##7205759403792805049##d2YF\nhead lq_tmp$x##4670 == lq_anf$##7205759403792805048##d2YE\nlistElts lq_tmp$x##4670 == Set_cup (Set_sng lq_anf$##7205759403792805048##d2YE) (listElts lq_anf$##7205759403792805049##d2YF)\nlen lq_tmp$x##4670 == 1 + len lq_anf$##7205759403792805049##d2YF\nata.Heap.Binominal.mapSize lq_tmp$x##4670 == GHC.Types.: (Data.Heap.Binominal.size lq_anf$##7205759403792805048##d2YE) (Data.Heap.Binominal.mapSize lq_anf$##7205759403792805049##d2YF)\nata.Heap.Binominal.sumPositives lq_tmp$x##4670 == lq_anf$##7205759403792805048##d2YE + Data.Heap.Binominal.sumPositives lq_anf$##7205759403792805049##d2YF\nata.Heap.Binominal.len lq_tmp$x##4670 == 1 + Data.Heap.Binominal.len lq_anf$##7205759403792805049##d2YF\nata.Heap.Binominal.sumSizeList lq_tmp$x##4670 == Data.Heap.Binominal.sumPositives (Data.Heap.Binominal.mapSize (GHC.Types.: lq_anf$##7205759403792805048##d2YE lq_anf$##7205759403792805049##d2YF))}"]]],[{"spanInfo":{"startLine":157,"endLine":157,"endCol":55,"startCol":53,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792804981","{lq_tmp$x##1815 : (Data.Heap.Binominal.Tree a) | lq_tmp$x##1815 == t2##a22a\n                                                 && Data.Heap.Binominal.size lq_tmp$x##1815 == ds_d2TF\n                                                 && Data.Heap.Binominal.subtrees lq_tmp$x##1815 == ds_d2TE\n                                                 && Data.Heap.Binominal.root lq_tmp$x##1815 == ds_d2TD\n                                                 && Data.Heap.Binominal.rank lq_tmp$x##1815 == ds_d2TC\n                                                 && lq_tmp$x##1815 == Data.Heap.Binominal.Node ds_d2TC ds_d2TD ds_d2TE ds_d2TF\n                                                 && Data.Heap.Binominal.size lq_tmp$x##1815 == ds_d2TF\n                                                 && Data.Heap.Binominal.subtrees lq_tmp$x##1815 == ds_d2TE\n                                                 && Data.Heap.Binominal.root lq_tmp$x##1815 == ds_d2TD\n                                                 && Data.Heap.Binominal.rank lq_tmp$x##1815 == ds_d2TC\n                                                 && lq_tmp$x##1815 == lq_anf$##7205759403792804981##d2Xz}"]]],[{"spanInfo":{"startLine":194,"endLine":194,"endCol":43,"startCol":32,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805000","{lq_tmp$x##2175 : (Data.Heap.Binominal.Tree {lq_tmp$x##2185 : a^\"lq_tmp$x##2184\" | $k_##2183[VV##2182:=lq_tmp$x##2185][lq_tmp$x##2179:=fix$36$$36$dOrd_a2FG][lq_tmp$x##2180:=t##a22n][lq_tmp$x##2181:=t'##a22q]}) | Data.Heap.Binominal.size lq_tmp$x##2175 == Data.Heap.Binominal.size t##a22n + Data.Heap.Binominal.size t'##a22q}"]]],[{"spanInfo":{"startLine":187,"endLine":187,"endCol":54,"startCol":52,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ts","{lq_tmp$x##2464 : [(Data.Heap.Binominal.Tree a)] | Data.Heap.Binominal.sumSizeList lq_tmp$x##2464 >= 0\n                                                   && len lq_tmp$x##2464 >= 0\n                                                   && len lq_tmp$x##2464 >= 0\n                                                   && lq_tmp$x##2464 == ts##a22m}"]]],[{"spanInfo":{"startLine":163,"endLine":163,"endCol":16,"startCol":10,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792804986","{lq_tmp$x##1698 : GHC.Types.Int^\"lq_tmp$x##1697\" | lq_tmp$x##1698 == ds_d2TC + lq_anf$##7205759403792804985##d2XD}"]]],[{"spanInfo":{"startLine":45,"endLine":45,"endCol":37,"startCol":35,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["xs","{lq_tmp$x##1028 : [(Data.Heap.Binominal.Tree a)] | Data.Heap.Binominal.sumSizeList lq_tmp$x##1028 >= 0\n                                                   && len lq_tmp$x##1028 >= 0\n                                                   && len lq_tmp$x##1028 >= 0\n                                                   && lq_tmp$x##1028 == xs##a1ZT}"]]],[{"spanInfo":{"startLine":253,"endLine":253,"endCol":43,"startCol":41,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["xs","{lq_tmp$x##5106 : [(Data.Heap.Binominal.Tree a)] | Data.Heap.Binominal.sumSizeList lq_tmp$x##5106 >= 0\n                                                   && len lq_tmp$x##5106 >= 0\n                                                   && len lq_tmp$x##5106 >= 0\n                                                   && lq_tmp$x##5106 == xs##a22L}"]]],[{"spanInfo":{"startLine":333,"endLine":333,"endCol":23,"startCol":21,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["h'","{lq_tmp$x##6740 : (Data.Heap.Binominal.Heap {lq_tmp$x##6739 : a^\"lq_tmp$x##6680\" | $k_##6679[VV##6678:=lq_tmp$x##6739][VV##6681:=lq_tmp$x##6740]})^\"lq_tmp$x##6683\" | $k_##6682[VV##6681:=lq_tmp$x##6740]\n                                                                                                                                                                      && Data.Heap.Binominal.heapSize lq_tmp$x##6740 >= 0\n                                                                                                                                                                      && lq_tmp$x##6740 == h'##a2Lu}"]]],[{"spanInfo":{"startLine":175,"endLine":175,"endCol":32,"startCol":30,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[[null,"forall a <p :: a a -> Bool> .\n{lq_tmp$x##4577 : [a]<\\lq_tmp$x##4578 VV -> {lq_tmp$x##4576 : a<p lq_tmp$x##4578> | true}> | Set_emp (listElts lq_tmp$x##4577)\n                                                                                             && len lq_tmp$x##4577 == 0\n                                                                                             && Data.Heap.Binominal.mapSize lq_tmp$x##4577 == GHC.Types.[]\n                                                                                             && Data.Heap.Binominal.sumPositives lq_tmp$x##4577 == 0\n                                                                                             && Data.Heap.Binominal.len lq_tmp$x##4577 == 0\n                                                                                             && Data.Heap.Binominal.sumSizeList lq_tmp$x##4577 == 0}"]]],[{"spanInfo":{"startLine":253,"endLine":253,"endCol":19,"startCol":17,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["xs","[(Data.Heap.Binominal.Tree a)]"]]],[{"spanInfo":{"startLine":98,"endLine":98,"endCol":46,"startCol":3,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.Node","forall a .\nlq_tmp$x##1466:{lq_tmp$x##1450 : GHC.Types.Int | lq_tmp$x##1450 >= 0} -> lq_tmp$x##1467:a -> lq_tmp$x##1468:[(Data.Heap.Binominal.Tree {lq_tmp$x##1452 : a | lq_tmp$x##1467 <= lq_tmp$x##1452})] -> lq_tmp$x##1469:{lq_tmp$x##1458 : GHC.Types.Int | 1 <= lq_tmp$x##1458\n                                                                                                                                                                                                                                                     && lq_tmp$x##1458 == 1 + Data.Heap.Binominal.sumSizeList lq_tmp$x##1468} -> {lq_tmp$x##1460 : (Data.Heap.Binominal.Tree a) | Data.Heap.Binominal.size lq_tmp$x##1460 == lq_tmp$x##1469\n                                                                                                                                                                                                                                                                                                                                                                                  && Data.Heap.Binominal.subtrees lq_tmp$x##1460 == lq_tmp$x##1468\n                                                                                                                                                                                                                                                                                                                                                                                  && Data.Heap.Binominal.root lq_tmp$x##1460 == lq_tmp$x##1467\n                                                                                                                                                                                                                                                                                                                                                                                  && Data.Heap.Binominal.rank lq_tmp$x##1460 == lq_tmp$x##1466}"]]],[{"spanInfo":{"startLine":51,"endLine":51,"endCol":42,"startCol":40,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["xs","{lq_tmp$x##1152 : [{lq_tmp$x##1149 : GHC.Types.Int | 1 <= lq_tmp$x##1149}] | len lq_tmp$x##1152 >= 0\n                                                                             && len lq_tmp$x##1152 >= 0\n                                                                             && lq_tmp$x##1152 == xs##a1ZV}"]]],[{"spanInfo":{"startLine":268,"endLine":268,"endCol":37,"startCol":16,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805072","{lq_tmp$x##6054 : [(Data.Heap.Binominal.Tree {lq_tmp$x##6063 : a^\"lq_tmp$x##6062\" | $k_##6061[VV##6060:=lq_tmp$x##6063][lq_tmp$x##6057:=ts1##a2Kz]})] | Data.Heap.Binominal.sumSizeList lq_tmp$x##6054 == Data.Heap.Binominal.sumSizeList ts1##a2Kz}"]]],[{"spanInfo":{"startLine":284,"endLine":284,"endCol":16,"startCol":7,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["tBounded'","{lq_tmp$x##3942 : (Data.Heap.Binominal.Tree {lq_tmp$x##3948 : a^\"lq_tmp$x##3947\" | $k_##3946[VV##3945:=lq_tmp$x##3948][lq_tmp$x##3944:=t'##a2GM]\n                                                                                   && Data.Heap.Binominal.root t'##a2GM <= lq_tmp$x##3948}) | Data.Heap.Binominal.size lq_tmp$x##3942 == Data.Heap.Binominal.size t'##a2GM}"]]],[{"spanInfo":{"startLine":161,"endLine":163,"endCol":51,"startCol":5,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.Node","forall a .\nlq_tmp$x##1780:{lq_tmp$x##1764 : GHC.Types.Int | lq_tmp$x##1764 >= 0} -> lq_tmp$x##1781:a -> lq_tmp$x##1782:[(Data.Heap.Binominal.Tree {lq_tmp$x##1766 : a | lq_tmp$x##1781 <= lq_tmp$x##1766})] -> lq_tmp$x##1783:{lq_tmp$x##1772 : GHC.Types.Int | 1 <= lq_tmp$x##1772\n                                                                                                                                                                                                                                                     && lq_tmp$x##1772 == 1 + Data.Heap.Binominal.sumSizeList lq_tmp$x##1782} -> {lq_tmp$x##1774 : (Data.Heap.Binominal.Tree a) | Data.Heap.Binominal.size lq_tmp$x##1774 == lq_tmp$x##1783\n                                                                                                                                                                                                                                                                                                                                                                                  && Data.Heap.Binominal.subtrees lq_tmp$x##1774 == lq_tmp$x##1782\n                                                                                                                                                                                                                                                                                                                                                                                  && Data.Heap.Binominal.root lq_tmp$x##1774 == lq_tmp$x##1781\n                                                                                                                                                                                                                                                                                                                                                                                  && Data.Heap.Binominal.rank lq_tmp$x##1774 == lq_tmp$x##1780}"]]],[{"spanInfo":{"startLine":171,"endLine":171,"endCol":25,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["GHC.Classes.$fEqInt","{lq_tmp$x##1394 : (GHC.Classes.Eq GHC.Types.Int) | lq_tmp$x##1394 == GHC.Classes.$fEqInt}"]]],[{"spanInfo":{"startLine":272,"endLine":272,"endCol":13,"startCol":12,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["h","{VV##0 : (Data.Heap.Binominal.Heap a) | 0 < len (Data.Heap.Binominal.unheap VV##0)}"]]],[{"spanInfo":{"startLine":337,"endLine":337,"endCol":36,"startCol":28,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805085","lq_tmp$x##6823:[{lq_tmp$x##6828 : a^\"lq_tmp$x##6827\" | $k_##6826[VV##6825:=lq_tmp$x##6828][lq_tmp$x##6822:=fix$36$$36$dOrd_a2LI]}] -> {lq_tmp$x##6818 : (Data.Heap.Binominal.Heap {lq_tmp$x##6828 : a^\"lq_tmp$x##6827\" | $k_##6826[VV##6825:=lq_tmp$x##6828][lq_tmp$x##6822:=fix$36$$36$dOrd_a2LI]}) | Data.Heap.Binominal.heapSize lq_tmp$x##6818 == len lq_tmp$x##6823}"]]],[{"spanInfo":{"startLine":107,"endLine":107,"endCol":37,"startCol":36,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["y","{VV : a | x##a21Z <= VV}"]]],[{"spanInfo":{"startLine":313,"endLine":313,"endCol":22,"startCol":15,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805018","{lq_tmp$x##2825 : GHC.Types.Int | lq_tmp$x##2825 >= 0\n                                  && lq_tmp$x##2825 == Data.Heap.Binominal.rank t1##a23f}"]]],[{"spanInfo":{"startLine":45,"endLine":45,"endCol":37,"startCol":18,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["GHC.Types.:","forall a <p :: a a -> Bool> .\nlq_tmp$x##1043:a -> lq_tmp$x##1044:[{lq_tmp$x##1032 : a<p lq_tmp$x##1043> | true}]<\\lq_tmp$x##1045 VV -> {lq_tmp$x##1034 : a<p lq_tmp$x##1045> | true}> -> {lq_tmp$x##1039 : [a]<\\lq_tmp$x##1046 VV -> {lq_tmp$x##1038 : a<p lq_tmp$x##1046> | true}> | tail lq_tmp$x##1039 == lq_tmp$x##1044\n                                                                                                                                                                                                                                                        && head lq_tmp$x##1039 == lq_tmp$x##1043\n                                                                                                                                                                                                                                                        && listElts lq_tmp$x##1039 == Set_cup (Set_sng lq_tmp$x##1043) (listElts lq_tmp$x##1044)\n                                                                                                                                                                                                                                                        && len lq_tmp$x##1039 == 1 + len lq_tmp$x##1044\n                                                                                                                                                                                                                                                        && Data.Heap.Binominal.mapSize lq_tmp$x##1039 == GHC.Types.: (Data.Heap.Binominal.size lq_tmp$x##1043) (Data.Heap.Binominal.mapSize lq_tmp$x##1044)\n                                                                                                                                                                                                                                                        && Data.Heap.Binominal.sumPositives lq_tmp$x##1039 == lq_tmp$x##1043 + Data.Heap.Binominal.sumPositives lq_tmp$x##1044\n                                                                                                                                                                                                                                                        && Data.Heap.Binominal.len lq_tmp$x##1039 == 1 + Data.Heap.Binominal.len lq_tmp$x##1044\n                                                                                                                                                                                                                                                        && Data.Heap.Binominal.sumSizeList lq_tmp$x##1039 == Data.Heap.Binominal.sumPositives (Data.Heap.Binominal.mapSize (GHC.Types.: lq_tmp$x##1043 lq_tmp$x##1044))}"]]],[{"spanInfo":{"startLine":313,"endLine":313,"endCol":40,"startCol":37,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ts1","{lq_tmp$x##3026 : [(Data.Heap.Binominal.Tree a)] | Data.Heap.Binominal.sumSizeList lq_tmp$x##3026 >= 0\n                                                   && len lq_tmp$x##3026 >= 0\n                                                   && len lq_tmp$x##3026 >= 0\n                                                   && lq_tmp$x##3026 == ts1##a23c}"]]],[{"spanInfo":{"startLine":253,"endLine":253,"endCol":16,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.reverseHeapList","forall a .\nlq_tmp$x##5044:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | Data.Heap.Binominal.sumSizeList v == Data.Heap.Binominal.sumSizeList lq_tmp$x##5044}"]]],[{"spanInfo":{"startLine":51,"endLine":51,"endCol":24,"startCol":23,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["x","{lq_tmp$x##1170 : GHC.Types.Int | 1 <= lq_tmp$x##1170\n                                  && lq_tmp$x##1170 == x##a1ZU}"]]],[{"spanInfo":{"startLine":171,"endLine":171,"endCol":20,"startCol":19,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["h","{lq_tmp$x##1368 : (Data.Heap.Binominal.Heap a) | Data.Heap.Binominal.heapSize lq_tmp$x##1368 >= 0\n                                                 && lq_tmp$x##1368 == h##a22j}"]]],[{"spanInfo":{"startLine":151,"endLine":151,"endCol":22,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.assertBoundedTreeList","forall a b .\nlq_tmp$x##4358:a -> lq_tmp$x##4359:[(Data.Heap.Binominal.Tree {VV : a | lq_tmp$x##4358 <= VV})] -> lq_tmp$x##4360:b -> b"]]],[{"spanInfo":{"startLine":280,"endLine":280,"endCol":32,"startCol":30,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ds_d2V9","{lq_tmp$x##3774 : [(Data.Heap.Binominal.Tree a)] | Data.Heap.Binominal.sumSizeList lq_tmp$x##3774 >= 0\n                                                   && len lq_tmp$x##3774 >= 0\n                                                   && len lq_tmp$x##3774 >= 0\n                                                   && lq_tmp$x##3774 == ds_d2V9}"]]],[{"spanInfo":{"startLine":278,"endLine":278,"endCol":11,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.deleteMin'","forall a .\n(GHC.Classes.Ord<[]> a) =>\nlq_tmp$x##3434:{xs : [(Data.Heap.Binominal.Tree a)] | 0 < len xs} -> {v : ((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | Data.Heap.Binominal.root (fst v) <= VV})]) | Data.Heap.Binominal.size (fst v) + Data.Heap.Binominal.sumSizeList (snd v) == Data.Heap.Binominal.sumSizeList lq_tmp$x##3434}"]]],[{"spanInfo":{"startLine":175,"endLine":175,"endCol":34,"startCol":21,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805048","{lq_tmp$x##4614 : (Data.Heap.Binominal.Tree {lq_tmp$x##4628 : a^\"lq_tmp$x##4627\" | $k_##4626[VV##4625:=lq_tmp$x##4628][lq_tmp$x##4620:=lq_anf$##7205759403792805044##d2YA][lq_tmp$x##4621:=x##a22k][lq_tmp$x##4622:=lq_anf$##7205759403792805045##d2YB][lq_tmp$x##4623:=lq_anf$##7205759403792805047##d2YD]}) | Data.Heap.Binominal.size lq_tmp$x##4614 == lq_anf$##7205759403792805047##d2YD\n                                                                                                                                                                                                                                                                                                                && Data.Heap.Binominal.subtrees lq_tmp$x##4614 == lq_anf$##7205759403792805045##d2YB\n                                                                                                                                                                                                                                                                                                                && Data.Heap.Binominal.root lq_tmp$x##4614 == x##a22k\n                                                                                                                                                                                                                                                                                                                && Data.Heap.Binominal.rank lq_tmp$x##4614 == lq_anf$##7205759403792805044##d2YA}"]]],[{"spanInfo":{"startLine":187,"endLine":187,"endCol":43,"startCol":42,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805003","{lq_tmp$x##2355 : GHC.Types.Int | lq_tmp$x##2355 == lq_anf$##7205759403792805002##d2XU}"]]],[{"spanInfo":{"startLine":305,"endLine":305,"endCol":52,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805028","{lq_tmp$x##3255 : (Data.Heap.Binominal.Heap a) | Data.Heap.Binominal.heapSize lq_tmp$x##3255 >= 0\n                                                 && lq_tmp$x##3255 == ds_d2Uq}"]]],[{"spanInfo":{"startLine":314,"endLine":314,"endCol":41,"startCol":39,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["t1","{lq_tmp$x##2883 : (Data.Heap.Binominal.Tree a) | lq_tmp$x##2883 == t1##a23f}"]]],[{"spanInfo":{"startLine":167,"endLine":167,"endCol":6,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.empty","forall a .\n{v : (Data.Heap.Binominal.Heap a) | Data.Heap.Binominal.heapSize v == 0}"]]],[{"spanInfo":{"startLine":159,"endLine":159,"endCol":34,"startCol":21,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["t2BoundedByX1","{lq_tmp$x##1897 : (Data.Heap.Binominal.Tree {lq_tmp$x##1896 : a^\"lq_tmp$x##1831\" | $k_##1830[VV##1829:=lq_tmp$x##1896][lq_tmp$x##1822:=lq_tmp$x##1897][lq_tmp$x##1826:=ds_d2Tz][lq_tmp$x##1827:=ds_d2TD][lq_tmp$x##1828:=t2BoundedByX2##a22f][lq_tmp$x##1832:=lq_tmp$x##1896]\n                                                                                   && ds_d2Tz <= lq_tmp$x##1896}) | Data.Heap.Binominal.size lq_tmp$x##1897 == Data.Heap.Binominal.size t2BoundedByX2##a22f\n                                                                                                                    && lq_tmp$x##1897 == t2BoundedByX1##a22g}"]]],[{"spanInfo":{"startLine":107,"endLine":107,"endCol":35,"startCol":34,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["x","a"]]],[{"spanInfo":{"startLine":305,"endLine":305,"endCol":51,"startCol":48,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ts2","{lq_tmp$x##3332 : [(Data.Heap.Binominal.Tree a)] | Data.Heap.Binominal.sumSizeList lq_tmp$x##3332 >= 0\n                                                   && len lq_tmp$x##3332 >= 0\n                                                   && len lq_tmp$x##3332 >= 0\n                                                   && lq_tmp$x##3332 == ts2##a23b}"]]],[{"spanInfo":{"startLine":200,"endLine":200,"endCol":24,"startCol":22,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["xs","{lq_tmp$x##4825 : [a] | Data.Heap.Binominal.sumSizeList lq_tmp$x##4825 >= 0\n                        && Data.Heap.Binominal.sumPositives lq_tmp$x##4825 >= 0\n                        && len lq_tmp$x##4825 >= 0\n                        && lq_tmp$x##4825 == xs##a22s}"]]],[{"spanInfo":{"startLine":337,"endLine":337,"endCol":36,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["GHC.Base..","forall b\n       c\n       a <r :: a c -> Bool, q :: a b -> Bool, p :: b c -> Bool> .\n{xcmp :: a, wcmp :: {VV : b<q xcmp> | true} |- {VV : c<p wcmp> | true} <: {VV : c<r xcmp> | true}} =>\nlq_tmp$db##14:(ycmp:b -> {VV : c<p ycmp> | true}) -> lq_tmp$db##16:(zcmp:a -> {VV : b<q zcmp> | true}) -> xcmp:a -> {VV : c<r xcmp> | true}"]]],[{"spanInfo":{"startLine":158,"endLine":158,"endCol":59,"startCol":57,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ds_d2TD","{lq_tmp$x##1834 : a | lq_tmp$x##1834 == ds_d2TD}"]]],[{"spanInfo":{"startLine":44,"endLine":45,"endCol":37,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792804964","{lq_tmp$x##919 : [(Data.Heap.Binominal.Tree a)] | Data.Heap.Binominal.sumSizeList lq_tmp$x##919 >= 0\n                                                  && len lq_tmp$x##919 >= 0\n                                                  && len lq_tmp$x##919 >= 0\n                                                  && lq_tmp$x##919 == ds_d2Wy}"]]],[{"spanInfo":{"startLine":267,"endLine":267,"endCol":59,"startCol":58,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["h","{lq_tmp$x##5883 : (Data.Heap.Binominal.Heap a) | 0 < len (Data.Heap.Binominal.unheap lq_tmp$x##5883)\n                                                 && Data.Heap.Binominal.heapSize lq_tmp$x##5883 >= 0\n                                                 && lq_tmp$x##5883 == h##a22R}"]]],[{"spanInfo":{"startLine":280,"endLine":280,"endCol":10,"startCol":8,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["t'","{VV##3780 : (Data.Heap.Binominal.Tree {VV##3777 : a^\"lq_tmp$x##3779\" | $k_##3778})^\"lq_tmp$x##3782\" | $k_##3781}"]]],[{"spanInfo":{"startLine":292,"endLine":292,"endCol":16,"startCol":10,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805035","{lq_tmp$x##4008 : [{lq_tmp$x##4023 : (Data.Heap.Binominal.Tree {lq_tmp$x##4022 : a^\"lq_tmp$x##4018\" | $k_##4017[VV##4016:=lq_tmp$x##4022][VV##4019:=lq_tmp$x##4023][lq_tmp$x##4012:=hd##a239][lq_tmp$x##4013:=ts'##a2GO]})^\"lq_tmp$x##4021\" | $k_##4020[VV##4019:=lq_tmp$x##4023][lq_tmp$x##4012:=hd##a239][lq_tmp$x##4013:=ts'##a2GO]}]<\\lq_tmp$x##4015 VV -> {lq_tmp$x##4023 : (Data.Heap.Binominal.Tree {lq_tmp$x##4022 : a^\"lq_tmp$x##4018\" \"lq_tmp$x##4026\" | $k_##4025[VV##4024:=lq_tmp$x##4022][VV##4027:=lq_tmp$x##4023][lq_tmp$x##4012:=hd##a239][lq_tmp$x##4013:=ts'##a2GO][lq_tmp$x##4030:=lq_tmp$x##4015]})^\"lq_tmp$x##4021\" \"lq_tmp$x##4029\" | $k_##4028[VV##4027:=lq_tmp$x##4023][lq_tmp$x##4012:=hd##a239][lq_tmp$x##4013:=ts'##a2GO][lq_tmp$x##4030:=lq_tmp$x##4015]}> | tail lq_tmp$x##4008 == ts'##a2GO\nhead lq_tmp$x##4008 == hd##a239\nlistElts lq_tmp$x##4008 == Set_cup (Set_sng hd##a239) (listElts ts'##a2GO)\nlen lq_tmp$x##4008 == 1 + len ts'##a2GO\nata.Heap.Binominal.mapSize lq_tmp$x##4008 == GHC.Types.: (Data.Heap.Binominal.size hd##a239) (Data.Heap.Binominal.mapSize ts'##a2GO)\nata.Heap.Binominal.sumPositives lq_tmp$x##4008 == hd##a239 + Data.Heap.Binominal.sumPositives ts'##a2GO\nata.Heap.Binominal.len lq_tmp$x##4008 == 1 + Data.Heap.Binominal.len ts'##a2GO\nata.Heap.Binominal.sumSizeList lq_tmp$x##4008 == Data.Heap.Binominal.sumPositives (Data.Heap.Binominal.mapSize (GHC.Types.: hd##a239 ts'##a2GO))}"]]],[{"spanInfo":{"startLine":314,"endLine":314,"endCol":58,"startCol":54,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ts1'","{lq_tmp$x##2929 : [(Data.Heap.Binominal.Tree a)] | Data.Heap.Binominal.sumSizeList lq_tmp$x##2929 >= 0\n                                                   && len lq_tmp$x##2929 >= 0\n                                                   && len lq_tmp$x##2929 >= 0\n                                                   && lq_tmp$x##2929 == ts1'##a23g}"]]],[{"spanInfo":{"startLine":282,"endLine":282,"endCol":9,"startCol":7,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["x'","{lq_tmp$x##3922 : a^\"lq_tmp$x##3921\" | $k_##3920[VV##3919:=lq_tmp$x##3922][lq_tmp$x##3918:=t'##a2GM]\n                                       && lq_tmp$x##3922 == Data.Heap.Binominal.root t'##a2GM}"]]],[{"spanInfo":{"startLine":147,"endLine":147,"endCol":18,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.assertBoundedTree","forall a b .\nlq_tmp$x##4335:a -> lq_tmp$x##4336:(Data.Heap.Binominal.Tree {VV : a | lq_tmp$x##4335 <= VV}) -> lq_tmp$x##4337:b -> b"]]],[{"spanInfo":{"startLine":147,"endLine":147,"endCol":24,"startCol":23,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["x","b"]]],[{"spanInfo":{"startLine":163,"endLine":163,"endCol":15,"startCol":14,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792804985","{lq_tmp$x##1681 : GHC.Types.Int | lq_tmp$x##1681 == lq_anf$##7205759403792804984##d2XC}"]]],[{"spanInfo":{"startLine":291,"endLine":291,"endCol":47,"startCol":46,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["x","{lq_tmp$x##3996 : a^\"lq_tmp$x##3909\" | $k_##3908[VV##3907:=lq_tmp$x##3996][lq_tmp$x##3906:=t##a22Y][lq_tmp$x##3910:=lq_tmp$x##3996]\n                                       && lq_tmp$x##3996 == Data.Heap.Binominal.root t##a22Y\n                                       && lq_tmp$x##3996 == x##a233}"]]],[{"spanInfo":{"startLine":187,"endLine":187,"endCol":45,"startCol":44,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["x","{lq_tmp$x##2416 : a | lq_tmp$x##2416 == x##a22l}"]]],[{"spanInfo":{"startLine":332,"endLine":332,"endCol":14,"startCol":8,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["minElt","{VV##6639 : a^\"lq_tmp$x##6641\" | $k_##6640}"]]],[{"spanInfo":{"startLine":274,"endLine":274,"endCol":46,"startCol":25,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805078","{lq_tmp$x##6350 : [(Data.Heap.Binominal.Tree {lq_tmp$x##6359 : a^\"lq_tmp$x##6358\" | $k_##6357[VV##6356:=lq_tmp$x##6359][lq_tmp$x##6353:=ts1##a2L1]})] | Data.Heap.Binominal.sumSizeList lq_tmp$x##6350 == Data.Heap.Binominal.sumSizeList ts1##a2L1}"]]],[{"spanInfo":{"startLine":205,"endLine":205,"endCol":40,"startCol":38,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["xs","{lq_tmp$x##4527 : [a] | Data.Heap.Binominal.sumSizeList lq_tmp$x##4527 >= 0\n                        && Data.Heap.Binominal.sumPositives lq_tmp$x##4527 >= 0\n                        && len lq_tmp$x##4527 >= 0\n                        && len lq_tmp$x##4527 >= 0\n                        && lq_tmp$x##4527 == xs##a22u}"]]],[{"spanInfo":{"startLine":143,"endLine":143,"endCol":15,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["x","{lq_tmp$x##4327 : a | lq_tmp$x##4327 == x##a222}"]]],[{"spanInfo":{"startLine":288,"endLine":288,"endCol":55,"startCol":52,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ts'","{lq_tmp$x##4171 : [{lq_tmp$x##4167 : (Data.Heap.Binominal.Tree {lq_tmp$x##4166 : a^\"lq_tmp$x##3835\" | $k_##3834[VV##3833:=lq_tmp$x##4166][VV##3836:=lq_tmp$x##4167][VV##3846:=lq_tmp$x##4171]})^\"lq_tmp$x##3838\" | $k_##3837[VV##3836:=lq_tmp$x##4167][VV##3846:=lq_tmp$x##4171]}]<\\lq_tmp$x##4172 VV -> {lq_tmp$x##4170 : (Data.Heap.Binominal.Tree {lq_tmp$x##4169 : a^\"lq_tmp$x##3842\" | $k_##3841[VV##3840:=lq_tmp$x##4169][VV##3843:=lq_tmp$x##4170][VV##3846:=lq_tmp$x##4171][lq_tmp$x##3839:=lq_tmp$x##4172][lq_tmp$x##4168:=lq_tmp$x##4172]})^\"lq_tmp$x##3845\" | $k_##3844[VV##3843:=lq_tmp$x##4170][VV##3846:=lq_tmp$x##4171][lq_tmp$x##3839:=lq_tmp$x##4172][lq_tmp$x##4168:=lq_tmp$x##4172]}>^\"lq_tmp$x##3848\" | $k_##3847[VV##3846:=lq_tmp$x##4171]\nata.Heap.Binominal.sumSizeList lq_tmp$x##4171 >= 0\nlen lq_tmp$x##4171 >= 0\nlen lq_tmp$x##4171 >= 0\nlq_tmp$x##4171 == ts'##a2GO}"]]],[{"spanInfo":{"startLine":155,"endLine":155,"endCol":61,"startCol":59,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["t2","(Data.Heap.Binominal.Tree a)"]]],[{"spanInfo":{"startLine":312,"endLine":312,"endCol":12,"startCol":5,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805013","{lq_tmp$x##2762 : GHC.Types.Int | lq_tmp$x##2762 >= 0\n                                  && lq_tmp$x##2762 == Data.Heap.Binominal.rank t1##a23f}"]]],[{"spanInfo":{"startLine":268,"endLine":268,"endCol":36,"startCol":33,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ts1","{lq_tmp$x##6069 : [(Data.Heap.Binominal.Tree {lq_tmp$x##6064 : a^\"lq_tmp$x##5920\" | $k_##5919[VV##5918:=lq_tmp$x##6064][lq_tmp$x##5894:=lq_anf$##7205759403792805071##d2Z1][lq_tmp$x##5908:=lq_anf$##7205759403792805070##d2Z0][lq_tmp$x##5912:=fix$36$$36$dOrd_a2Kr][lq_tmp$x##5913:=lq_anf$##7205759403792805068##d2YY][lq_tmp$x##5921:=lq_tmp$x##6064][lq_tmp$x##5932:=lq_tmp$x##6064][lq_tmp$x##5933:=lq_anf$##7205759403792805071##d2Z1][lq_tmp$x##5947:=lq_anf$##7205759403792805070##d2Z0][lq_tmp$x##5952:=lq_tmp$x##6064][lq_tmp$x##5953:=lq_anf$##7205759403792805071##d2Z1][lq_tmp$x##5967:=lq_anf$##7205759403792805070##d2Z0][lq_tmp$x##5996:=lq_tmp$x##6064][lq_tmp$x##5997:=lq_anf$##7205759403792805071##d2Z1][lq_tmp$x##5999:=lq_tmp$x##6064][lq_tmp$x##6000:=lq_anf$##7205759403792805071##d2Z1][lq_tmp$x##6017:=ds_d2Vy][lq_tmp$x##6018:=ds_d2Vz][lq_tmp$x##6025:=lq_tmp$x##6065][lq_tmp$x##6029:=lq_tmp$x##6069]\n                                                                                    && ds_d2Vz <= lq_tmp$x##6064})] | Data.Heap.Binominal.sumSizeList lq_tmp$x##6069 >= 0\n                                                                                                                      && len lq_tmp$x##6069 >= 0\n                                                                                                                      && len lq_tmp$x##6069 >= 0\n                                                                                                                      && lq_tmp$x##6069 == ts1##a2Kz}"]]],[{"spanInfo":{"startLine":285,"endLine":285,"endCol":12,"startCol":10,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["x'","{lq_tmp$x##3970 : a^\"lq_tmp$x##3921\" | $k_##3920[VV##3919:=lq_tmp$x##3970][lq_tmp$x##3918:=t'##a2GM][lq_tmp$x##3922:=lq_tmp$x##3970]\n                                       && lq_tmp$x##3970 == Data.Heap.Binominal.root t'##a2GM\n                                       && lq_tmp$x##3970 == x'##a234}"]]],[{"spanInfo":{"startLine":266,"endLine":266,"endCol":12,"startCol":11,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["h","{VV##0 : (Data.Heap.Binominal.Heap a) | 0 < len (Data.Heap.Binominal.unheap VV##0)}"]]],[{"spanInfo":{"startLine":313,"endLine":313,"endCol":22,"startCol":20,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["t1","{lq_tmp$x##2833 : (Data.Heap.Binominal.Tree a) | lq_tmp$x##2833 == t1##a23f}"]]],[{"spanInfo":{"startLine":191,"endLine":194,"endCol":47,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792804999","{lq_tmp$x##2161 : GHC.Types.Bool | (lq_tmp$x##2161 <=> lq_anf$##7205759403792804996##d2XO < lq_anf$##7205759403792804997##d2XP)\n                                   && lq_tmp$x##2161 == lq_anf$##7205759403792804998##d2XQ}"]]],[{"spanInfo":{"startLine":163,"endLine":163,"endCol":19,"startCol":17,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ds_d2TD","{lq_tmp$x##1790 : a | lq_tmp$x##1790 == ds_d2TD}"]]],[{"spanInfo":{"startLine":291,"endLine":291,"endCol":11,"startCol":9,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["hd","{lq_tmp$x##3984 : (Data.Heap.Binominal.Tree {lq_tmp$x##3994 : a^\"lq_tmp$x##3993\" | $k_##3992[VV##3991:=lq_tmp$x##3994][lq_tmp$x##3988:=x'##a234][lq_tmp$x##3989:=x##a233][lq_tmp$x##3990:=tBounded##a235]\n                                                                                   && x'##a234 <= lq_tmp$x##3994}) | Data.Heap.Binominal.size lq_tmp$x##3984 == Data.Heap.Binominal.size tBounded##a235}"]]],[{"spanInfo":{"startLine":158,"endLine":158,"endCol":73,"startCol":60,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["t2BoundedByX2","{lq_tmp$x##1836 : (Data.Heap.Binominal.Tree {lq_tmp$x##1835 : a^\"lq_tmp$x##1812\" | $k_##1811[VV##1810:=lq_tmp$x##1835][lq_tmp$x##1807:=lq_tmp$x##1836][lq_tmp$x##1809:=lq_anf$##7205759403792804981##d2Xz][lq_tmp$x##1813:=lq_tmp$x##1835]\n                                                                                   && Data.Heap.Binominal.root lq_anf$##7205759403792804981##d2Xz <= lq_tmp$x##1835}) | Data.Heap.Binominal.size lq_tmp$x##1836 == Data.Heap.Binominal.size lq_anf$##7205759403792804981##d2Xz\n                                                                                                                                                                        && lq_tmp$x##1836 == t2BoundedByX2##a22f}"]]],[{"spanInfo":{"startLine":253,"endLine":253,"endCol":46,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805058","{lq_tmp$x##5051 : [{lq_tmp$x##5060 : (Data.Heap.Binominal.Tree {lq_tmp$x##5059 : a^\"lq_tmp$x##5055\" | $k_##5054[VV##5053:=lq_tmp$x##5059][VV##5056:=lq_tmp$x##5060]})^\"lq_tmp$x##5058\" | $k_##5057[VV##5056:=lq_tmp$x##5060]}]<\\lq_tmp$x##5052 VV -> {lq_tmp$x##5060 : (Data.Heap.Binominal.Tree {lq_tmp$x##5059 : a^\"lq_tmp$x##5055\" \"lq_tmp$x##5063\" | $k_##5062[VV##5061:=lq_tmp$x##5059][VV##5064:=lq_tmp$x##5060][lq_tmp$x##5067:=lq_tmp$x##5052]})^\"lq_tmp$x##5058\" \"lq_tmp$x##5066\" | $k_##5065[VV##5064:=lq_tmp$x##5060][lq_tmp$x##5067:=lq_tmp$x##5052]}> | Set_emp (listElts lq_tmp$x##5051)\nlen lq_tmp$x##5051 == 0\nata.Heap.Binominal.mapSize lq_tmp$x##5051 == GHC.Types.[]\nata.Heap.Binominal.sumPositives lq_tmp$x##5051 == 0\nata.Heap.Binominal.len lq_tmp$x##5051 == 0\nata.Heap.Binominal.sumSizeList lq_tmp$x##5051 == 0}"]]],[{"spanInfo":{"startLine":156,"endLine":156,"endCol":7,"startCol":5,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ds_d2Tz","{lq_tmp$x##1634 : a | lq_tmp$x##1634 == ds_d2Tz}"]]],[{"spanInfo":{"startLine":284,"endLine":284,"endCol":49,"startCol":19,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[[null,"{lq_tmp$x##3942 : (Data.Heap.Binominal.Tree {lq_tmp$x##3948 : a^\"lq_tmp$x##3947\" | $k_##3946[VV##3945:=lq_tmp$x##3948][lq_tmp$x##3944:=t'##a2GM]\n                                                                                   && Data.Heap.Binominal.root t'##a2GM <= lq_tmp$x##3948}) | Data.Heap.Binominal.size lq_tmp$x##3942 == Data.Heap.Binominal.size t'##a2GM}"]]],[{"spanInfo":{"startLine":158,"endLine":158,"endCol":56,"startCol":54,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ds_d2Tz","{lq_tmp$x##1833 : a | lq_tmp$x##1833 == ds_d2Tz}"]]],[{"spanInfo":{"startLine":285,"endLine":285,"endCol":7,"startCol":6,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["x","{lq_tmp$x##3969 : a^\"lq_tmp$x##3909\" | $k_##3908[VV##3907:=lq_tmp$x##3969][lq_tmp$x##3906:=t##a22Y][lq_tmp$x##3910:=lq_tmp$x##3969]\n                                       && lq_tmp$x##3969 == Data.Heap.Binominal.root t##a22Y\n                                       && lq_tmp$x##3969 == x##a233}"]]],[{"spanInfo":{"startLine":247,"endLine":247,"endCol":8,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.minimum","forall a .\n(GHC.Classes.Ord<[]> a) =>\nlq_tmp$x##5271:{VV##0 : (Data.Heap.Binominal.Heap a) | 0 < len (Data.Heap.Binominal.unheap VV##0)} -> a"]]],[{"spanInfo":{"startLine":273,"endLine":273,"endCol":65,"startCol":36,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805075","{lq_tmp$x##6204 : ((Data.Heap.Binominal.Tree {lq_tmp$x##6217 : a^\"lq_tmp$x##6216\" | $k_##6215[VV##6214:=lq_tmp$x##6217][lq_tmp$x##6208:=fix$36$$36$dOrd_a2KR][lq_tmp$x##6209:=lq_anf$##7205759403792805074##d2Z4]}), [(Data.Heap.Binominal.Tree {lq_tmp$x##6217 : a^\"lq_tmp$x##6216\" | $k_##6215[VV##6214:=lq_tmp$x##6217][lq_tmp$x##6208:=fix$36$$36$dOrd_a2KR][lq_tmp$x##6209:=lq_anf$##7205759403792805074##d2Z4]\n                                                                                                                                                                                                                                                                                       && Data.Heap.Binominal.root (fst lq_tmp$x##6204) <= lq_tmp$x##6217})]) | Data.Heap.Binominal.size (fst lq_tmp$x##6204) + Data.Heap.Binominal.sumSizeList (snd lq_tmp$x##6204) == Data.Heap.Binominal.sumSizeList lq_anf$##7205759403792805074##d2Z4}"]]],[{"spanInfo":{"startLine":273,"endLine":273,"endCol":64,"startCol":63,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["h","{lq_tmp$x##6179 : (Data.Heap.Binominal.Heap a) | 0 < len (Data.Heap.Binominal.unheap lq_tmp$x##6179)\n                                                 && Data.Heap.Binominal.heapSize lq_tmp$x##6179 >= 0\n                                                 && lq_tmp$x##6179 == h##a22U}"]]],[{"spanInfo":{"startLine":191,"endLine":191,"endCol":19,"startCol":16,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792804995","{lq_tmp$x##2019 : [{lq_tmp$x##2028 : (Data.Heap.Binominal.Tree {lq_tmp$x##2027 : a^\"lq_tmp$x##2023\" | $k_##2022[VV##2021:=lq_tmp$x##2027][VV##2024:=lq_tmp$x##2028]})^\"lq_tmp$x##2026\" | $k_##2025[VV##2024:=lq_tmp$x##2028]}]<\\lq_tmp$x##2020 VV -> {lq_tmp$x##2028 : (Data.Heap.Binominal.Tree {lq_tmp$x##2027 : a^\"lq_tmp$x##2023\" \"lq_tmp$x##2031\" | $k_##2030[VV##2029:=lq_tmp$x##2027][VV##2032:=lq_tmp$x##2028][lq_tmp$x##2035:=lq_tmp$x##2020]})^\"lq_tmp$x##2026\" \"lq_tmp$x##2034\" | $k_##2033[VV##2032:=lq_tmp$x##2028][lq_tmp$x##2035:=lq_tmp$x##2020]}> | Set_emp (listElts lq_tmp$x##2019)\nlen lq_tmp$x##2019 == 0\nata.Heap.Binominal.mapSize lq_tmp$x##2019 == GHC.Types.[]\nata.Heap.Binominal.sumPositives lq_tmp$x##2019 == 0\nata.Heap.Binominal.len lq_tmp$x##2019 == 0\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     && Data.Heap.Binominal.sumSizeList lq_tmp$x##2019 == 0}"]]],[{"spanInfo":{"startLine":159,"endLine":159,"endCol":38,"startCol":35,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ds_d2TA","{lq_tmp$x##1903 : [(Data.Heap.Binominal.Tree {lq_tmp$x##1898 : a | ds_d2Tz <= lq_tmp$x##1898})] | Data.Heap.Binominal.sumSizeList lq_tmp$x##1903 >= 0\n                                                                                                  && len lq_tmp$x##1903 >= 0\n                                                                                                  && len lq_tmp$x##1903 >= 0\n                                                                                                  && lq_tmp$x##1903 == ds_d2TA}"]]],[{"spanInfo":{"startLine":157,"endLine":157,"endCol":22,"startCol":9,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["t2BoundedByX2","{lq_tmp$x##1807 : (Data.Heap.Binominal.Tree {lq_tmp$x##1813 : a^\"lq_tmp$x##1812\" | $k_##1811[VV##1810:=lq_tmp$x##1813][lq_tmp$x##1809:=lq_anf$##7205759403792804981##d2Xz]\n                                                                                   && Data.Heap.Binominal.root lq_anf$##7205759403792804981##d2Xz <= lq_tmp$x##1813}) | Data.Heap.Binominal.size lq_tmp$x##1807 == Data.Heap.Binominal.size lq_anf$##7205759403792804981##d2Xz}"]]],[{"spanInfo":{"startLine":313,"endLine":313,"endCol":22,"startCol":5,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805019","{lq_tmp$x##2839 : GHC.Types.Bool | lq_tmp$x##2839 <=> lq_anf$##7205759403792805017##d2Y9 < lq_anf$##7205759403792805018##d2Ya}"]]],[{"spanInfo":{"startLine":247,"endLine":247,"endCol":51,"startCol":24,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805066","xcmp:{lq_tmp$x##5468 : (Data.Heap.Binominal.Heap {lq_tmp$x##5467 : a^\"lq_tmp$x##5463\" | $k_##5462[VV##5461:=lq_tmp$x##5467][VV##5464:=lq_tmp$x##5468][lq_tmp$db##14:=lq_anf$##7205759403792805064##d2YU][lq_tmp$db##16:=lq_anf$##7205759403792805065##d2YV]})^\"lq_tmp$x##5466\" | $k_##5465[VV##5464:=lq_tmp$x##5468][lq_tmp$db##14:=lq_anf$##7205759403792805064##d2YU][lq_tmp$db##16:=lq_anf$##7205759403792805065##d2YV]} -> {lq_tmp$x##5460 : ({lq_tmp$x##5446 : (Data.Heap.Binominal.Tree {lq_tmp$x##5445 : a^\"lq_tmp$x##5405\" \"lq_tmp$x##5471\" | $k_##5404[VV##5403:=lq_tmp$x##5445][VV##5406:=lq_tmp$x##5446][VV##5442:=lq_tmp$x##5460][VV##5469:=lq_tmp$x##5445][VV##5472:=lq_tmp$x##5446][VV##5475:=lq_tmp$x##5447][VV##5478:=lq_tmp$x##5448][VV##5482:=lq_tmp$x##5450][VV##5485:=lq_tmp$x##5451][VV##5488:=lq_tmp$x##5452][VV##5492:=lq_tmp$x##5454][VV##5495:=lq_tmp$x##5455][VV##5499:=lq_tmp$x##5457][VV##5502:=lq_tmp$x##5458][VV##5505:=lq_tmp$x##5459][VV##5508:=lq_tmp$x##5460][lq_tmp$db##14:=lq_anf$##7205759403792805064##d2YU][lq_tmp$db##16:=lq_anf$##7205759403792805065##d2YV]\nk_##5470[VV##5469:=lq_tmp$x##5445][VV##5472:=lq_tmp$x##5446][VV##5475:=lq_tmp$x##5447][VV##5478:=lq_tmp$x##5448][VV##5482:=lq_tmp$x##5450][VV##5485:=lq_tmp$x##5451][VV##5488:=lq_tmp$x##5452][VV##5492:=lq_tmp$x##5454][VV##5495:=lq_tmp$x##5455][VV##5499:=lq_tmp$x##5457][VV##5502:=lq_tmp$x##5458][VV##5505:=lq_tmp$x##5459][VV##5508:=lq_tmp$x##5460][lq_tmp$db##14:=lq_anf$##7205759403792805064##d2YU][lq_tmp$db##16:=lq_anf$##7205759403792805065##d2YV][lq_tmp$x##5511:=xcmp]})^\"lq_tmp$x##5408\" \"lq_tmp$x##5474\" | $k_##5407[VV##5406:=lq_tmp$x##5446][VV##5442:=lq_tmp$x##5460][VV##5469:=lq_tmp$x##5445][VV##5472:=lq_tmp$x##5446][VV##5475:=lq_tmp$x##5447][VV##5478:=lq_tmp$x##5448][VV##5482:=lq_tmp$x##5450][VV##5485:=lq_tmp$x##5451][VV##5488:=lq_tmp$x##5452][VV##5492:=lq_tmp$x##5454][VV##5495:=lq_tmp$x##5455][VV##5499:=lq_tmp$x##5457][VV##5502:=lq_tmp$x##5458][VV##5505:=lq_tmp$x##5459][VV##5508:=lq_tmp$x##5460][lq_tmp$db##14:=lq_anf$##7205759403792805064##d2YU][lq_tmp$db##16:=lq_anf$##7205759403792805065##d2YV]\nk_##5473[VV##5469:=lq_tmp$x##5445][VV##5472:=lq_tmp$x##5446][VV##5475:=lq_tmp$x##5447][VV##5478:=lq_tmp$x##5448][VV##5482:=lq_tmp$x##5450][VV##5485:=lq_tmp$x##5451][VV##5488:=lq_tmp$x##5452][VV##5492:=lq_tmp$x##5454][VV##5495:=lq_tmp$x##5455][VV##5499:=lq_tmp$x##5457][VV##5502:=lq_tmp$x##5458][VV##5505:=lq_tmp$x##5459][VV##5508:=lq_tmp$x##5460][lq_tmp$db##14:=lq_anf$##7205759403792805064##d2YU][lq_tmp$db##16:=lq_anf$##7205759403792805065##d2YV][lq_tmp$x##5511:=xcmp]}, {lq_tmp$x##5452 : [{lq_tmp$x##5448 : (Data.Heap.Binominal.Tree {lq_tmp$x##5447 : a^\"lq_tmp$x##5411\" \"lq_tmp$x##5477\" | $k_##5410[VV##5409:=lq_tmp$x##5447][VV##5412:=lq_tmp$x##5448][VV##5422:=lq_tmp$x##5452][VV##5442:=lq_tmp$x##5460][VV##5469:=lq_tmp$x##5445][VV##5472:=lq_tmp$x##5446][VV##5475:=lq_tmp$x##5447][VV##5478:=lq_tmp$x##5448][VV##5482:=lq_tmp$x##5450][VV##5485:=lq_tmp$x##5451][VV##5488:=lq_tmp$x##5452][VV##5492:=lq_tmp$x##5454][VV##5495:=lq_tmp$x##5455][VV##5499:=lq_tmp$x##5457][VV##5502:=lq_tmp$x##5458][VV##5505:=lq_tmp$x##5459][VV##5508:=lq_tmp$x##5460][lq_tmp$db##14:=lq_anf$##7205759403792805064##d2YU][lq_tmp$db##16:=lq_anf$##7205759403792805065##d2YV]\nk_##5476[VV##5469:=lq_tmp$x##5445][VV##5472:=lq_tmp$x##5446][VV##5475:=lq_tmp$x##5447][VV##5478:=lq_tmp$x##5448][VV##5482:=lq_tmp$x##5450][VV##5485:=lq_tmp$x##5451][VV##5488:=lq_tmp$x##5452][VV##5492:=lq_tmp$x##5454][VV##5495:=lq_tmp$x##5455][VV##5499:=lq_tmp$x##5457][VV##5502:=lq_tmp$x##5458][VV##5505:=lq_tmp$x##5459][VV##5508:=lq_tmp$x##5460][lq_tmp$db##14:=lq_anf$##7205759403792805064##d2YU][lq_tmp$db##16:=lq_anf$##7205759403792805065##d2YV][lq_tmp$x##5511:=xcmp]})^\"lq_tmp$x##5414\" \"lq_tmp$x##5480\" | $k_##5413[VV##5412:=lq_tmp$x##5448][VV##5422:=lq_tmp$x##5452][VV##5442:=lq_tmp$x##5460][VV##5469:=lq_tmp$x##5445][VV##5472:=lq_tmp$x##5446][VV##5475:=lq_tmp$x##5447][VV##5478:=lq_tmp$x##5448][VV##5482:=lq_tmp$x##5450][VV##5485:=lq_tmp$x##5451][VV##5488:=lq_tmp$x##5452][VV##5492:=lq_tmp$x##5454][VV##5495:=lq_tmp$x##5455][VV##5499:=lq_tmp$x##5457][VV##5502:=lq_tmp$x##5458][VV##5505:=lq_tmp$x##5459][VV##5508:=lq_tmp$x##5460][lq_tmp$db##14:=lq_anf$##7205759403792805064##d2YU][lq_tmp$db##16:=lq_anf$##7205759403792805065##d2YV]\nk_##5479[VV##5469:=lq_tmp$x##5445][VV##5472:=lq_tmp$x##5446][VV##5475:=lq_tmp$x##5447][VV##5478:=lq_tmp$x##5448][VV##5482:=lq_tmp$x##5450][VV##5485:=lq_tmp$x##5451][VV##5488:=lq_tmp$x##5452][VV##5492:=lq_tmp$x##5454][VV##5495:=lq_tmp$x##5455][VV##5499:=lq_tmp$x##5457][VV##5502:=lq_tmp$x##5458][VV##5505:=lq_tmp$x##5459][VV##5508:=lq_tmp$x##5460][lq_tmp$db##14:=lq_anf$##7205759403792805064##d2YU][lq_tmp$db##16:=lq_anf$##7205759403792805065##d2YV][lq_tmp$x##5511:=xcmp]}]<\\lq_tmp$x##5449 VV -> {lq_tmp$x##5451 : (Data.Heap.Binominal.Tree {lq_tmp$x##5450 : a^\"lq_tmp$x##5418\" \"lq_tmp$x##5484\" | $k_##5417[VV##5416:=lq_tmp$x##5450][VV##5419:=lq_tmp$x##5451][VV##5422:=lq_tmp$x##5452][VV##5442:=lq_tmp$x##5460][VV##5469:=lq_tmp$x##5445][VV##5472:=lq_tmp$x##5446][VV##5475:=lq_tmp$x##5447][VV##5478:=lq_tmp$x##5448][VV##5482:=lq_tmp$x##5450][VV##5485:=lq_tmp$x##5451][VV##5488:=lq_tmp$x##5452][VV##5492:=lq_tmp$x##5454][VV##5495:=lq_tmp$x##5455][VV##5499:=lq_tmp$x##5457][VV##5502:=lq_tmp$x##5458][VV##5505:=lq_tmp$x##5459][VV##5508:=lq_tmp$x##5460][lq_tmp$db##14:=lq_anf$##7205759403792805064##d2YU][lq_tmp$db##16:=lq_anf$##7205759403792805065##d2YV][lq_tmp$x##5415:=lq_tmp$x##5449]\nk_##5483[VV##5469:=lq_tmp$x##5445][VV##5472:=lq_tmp$x##5446][VV##5475:=lq_tmp$x##5447][VV##5478:=lq_tmp$x##5448][VV##5482:=lq_tmp$x##5450][VV##5485:=lq_tmp$x##5451][VV##5488:=lq_tmp$x##5452][VV##5492:=lq_tmp$x##5454][VV##5495:=lq_tmp$x##5455][VV##5499:=lq_tmp$x##5457][VV##5502:=lq_tmp$x##5458][VV##5505:=lq_tmp$x##5459][VV##5508:=lq_tmp$x##5460][lq_tmp$db##14:=lq_anf$##7205759403792805064##d2YU][lq_tmp$db##16:=lq_anf$##7205759403792805065##d2YV][lq_tmp$x##5481:=lq_tmp$x##5449][lq_tmp$x##5511:=xcmp]})^\"lq_tmp$x##5421\" \"lq_tmp$x##5487\" | $k_##5420[VV##5419:=lq_tmp$x##5451][VV##5422:=lq_tmp$x##5452][VV##5442:=lq_tmp$x##5460][VV##5469:=lq_tmp$x##5445][VV##5472:=lq_tmp$x##5446][VV##5475:=lq_tmp$x##5447][VV##5478:=lq_tmp$x##5448][VV##5482:=lq_tmp$x##5450][VV##5485:=lq_tmp$x##5451][VV##5488:=lq_tmp$x##5452][VV##5492:=lq_tmp$x##5454][VV##5495:=lq_tmp$x##5455][VV##5499:=lq_tmp$x##5457][VV##5502:=lq_tmp$x##5458][VV##5505:=lq_tmp$x##5459][VV##5508:=lq_tmp$x##5460][lq_tmp$db##14:=lq_anf$##7205759403792805064##d2YU][lq_tmp$db##16:=lq_anf$##7205759403792805065##d2YV][lq_tmp$x##5415:=lq_tmp$x##5449]\nk_##5486[VV##5469:=lq_tmp$x##5445][VV##5472:=lq_tmp$x##5446][VV##5475:=lq_tmp$x##5447][VV##5478:=lq_tmp$x##5448][VV##5482:=lq_tmp$x##5450][VV##5485:=lq_tmp$x##5451][VV##5488:=lq_tmp$x##5452][VV##5492:=lq_tmp$x##5454][VV##5495:=lq_tmp$x##5455][VV##5499:=lq_tmp$x##5457][VV##5502:=lq_tmp$x##5458][VV##5505:=lq_tmp$x##5459][VV##5508:=lq_tmp$x##5460][lq_tmp$db##14:=lq_anf$##7205759403792805064##d2YU][lq_tmp$db##16:=lq_anf$##7205759403792805065##d2YV][lq_tmp$x##5481:=lq_tmp$x##5449][lq_tmp$x##5511:=xcmp]}>^\"lq_tmp$x##5424\" \"lq_tmp$x##5490\" | $k_##5423[VV##5422:=lq_tmp$x##5452][VV##5442:=lq_tmp$x##5460][VV##5469:=lq_tmp$x##5445][VV##5472:=lq_tmp$x##5446][VV##5475:=lq_tmp$x##5447][VV##5478:=lq_tmp$x##5448][VV##5482:=lq_tmp$x##5450][VV##5485:=lq_tmp$x##5451][VV##5488:=lq_tmp$x##5452][VV##5492:=lq_tmp$x##5454][VV##5495:=lq_tmp$x##5455][VV##5499:=lq_tmp$x##5457][VV##5502:=lq_tmp$x##5458][VV##5505:=lq_tmp$x##5459][VV##5508:=lq_tmp$x##5460][lq_tmp$db##14:=lq_anf$##7205759403792805064##d2YU][lq_tmp$db##16:=lq_anf$##7205759403792805065##d2YV]\nk_##5489[VV##5469:=lq_tmp$x##5445][VV##5472:=lq_tmp$x##5446][VV##5475:=lq_tmp$x##5447][VV##5478:=lq_tmp$x##5448][VV##5482:=lq_tmp$x##5450][VV##5485:=lq_tmp$x##5451][VV##5488:=lq_tmp$x##5452][VV##5492:=lq_tmp$x##5454][VV##5495:=lq_tmp$x##5455][VV##5499:=lq_tmp$x##5457][VV##5502:=lq_tmp$x##5458][VV##5505:=lq_tmp$x##5459][VV##5508:=lq_tmp$x##5460][lq_tmp$db##14:=lq_anf$##7205759403792805064##d2YU][lq_tmp$db##16:=lq_anf$##7205759403792805065##d2YV][lq_tmp$x##5511:=xcmp]})<\\lq_tmp$x##5453 VV -> {lq_tmp$x##5459 : [{lq_tmp$x##5455 : (Data.Heap.Binominal.Tree {lq_tmp$x##5454 : a^\"lq_tmp$x##5428\" \"lq_tmp$x##5494\" | $k_##5427[VV##5426:=lq_tmp$x##5454][VV##5429:=lq_tmp$x##5455][VV##5439:=lq_tmp$x##5459][VV##5442:=lq_tmp$x##5460][VV##5469:=lq_tmp$x##5445][VV##5472:=lq_tmp$x##5446][VV##5475:=lq_tmp$x##5447][VV##5478:=lq_tmp$x##5448][VV##5482:=lq_tmp$x##5450][VV##5485:=lq_tmp$x##5451][VV##5488:=lq_tmp$x##5452][VV##5492:=lq_tmp$x##5454][VV##5495:=lq_tmp$x##5455][VV##5499:=lq_tmp$x##5457][VV##5502:=lq_tmp$x##5458][VV##5505:=lq_tmp$x##5459][VV##5508:=lq_tmp$x##5460][lq_tmp$db##14:=lq_anf$##7205759403792805064##d2YU][lq_tmp$db##16:=lq_anf$##7205759403792805065##d2YV][lq_tmp$x##5425:=lq_tmp$x##5453]\nk_##5493[VV##5469:=lq_tmp$x##5445][VV##5472:=lq_tmp$x##5446][VV##5475:=lq_tmp$x##5447][VV##5478:=lq_tmp$x##5448][VV##5482:=lq_tmp$x##5450][VV##5485:=lq_tmp$x##5451][VV##5488:=lq_tmp$x##5452][VV##5492:=lq_tmp$x##5454][VV##5495:=lq_tmp$x##5455][VV##5499:=lq_tmp$x##5457][VV##5502:=lq_tmp$x##5458][VV##5505:=lq_tmp$x##5459][VV##5508:=lq_tmp$x##5460][lq_tmp$db##14:=lq_anf$##7205759403792805064##d2YU][lq_tmp$db##16:=lq_anf$##7205759403792805065##d2YV][lq_tmp$x##5511:=xcmp]})^\"lq_tmp$x##5431\" \"lq_tmp$x##5497\" | $k_##5430[VV##5429:=lq_tmp$x##5455][VV##5439:=lq_tmp$x##5459][VV##5442:=lq_tmp$x##5460][VV##5469:=lq_tmp$x##5445][VV##5472:=lq_tmp$x##5446][VV##5475:=lq_tmp$x##5447][VV##5478:=lq_tmp$x##5448][VV##5482:=lq_tmp$x##5450][VV##5485:=lq_tmp$x##5451][VV##5488:=lq_tmp$x##5452][VV##5492:=lq_tmp$x##5454][VV##5495:=lq_tmp$x##5455][VV##5499:=lq_tmp$x##5457][VV##5502:=lq_tmp$x##5458][VV##5505:=lq_tmp$x##5459][VV##5508:=lq_tmp$x##5460][lq_tmp$db##14:=lq_anf$##7205759403792805064##d2YU][lq_tmp$db##16:=lq_anf$##7205759403792805065##d2YV][lq_tmp$x##5425:=lq_tmp$x##5453]\nk_##5496[VV##5469:=lq_tmp$x##5445][VV##5472:=lq_tmp$x##5446][VV##5475:=lq_tmp$x##5447][VV##5478:=lq_tmp$x##5448][VV##5482:=lq_tmp$x##5450][VV##5485:=lq_tmp$x##5451][VV##5488:=lq_tmp$x##5452][VV##5492:=lq_tmp$x##5454][VV##5495:=lq_tmp$x##5455][VV##5499:=lq_tmp$x##5457][VV##5502:=lq_tmp$x##5458][VV##5505:=lq_tmp$x##5459][VV##5508:=lq_tmp$x##5460][lq_tmp$db##14:=lq_anf$##7205759403792805064##d2YU][lq_tmp$db##16:=lq_anf$##7205759403792805065##d2YV][lq_tmp$x##5511:=xcmp]}]<\\lq_tmp$x##5456 VV -> {lq_tmp$x##5458 : (Data.Heap.Binominal.Tree {lq_tmp$x##5457 : a^\"lq_tmp$x##5435\" \"lq_tmp$x##5501\" | $k_##5434[VV##5433:=lq_tmp$x##5457][VV##5436:=lq_tmp$x##5458][VV##5439:=lq_tmp$x##5459][VV##5442:=lq_tmp$x##5460][VV##5469:=lq_tmp$x##5445][VV##5472:=lq_tmp$x##5446][VV##5475:=lq_tmp$x##5447][VV##5478:=lq_tmp$x##5448][VV##5482:=lq_tmp$x##5450][VV##5485:=lq_tmp$x##5451][VV##5488:=lq_tmp$x##5452][VV##5492:=lq_tmp$x##5454][VV##5495:=lq_tmp$x##5455][VV##5499:=lq_tmp$x##5457][VV##5502:=lq_tmp$x##5458][VV##5505:=lq_tmp$x##5459][VV##5508:=lq_tmp$x##5460][lq_tmp$db##14:=lq_anf$##7205759403792805064##d2YU][lq_tmp$db##16:=lq_anf$##7205759403792805065##d2YV][lq_tmp$x##5425:=lq_tmp$x##5453][lq_tmp$x##5432:=lq_tmp$x##5456]\nk_##5500[VV##5469:=lq_tmp$x##5445][VV##5472:=lq_tmp$x##5446][VV##5475:=lq_tmp$x##5447][VV##5478:=lq_tmp$x##5448][VV##5482:=lq_tmp$x##5450][VV##5485:=lq_tmp$x##5451][VV##5488:=lq_tmp$x##5452][VV##5492:=lq_tmp$x##5454][VV##5495:=lq_tmp$x##5455][VV##5499:=lq_tmp$x##5457][VV##5502:=lq_tmp$x##5458][VV##5505:=lq_tmp$x##5459][VV##5508:=lq_tmp$x##5460][lq_tmp$db##14:=lq_anf$##7205759403792805064##d2YU][lq_tmp$db##16:=lq_anf$##7205759403792805065##d2YV][lq_tmp$x##5498:=lq_tmp$x##5456][lq_tmp$x##5511:=xcmp]})^\"lq_tmp$x##5438\" \"lq_tmp$x##5504\" | $k_##5437[VV##5436:=lq_tmp$x##5458][VV##5439:=lq_tmp$x##5459][VV##5442:=lq_tmp$x##5460][VV##5469:=lq_tmp$x##5445][VV##5472:=lq_tmp$x##5446][VV##5475:=lq_tmp$x##5447][VV##5478:=lq_tmp$x##5448][VV##5482:=lq_tmp$x##5450][VV##5485:=lq_tmp$x##5451][VV##5488:=lq_tmp$x##5452][VV##5492:=lq_tmp$x##5454][VV##5495:=lq_tmp$x##5455][VV##5499:=lq_tmp$x##5457][VV##5502:=lq_tmp$x##5458][VV##5505:=lq_tmp$x##5459][VV##5508:=lq_tmp$x##5460][lq_tmp$db##14:=lq_anf$##7205759403792805064##d2YU][lq_tmp$db##16:=lq_anf$##7205759403792805065##d2YV][lq_tmp$x##5425:=lq_tmp$x##5453][lq_tmp$x##5432:=lq_tmp$x##5456]\nk_##5503[VV##5469:=lq_tmp$x##5445][VV##5472:=lq_tmp$x##5446][VV##5475:=lq_tmp$x##5447][VV##5478:=lq_tmp$x##5448][VV##5482:=lq_tmp$x##5450][VV##5485:=lq_tmp$x##5451][VV##5488:=lq_tmp$x##5452][VV##5492:=lq_tmp$x##5454][VV##5495:=lq_tmp$x##5455][VV##5499:=lq_tmp$x##5457][VV##5502:=lq_tmp$x##5458][VV##5505:=lq_tmp$x##5459][VV##5508:=lq_tmp$x##5460][lq_tmp$db##14:=lq_anf$##7205759403792805064##d2YU][lq_tmp$db##16:=lq_anf$##7205759403792805065##d2YV][lq_tmp$x##5498:=lq_tmp$x##5456][lq_tmp$x##5511:=xcmp]}>^\"lq_tmp$x##5441\" \"lq_tmp$x##5507\" | $k_##5440[VV##5439:=lq_tmp$x##5459][VV##5442:=lq_tmp$x##5460][VV##5469:=lq_tmp$x##5445][VV##5472:=lq_tmp$x##5446][VV##5475:=lq_tmp$x##5447][VV##5478:=lq_tmp$x##5448][VV##5482:=lq_tmp$x##5450][VV##5485:=lq_tmp$x##5451][VV##5488:=lq_tmp$x##5452][VV##5492:=lq_tmp$x##5454][VV##5495:=lq_tmp$x##5455][VV##5499:=lq_tmp$x##5457][VV##5502:=lq_tmp$x##5458][VV##5505:=lq_tmp$x##5459][VV##5508:=lq_tmp$x##5460][lq_tmp$db##14:=lq_anf$##7205759403792805064##d2YU][lq_tmp$db##16:=lq_anf$##7205759403792805065##d2YV][lq_tmp$x##5425:=lq_tmp$x##5453]\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         && $k_##5506[VV##5469:=lq_tmp$x##5445][VV##5472:=lq_tmp$x##5446][VV##5475:=lq_tmp$x##5447][VV##5478:=lq_tmp$x##5448][VV##5482:=lq_tmp$x##5450][VV##5485:=lq_tmp$x##5451][VV##5488:=lq_tmp$x##5452][VV##5492:=lq_tmp$x##5454][VV##5495:=lq_tmp$x##5455][VV##5499:=lq_tmp$x##5457][VV##5502:=lq_tmp$x##5458][VV##5505:=lq_tmp$x##5459][VV##5508:=lq_tmp$x##5460][lq_tmp$db##14:=lq_anf$##7205759403792805064##d2YU][lq_tmp$db##16:=lq_anf$##7205759403792805065##d2YV][lq_tmp$x##5511:=xcmp]}>^\"lq_tmp$x##5444\" \"lq_tmp$x##5510\" | $k_##5443[VV##5442:=lq_tmp$x##5460][lq_tmp$db##14:=lq_anf$##7205759403792805064##d2YU][lq_tmp$db##16:=lq_anf$##7205759403792805065##d2YV]\nk_##5509[VV##5508:=lq_tmp$x##5460][lq_tmp$db##14:=lq_anf$##7205759403792805064##d2YU][lq_tmp$db##16:=lq_anf$##7205759403792805065##d2YV][lq_tmp$x##5511:=xcmp]}"]]],[{"spanInfo":{"startLine":51,"endLine":51,"endCol":42,"startCol":27,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792804969","{lq_tmp$x##1144 : GHC.Types.Int | lq_tmp$x##1144 == Data.Heap.Binominal.sumPositives xs##a1ZV\n                                  && lq_tmp$x##1144 >= 0\n                                  && len xs##a1ZV <= lq_tmp$x##1144}"]]],[{"spanInfo":{"startLine":199,"endLine":200,"endCol":24,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805051","{lq_tmp$x##4739 : [a] | Data.Heap.Binominal.sumSizeList lq_tmp$x##4739 >= 0\n                        && Data.Heap.Binominal.sumPositives lq_tmp$x##4739 >= 0\n                        && len lq_tmp$x##4739 >= 0\n                        && lq_tmp$x##4739 == ds_d2SC}"]]],[{"spanInfo":{"startLine":147,"endLine":147,"endCol":28,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["x","{lq_tmp$x##4341 : b | lq_tmp$x##4341 == x##a223}"]]],[{"spanInfo":{"startLine":171,"endLine":171,"endCol":20,"startCol":10,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792804976","{lq_tmp$x##1360 : GHC.Types.Int | lq_tmp$x##1360 == Data.Heap.Binominal.heapSize h##a22j\n                                  && lq_tmp$x##1360 >= 0}"]]],[{"spanInfo":{"startLine":282,"endLine":282,"endCol":19,"startCol":12,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[[null,"{lq_tmp$x##3922 : a^\"lq_tmp$x##3921\" | $k_##3920[VV##3919:=lq_tmp$x##3922][lq_tmp$x##3918:=t'##a2GM]\n                                       && lq_tmp$x##3922 == Data.Heap.Binominal.root t'##a2GM}"]]],[{"spanInfo":{"startLine":333,"endLine":333,"endCol":9,"startCol":3,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["minElt","{lq_tmp$x##6767 : a^\"lq_tmp$x##6641\" | $k_##6640[VV##6639:=lq_tmp$x##6767]\n                                       && lq_tmp$x##6767 == minElt##a2Ls}"]]],[{"spanInfo":{"startLine":194,"endLine":194,"endCol":47,"startCol":24,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.insert'","forall a .\n(GHC.Classes.Ord<[]> a) =>\nlq_tmp$x##1982:(Data.Heap.Binominal.Tree a) -> lq_tmp$x##1983:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | Data.Heap.Binominal.sumSizeList v == Data.Heap.Binominal.size lq_tmp$x##1982 + Data.Heap.Binominal.sumSizeList lq_tmp$x##1983}"]]],[{"spanInfo":{"startLine":56,"endLine":56,"endCol":19,"startCol":18,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792804972","{lq_tmp$x##1206 : GHC.Prim.Int# | lq_tmp$x##1206 == 0}"]]],[{"spanInfo":{"startLine":205,"endLine":205,"endCol":41,"startCol":19,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["$dOrd_a2G1","{lq_tmp$x##4548 : (GHC.Classes.Ord a) | lq_tmp$x##4548 == $dOrd_a2G1}"]]],[{"spanInfo":{"startLine":258,"endLine":258,"endCol":62,"startCol":55,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805057","{lq_tmp$x##4938 : [{lq_tmp$x##4953 : (Data.Heap.Binominal.Tree {lq_tmp$x##4952 : a^\"lq_tmp$x##4948\" | $k_##4947[VV##4946:=lq_tmp$x##4952][VV##4949:=lq_tmp$x##4953][lq_tmp$x##4942:=x##a22N][lq_tmp$x##4943:=acc##a22M]})^\"lq_tmp$x##4951\" | $k_##4950[VV##4949:=lq_tmp$x##4953][lq_tmp$x##4942:=x##a22N][lq_tmp$x##4943:=acc##a22M]}]<\\lq_tmp$x##4945 VV -> {lq_tmp$x##4953 : (Data.Heap.Binominal.Tree {lq_tmp$x##4952 : a^\"lq_tmp$x##4948\" \"lq_tmp$x##4956\" | $k_##4955[VV##4954:=lq_tmp$x##4952][VV##4957:=lq_tmp$x##4953][lq_tmp$x##4942:=x##a22N][lq_tmp$x##4943:=acc##a22M][lq_tmp$x##4960:=lq_tmp$x##4945]})^\"lq_tmp$x##4951\" \"lq_tmp$x##4959\" | $k_##4958[VV##4957:=lq_tmp$x##4953][lq_tmp$x##4942:=x##a22N][lq_tmp$x##4943:=acc##a22M][lq_tmp$x##4960:=lq_tmp$x##4945]}> | tail lq_tmp$x##4938 == acc##a22M\nhead lq_tmp$x##4938 == x##a22N\nlistElts lq_tmp$x##4938 == Set_cup (Set_sng x##a22N) (listElts acc##a22M)\nlen lq_tmp$x##4938 == 1 + len acc##a22M\nata.Heap.Binominal.mapSize lq_tmp$x##4938 == GHC.Types.: (Data.Heap.Binominal.size x##a22N) (Data.Heap.Binominal.mapSize acc##a22M)\nata.Heap.Binominal.sumPositives lq_tmp$x##4938 == x##a22N + Data.Heap.Binominal.sumPositives acc##a22M\nata.Heap.Binominal.len lq_tmp$x##4938 == 1 + Data.Heap.Binominal.len acc##a22M\nata.Heap.Binominal.sumSizeList lq_tmp$x##4938 == Data.Heap.Binominal.sumPositives (Data.Heap.Binominal.mapSize (GHC.Types.: x##a22N acc##a22M))}"]]],[{"spanInfo":{"startLine":193,"endLine":193,"endCol":21,"startCol":19,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["t'","{lq_tmp$x##2139 : (Data.Heap.Binominal.Tree a) | lq_tmp$x##2139 == t'##a22q}"]]],[{"spanInfo":{"startLine":291,"endLine":292,"endCol":17,"startCol":5,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["GHC.Tuple.(,)","forall a b <p2 :: a b -> Bool> .\nlq_tmp$x##4051:a -> lq_tmp$x##4052:{lq_tmp$x##4043 : b<p2 lq_tmp$x##4051> | true} -> {lq_tmp$x##4048 : (a, b)<\\lq_tmp$x##4053 VV -> {lq_tmp$x##4047 : b<p2 lq_tmp$x##4053> | true}> | x_Tuple22 lq_tmp$x##4048 == lq_tmp$x##4052\n                                                                                                                                                                                      && x_Tuple21 lq_tmp$x##4048 == lq_tmp$x##4051\n                                                                                                                                                                                      && snd lq_tmp$x##4048 == lq_tmp$x##4052\n                                                                                                                                                                                      && fst lq_tmp$x##4048 == lq_tmp$x##4051}"]]],[{"spanInfo":{"startLine":288,"endLine":288,"endCol":55,"startCol":14,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[[null,"{lq_tmp$x##4150 : [(Data.Heap.Binominal.Tree {lq_tmp$x##4163 : a^\"lq_tmp$x##4162\" | $k_##4161[VV##4160:=lq_tmp$x##4163][lq_tmp$x##4155:=x##a233][lq_tmp$x##4156:=x'##a234][lq_tmp$x##4157:=ts'##a2GO]\n                                                                                    && x##a233 <= lq_tmp$x##4163})] | Data.Heap.Binominal.sumSizeList lq_tmp$x##4150 == Data.Heap.Binominal.sumSizeList ts'##a2GO}"]]],[{"spanInfo":{"startLine":204,"endLine":204,"endCol":20,"startCol":15,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[[null,"forall a .\n{lq_tmp$x##4463 : (Data.Heap.Binominal.Heap a) | Data.Heap.Binominal.heapSize lq_tmp$x##4463 == 0}"]]],[{"spanInfo":{"startLine":155,"endLine":155,"endCol":5,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.link","forall a .\n(GHC.Classes.Ord<[]> a) =>\nlq_tmp$x##1518:(Data.Heap.Binominal.Tree a) -> lq_tmp$x##1519:(Data.Heap.Binominal.Tree a) -> {v : (Data.Heap.Binominal.Tree a) | Data.Heap.Binominal.size v == Data.Heap.Binominal.size lq_tmp$x##1518 + Data.Heap.Binominal.size lq_tmp$x##1519}"]]],[{"spanInfo":{"startLine":310,"endLine":310,"endCol":20,"startCol":17,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ds_d2U4","{lq_tmp$x##2623 : [(Data.Heap.Binominal.Tree a)] | Data.Heap.Binominal.sumSizeList lq_tmp$x##2623 >= 0\n                                                   && len lq_tmp$x##2623 >= 0\n                                                   && len lq_tmp$x##2623 >= 0\n                                                   && lq_tmp$x##2623 == ds_d2U4}"]]],[{"spanInfo":{"startLine":309,"endLine":309,"endCol":7,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.merge'","forall a .\n(GHC.Classes.Ord<[]> a) =>\nlq_tmp$x##2512:[(Data.Heap.Binominal.Tree a)] -> lq_tmp$x##2513:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | Data.Heap.Binominal.sumSizeList v == Data.Heap.Binominal.sumSizeList lq_tmp$x##2512 + Data.Heap.Binominal.sumSizeList lq_tmp$x##2513}"]]],[{"spanInfo":{"startLine":313,"endLine":313,"endCol":27,"startCol":25,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["t2","{lq_tmp$x##3069 : (Data.Heap.Binominal.Tree a) | lq_tmp$x##3069 == t2##a23i}"]]],[{"spanInfo":{"startLine":273,"endLine":273,"endCol":65,"startCol":47,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805074","{lq_tmp$x##6170 : [(Data.Heap.Binominal.Tree {lq_tmp$x##6177 : a^\"lq_tmp$x##6176\" | $k_##6175[VV##6174:=lq_tmp$x##6177][lq_tmp$x##6172:=h##a22U]})] | 0 < len lq_tmp$x##6170\n                                                                                                                                                      && Data.Heap.Binominal.sumSizeList lq_tmp$x##6170 == Data.Heap.Binominal.heapSize h##a22U}"]]],[{"spanInfo":{"startLine":247,"endLine":247,"endCol":34,"startCol":24,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805064","lq_tmp$x##5352:{lq_tmp$x##5331 : [(Data.Heap.Binominal.Tree {lq_tmp$x##5360 : a^\"lq_tmp$x##5359\" | $k_##5358[VV##5357:=lq_tmp$x##5360][lq_tmp$x##5351:=fix$36$$36$dOrd_a2K3]})] | 0 < len lq_tmp$x##5331} -> {lq_tmp$x##5347 : ((Data.Heap.Binominal.Tree {lq_tmp$x##5360 : a^\"lq_tmp$x##5359\" | $k_##5358[VV##5357:=lq_tmp$x##5360][lq_tmp$x##5351:=fix$36$$36$dOrd_a2K3]}), [(Data.Heap.Binominal.Tree {lq_tmp$x##5360 : a^\"lq_tmp$x##5359\" | $k_##5358[VV##5357:=lq_tmp$x##5360][lq_tmp$x##5351:=fix$36$$36$dOrd_a2K3]\n                                                                                                                                                                                                                                                                                                                                                                                                                                                && Data.Heap.Binominal.root (fst lq_tmp$x##5347) <= lq_tmp$x##5360})]) | Data.Heap.Binominal.size (fst lq_tmp$x##5347) + Data.Heap.Binominal.sumSizeList (snd lq_tmp$x##5347) == Data.Heap.Binominal.sumSizeList lq_tmp$x##5352}"]]],[{"spanInfo":{"startLine":200,"endLine":200,"endCol":15,"startCol":14,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805054","{lq_tmp$x##4804 : GHC.Types.Int | lq_tmp$x##4804 == lq_anf$##7205759403792805053##d2YJ}"]]],[{"spanInfo":{"startLine":171,"endLine":171,"endCol":5,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.null","forall a .\nlq_tmp$x##1356:(Data.Heap.Binominal.Heap a) -> {v : GHC.Types.Bool | v <=> Data.Heap.Binominal.heapSize lq_tmp$x##1356 == 0}"]]],[{"spanInfo":{"startLine":283,"endLine":283,"endCol":15,"startCol":7,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["tBounded","{lq_tmp$x##3929 : (Data.Heap.Binominal.Tree {lq_tmp$x##3935 : a^\"lq_tmp$x##3934\" | $k_##3933[VV##3932:=lq_tmp$x##3935][lq_tmp$x##3931:=t##a22Y]\n                                                                                   && Data.Heap.Binominal.root t##a22Y <= lq_tmp$x##3935}) | Data.Heap.Binominal.size lq_tmp$x##3929 == Data.Heap.Binominal.size t##a22Y}"]]],[{"spanInfo":{"startLine":262,"endLine":262,"endCol":36,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805061","{lq_tmp$x##5184 : GHC.Prim.Addr# | lq_tmp$x##5184 == \"/Users/palmerpa/cis673-proj/BinomialHeap.hs:262:1-35|function unheapNonempty\"}"]]],[{"spanInfo":{"startLine":159,"endLine":159,"endCol":16,"startCol":10,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792804991","{lq_tmp$x##1858 : GHC.Types.Int^\"lq_tmp$x##1857\" | lq_tmp$x##1858 == ds_d2Ty + lq_anf$##7205759403792804990##d2XI}"]]],[{"spanInfo":{"startLine":157,"endLine":157,"endCol":55,"startCol":25,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[[null,"{lq_tmp$x##1807 : (Data.Heap.Binominal.Tree {lq_tmp$x##1813 : a^\"lq_tmp$x##1812\" | $k_##1811[VV##1810:=lq_tmp$x##1813][lq_tmp$x##1809:=lq_anf$##7205759403792804981##d2Xz]\n                                                                                   && Data.Heap.Binominal.root lq_anf$##7205759403792804981##d2Xz <= lq_tmp$x##1813}) | Data.Heap.Binominal.size lq_tmp$x##1807 == Data.Heap.Binominal.size lq_anf$##7205759403792804981##d2Xz}"]]],[{"spanInfo":{"startLine":247,"endLine":247,"endCol":51,"startCol":18,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805067","xcmp:{lq_tmp$x##5692 : (Data.Heap.Binominal.Heap {lq_tmp$x##5691 : a^\"lq_tmp$x##5687\" | $k_##5686[VV##5685:=lq_tmp$x##5691][VV##5688:=lq_tmp$x##5692][lq_tmp$db##14:=lq_anf$##7205759403792805063##d2YT][lq_tmp$db##16:=lq_anf$##7205759403792805066##d2YW]})^\"lq_tmp$x##5690\" | $k_##5689[VV##5688:=lq_tmp$x##5692][lq_tmp$db##14:=lq_anf$##7205759403792805063##d2YT][lq_tmp$db##16:=lq_anf$##7205759403792805066##d2YW]} -> {lq_tmp$x##5684 : (Data.Heap.Binominal.Tree {lq_tmp$x##5683 : a^\"lq_tmp$x##5679\" \"lq_tmp$x##5695\" | $k_##5678[VV##5677:=lq_tmp$x##5683][VV##5680:=lq_tmp$x##5684][VV##5693:=lq_tmp$x##5683][VV##5696:=lq_tmp$x##5684][lq_tmp$db##14:=lq_anf$##7205759403792805063##d2YT][lq_tmp$db##16:=lq_anf$##7205759403792805066##d2YW]\nk_##5694[VV##5693:=lq_tmp$x##5683][VV##5696:=lq_tmp$x##5684][lq_tmp$db##14:=lq_anf$##7205759403792805063##d2YT][lq_tmp$db##16:=lq_anf$##7205759403792805066##d2YW][lq_tmp$x##5699:=xcmp]})^\"lq_tmp$x##5682\" \"lq_tmp$x##5698\" | $k_##5681[VV##5680:=lq_tmp$x##5684][lq_tmp$db##14:=lq_anf$##7205759403792805063##d2YT][lq_tmp$db##16:=lq_anf$##7205759403792805066##d2YW]\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      && $k_##5697[VV##5696:=lq_tmp$x##5684][lq_tmp$db##14:=lq_anf$##7205759403792805063##d2YT][lq_tmp$db##16:=lq_anf$##7205759403792805066##d2YW][lq_tmp$x##5699:=xcmp]}"]]],[{"spanInfo":{"startLine":44,"endLine":44,"endCol":16,"startCol":14,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[[null,"forall a <p :: a a -> Bool> .\n{lq_tmp$x##943 : [a]<\\lq_tmp$x##944 VV -> {lq_tmp$x##942 : a<p lq_tmp$x##944> | true}> | Set_emp (listElts lq_tmp$x##943)\n                                                                                         && len lq_tmp$x##943 == 0\n                                                                                         && Data.Heap.Binominal.mapSize lq_tmp$x##943 == GHC.Types.[]\n                                                                                         && Data.Heap.Binominal.sumPositives lq_tmp$x##943 == 0\n                                                                                         && Data.Heap.Binominal.len lq_tmp$x##943 == 0\n                                                                                         && Data.Heap.Binominal.sumSizeList lq_tmp$x##943 == 0}"]]],[{"spanInfo":{"startLine":199,"endLine":199,"endCol":11,"startCol":10,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805052","{lq_tmp$x##4758 : GHC.Prim.Int# | lq_tmp$x##4758 == 0}"]]],[{"spanInfo":{"startLine":191,"endLine":191,"endCol":10,"startCol":9,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["t","(Data.Heap.Binominal.Tree a)"]]],[{"spanInfo":{"startLine":159,"endLine":159,"endCol":15,"startCol":14,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792804990","{lq_tmp$x##1841 : GHC.Types.Int | lq_tmp$x##1841 == lq_anf$##7205759403792804989##d2XH}"]]],[{"spanInfo":{"startLine":68,"endLine":68,"endCol":36,"startCol":34,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ts","{lq_tmp$x##1350 : [(Data.Heap.Binominal.Tree a)] | Data.Heap.Binominal.sumSizeList lq_tmp$x##1350 >= 0\n                                                   && len lq_tmp$x##1350 >= 0\n                                                   && len lq_tmp$x##1350 >= 0\n                                                   && lq_tmp$x##1350 == ts##a21R}"]]],[{"spanInfo":{"startLine":257,"endLine":257,"endCol":26,"startCol":23,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["acc","[(Data.Heap.Binominal.Tree a)]"]]],[{"spanInfo":{"startLine":204,"endLine":205,"endCol":41,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805041","{lq_tmp$x##4443 : [a] | Data.Heap.Binominal.sumSizeList lq_tmp$x##4443 >= 0\n                        && Data.Heap.Binominal.sumPositives lq_tmp$x##4443 >= 0\n                        && len lq_tmp$x##4443 >= 0\n                        && len lq_tmp$x##4443 >= 0\n                        && lq_tmp$x##4443 == ds_d2TX}"]]],[{"spanInfo":{"startLine":309,"endLine":309,"endCol":20,"startCol":17,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ts1","{lq_tmp$x##2552 : [(Data.Heap.Binominal.Tree a)] | Data.Heap.Binominal.sumSizeList lq_tmp$x##2552 >= 0\n                                                   && len lq_tmp$x##2552 >= 0\n                                                   && len lq_tmp$x##2552 >= 0\n                                                   && lq_tmp$x##2552 == ts1##a23c}"]]],[{"spanInfo":{"startLine":287,"endLine":287,"endCol":44,"startCol":43,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["x","{lq_tmp$x##4132 : a^\"lq_tmp$x##3909\" | $k_##3908[VV##3907:=lq_tmp$x##4132][lq_tmp$x##3906:=t##a22Y][lq_tmp$x##3910:=lq_tmp$x##4132]\n                                       && lq_tmp$x##4132 == Data.Heap.Binominal.root t##a22Y\n                                       && lq_tmp$x##4132 == x##a233}"]]],[{"spanInfo":{"startLine":204,"endLine":204,"endCol":9,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.fromList","forall a .\n(GHC.Classes.Ord<[]> a) =>\nlq_tmp$x##4435:[a] -> {v : (Data.Heap.Binominal.Heap a) | Data.Heap.Binominal.heapSize v == len lq_tmp$x##4435}"]]],[{"spanInfo":{"startLine":283,"endLine":283,"endCol":47,"startCol":18,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[[null,"{lq_tmp$x##3929 : (Data.Heap.Binominal.Tree {lq_tmp$x##3935 : a^\"lq_tmp$x##3934\" | $k_##3933[VV##3932:=lq_tmp$x##3935][lq_tmp$x##3931:=t##a22Y]\n                                                                                   && Data.Heap.Binominal.root t##a22Y <= lq_tmp$x##3935}) | Data.Heap.Binominal.size lq_tmp$x##3929 == Data.Heap.Binominal.size t##a22Y}"]]],[{"spanInfo":{"startLine":163,"endLine":163,"endCol":34,"startCol":21,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["t1BoundedByX2","{lq_tmp$x##1737 : (Data.Heap.Binominal.Tree {lq_tmp$x##1736 : a^\"lq_tmp$x##1671\" | $k_##1670[VV##1669:=lq_tmp$x##1736][lq_tmp$x##1662:=lq_tmp$x##1737][lq_tmp$x##1666:=ds_d2TD][lq_tmp$x##1667:=ds_d2Tz][lq_tmp$x##1668:=t1BoundedByX1##a22h][lq_tmp$x##1672:=lq_tmp$x##1736]\n                                                                                   && ds_d2TD <= lq_tmp$x##1736}) | Data.Heap.Binominal.size lq_tmp$x##1737 == Data.Heap.Binominal.size t1BoundedByX1##a22h\n                                                                                                                    && lq_tmp$x##1737 == t1BoundedByX2##a22i}"]]],[{"spanInfo":{"startLine":175,"endLine":175,"endCol":12,"startCol":11,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["x","a"]]],[{"spanInfo":{"startLine":333,"endLine":333,"endCol":23,"startCol":12,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805083","{VV##0 : [{lq_tmp$x##6736 : a^\"lq_tmp$x##6735\" | $k_##6734[VV##6733:=lq_tmp$x##6736][lq_tmp$x##6501:=fix$36$$36$dOrd_a2Ll][lq_tmp$x##6502:=h'##a2Lu]}]<\\lq_tmp$x##6503 VV -> {lq_tmp$x##6736 : a^\"lq_tmp$x##6735\" | lq_tmp$x##6503 <= lq_tmp$x##6736}> | len VV##0 == Data.Heap.Binominal.heapSize h'##a2Lu}"]]],[{"spanInfo":{"startLine":292,"endLine":292,"endCol":12,"startCol":10,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["hd","{lq_tmp$x##4033 : (Data.Heap.Binominal.Tree {lq_tmp$x##4032 : a^\"lq_tmp$x##3993\" | $k_##3992[VV##3991:=lq_tmp$x##4032][lq_tmp$x##3984:=lq_tmp$x##4033][lq_tmp$x##3988:=x'##a234][lq_tmp$x##3989:=x##a233][lq_tmp$x##3990:=tBounded##a235][lq_tmp$x##3994:=lq_tmp$x##4032]\n                                                                                   && x'##a234 <= lq_tmp$x##4032}) | Data.Heap.Binominal.size lq_tmp$x##4033 == Data.Heap.Binominal.size tBounded##a235\n                                                                                                                     && lq_tmp$x##4033 == hd##a239}"]]],[{"spanInfo":{"startLine":175,"endLine":175,"endCol":34,"startCol":33,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805047","{lq_tmp$x##4599 : GHC.Types.Int | lq_tmp$x##4599 == lq_anf$##7205759403792805046##d2YC}"]]],[{"spanInfo":{"startLine":191,"endLine":191,"endCol":18,"startCol":17,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["t","{lq_tmp$x##2071 : (Data.Heap.Binominal.Tree a) | lq_tmp$x##2071 == t##a22n}"]]],[{"spanInfo":{"startLine":282,"endLine":282,"endCol":19,"startCol":17,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["t'","{lq_tmp$x##3924 : (Data.Heap.Binominal.Tree {lq_tmp$x##3923 : a^\"lq_tmp$x##3779\" | $k_##3778[VV##3777:=lq_tmp$x##3923][VV##3780:=lq_tmp$x##3924]})^\"lq_tmp$x##3782\" | $k_##3781[VV##3780:=lq_tmp$x##3924]\n                                                                                                                                                                      && lq_tmp$x##3924 == t'##a2GM}"]]],[{"spanInfo":{"startLine":45,"endLine":45,"endCol":24,"startCol":18,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792804965","{lq_tmp$x##994 : GHC.Types.Int | 1 <= lq_tmp$x##994\n                                 && lq_tmp$x##994 == 1 + Data.Heap.Binominal.sumSizeList (Data.Heap.Binominal.subtrees x##a1ZS)\n                                 && lq_tmp$x##994 == Data.Heap.Binominal.size x##a1ZS}"]]],[{"spanInfo":{"startLine":175,"endLine":175,"endCol":35,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.Heap","forall a .\nlq_tmp$x##4714:[(Data.Heap.Binominal.Tree a)] -> {lq_tmp$x##4711 : (Data.Heap.Binominal.Heap a) | Data.Heap.Binominal.unheap lq_tmp$x##4711 == lq_tmp$x##4714\n                                                                                                  && Data.Heap.Binominal.heapSize lq_tmp$x##4711 == Data.Heap.Binominal.sumSizeList lq_tmp$x##4714}"]]],[{"spanInfo":{"startLine":159,"endLine":159,"endCol":19,"startCol":17,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ds_d2Tz","{lq_tmp$x##1950 : a | lq_tmp$x##1950 == ds_d2Tz}"]]],[{"spanInfo":{"startLine":272,"endLine":274,"endCol":52,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805077","{lq_tmp$x##6293 : (Data.Heap.Binominal.Tree {lq_tmp$x##6292 : a^\"lq_tmp$x##6216\" | $k_##6215[VV##6214:=lq_tmp$x##6292][lq_tmp$x##6190:=lq_tmp$x##6293][lq_tmp$x##6204:=lq_anf$##7205759403792805076##d2Z6][lq_tmp$x##6208:=fix$36$$36$dOrd_a2KR][lq_tmp$x##6209:=lq_anf$##7205759403792805074##d2Z4][lq_tmp$x##6217:=lq_tmp$x##6292][lq_tmp$x##6228:=lq_tmp$x##6292][lq_tmp$x##6229:=lq_tmp$x##6293][lq_tmp$x##6243:=lq_anf$##7205759403792805076##d2Z6][lq_tmp$x##6248:=lq_tmp$x##6292][lq_tmp$x##6249:=lq_tmp$x##6293][lq_tmp$x##6263:=lq_anf$##7205759403792805076##d2Z6]}) | lq_tmp$x##6293 == ds_d2VT}"]]],[{"spanInfo":{"startLine":57,"endLine":57,"endCol":43,"startCol":31,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792804971","{lq_tmp$x##1260 : [{lq_tmp$x##1257 : GHC.Types.Int | 1 <= lq_tmp$x##1257}] | lq_tmp$x##1260 == Data.Heap.Binominal.mapSize ds_d2WE\n                                                                             && len lq_tmp$x##1260 == len ds_d2WE}"]]],[{"spanInfo":{"startLine":268,"endLine":268,"endCol":41,"startCol":38,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ts2","{lq_tmp$x##6121 : [(Data.Heap.Binominal.Tree {lq_tmp$x##6116 : a^\"lq_tmp$x##5920\" | $k_##5919[VV##5918:=lq_tmp$x##6116][lq_tmp$x##5896:=lq_tmp$x##6117][lq_tmp$x##5900:=lq_tmp$x##6121][lq_tmp$x##5908:=lq_anf$##7205759403792805070##d2Z0][lq_tmp$x##5912:=fix$36$$36$dOrd_a2Kr][lq_tmp$x##5913:=lq_anf$##7205759403792805068##d2YY][lq_tmp$x##5921:=lq_tmp$x##6116][lq_tmp$x##5934:=lq_tmp$x##6116][lq_tmp$x##5935:=lq_tmp$x##6117][lq_tmp$x##5939:=lq_tmp$x##6121][lq_tmp$x##5947:=lq_anf$##7205759403792805070##d2Z0][lq_tmp$x##5954:=lq_tmp$x##6116][lq_tmp$x##5955:=lq_tmp$x##6117][lq_tmp$x##5959:=lq_tmp$x##6121][lq_tmp$x##5961:=lq_tmp$x##6116][lq_tmp$x##5962:=lq_tmp$x##6117][lq_tmp$x##5964:=lq_tmp$x##5957][lq_tmp$x##5965:=lq_tmp$x##5958][lq_tmp$x##5966:=lq_tmp$x##6121][lq_tmp$x##5967:=lq_anf$##7205759403792805070##d2Z0][lq_tmp$x##5980:=ds_d2Vx]\n                                                                                    && Data.Heap.Binominal.root (fst lq_anf$##7205759403792805070##d2Z0) <= lq_tmp$x##6116})] | Data.Heap.Binominal.sumSizeList lq_tmp$x##6121 >= 0\n                                                                                                                                                                                && len lq_tmp$x##6121 >= 0\n                                                                                                                                                                                && len lq_tmp$x##6121 >= 0\n                                                                                                                                                                                && lq_tmp$x##6121 == ts2##a2KB}"]]],[{"spanInfo":{"startLine":158,"endLine":158,"endCol":22,"startCol":9,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["t2BoundedByX1","{lq_tmp$x##1822 : (Data.Heap.Binominal.Tree {lq_tmp$x##1832 : a^\"lq_tmp$x##1831\" | $k_##1830[VV##1829:=lq_tmp$x##1832][lq_tmp$x##1826:=ds_d2Tz][lq_tmp$x##1827:=ds_d2TD][lq_tmp$x##1828:=t2BoundedByX2##a22f]\n                                                                                   && ds_d2Tz <= lq_tmp$x##1832}) | Data.Heap.Binominal.size lq_tmp$x##1822 == Data.Heap.Binominal.size t2BoundedByX2##a22f}"]]],[{"spanInfo":{"startLine":187,"endLine":187,"endCol":7,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.insert","forall a .\n(GHC.Classes.Ord<[]> a) =>\nlq_tmp$x##2318:a -> lq_tmp$x##2319:(Data.Heap.Binominal.Heap a) -> {v : (Data.Heap.Binominal.Heap a) | 1 + Data.Heap.Binominal.heapSize lq_tmp$x##2319 == Data.Heap.Binominal.heapSize v}"]]],[{"spanInfo":{"startLine":312,"endLine":312,"endCol":45,"startCol":30,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805024","{lq_tmp$x##3101 : [(Data.Heap.Binominal.Tree {lq_tmp$x##3116 : a^\"lq_tmp$x##3115\" | $k_##3114[VV##3113:=lq_tmp$x##3116][lq_tmp$x##3107:=fix$36$$36$dOrd_a2Ga][lq_tmp$x##3108:=ts1'##a23g][lq_tmp$x##3109:=ds_d2U4]})] | Data.Heap.Binominal.sumSizeList lq_tmp$x##3101 == Data.Heap.Binominal.sumSizeList ts1'##a23g + Data.Heap.Binominal.sumSizeList ds_d2U4}"]]],[{"spanInfo":{"startLine":187,"endLine":187,"endCol":55,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805001","{lq_tmp$x##2324 : (Data.Heap.Binominal.Heap a) | Data.Heap.Binominal.heapSize lq_tmp$x##2324 >= 0\n                                                 && lq_tmp$x##2324 == ds_d2TS}"]]],[{"spanInfo":{"startLine":159,"endLine":159,"endCol":13,"startCol":11,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ds_d2Ty","{lq_tmp$x##1861 : GHC.Types.Int | lq_tmp$x##1861 >= 0\n                                  && lq_tmp$x##1861 == ds_d2Ty}"]]],[{"spanInfo":{"startLine":44,"endLine":44,"endCol":8,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.mapSize","forall a .\nlq_tmp$x##909:[(Data.Heap.Binominal.Tree a)] -> {VV : [{VV : GHC.Types.Int | 1 <= VV}] | VV == Data.Heap.Binominal.mapSize lq_tmp$x##909\n                                                                                         && len VV == len lq_tmp$x##909}"]]],[{"spanInfo":{"startLine":287,"endLine":289,"endCol":15,"startCol":5,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["GHC.Tuple.(,)","forall a b <p2 :: a b -> Bool> .\nlq_tmp$x##4225:a -> lq_tmp$x##4226:{lq_tmp$x##4217 : b<p2 lq_tmp$x##4225> | true} -> {lq_tmp$x##4222 : (a, b)<\\lq_tmp$x##4227 VV -> {lq_tmp$x##4221 : b<p2 lq_tmp$x##4227> | true}> | x_Tuple22 lq_tmp$x##4222 == lq_tmp$x##4226\n                                                                                                                                                                                      && x_Tuple21 lq_tmp$x##4222 == lq_tmp$x##4225\n                                                                                                                                                                                      && snd lq_tmp$x##4222 == lq_tmp$x##4226\n                                                                                                                                                                                      && fst lq_tmp$x##4222 == lq_tmp$x##4225}"]]],[{"spanInfo":{"startLine":56,"endLine":56,"endCol":12,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.sumSizeList","forall a .\nlq_tmp$x##1177:[(Data.Heap.Binominal.Tree a)] -> {VV : GHC.Types.Int | VV == Data.Heap.Binominal.sumSizeList lq_tmp$x##1177\n                                                                       && VV >= 0\n                                                                       && len lq_tmp$x##1177 <= VV}"]]],[{"spanInfo":{"startLine":50,"endLine":51,"endCol":42,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792804967","{lq_tmp$x##1078 : [{lq_tmp$x##1075 : GHC.Types.Int | 1 <= lq_tmp$x##1075}] | len lq_tmp$x##1078 >= 0\n                                                                             && len lq_tmp$x##1078 >= 0\n                                                                             && lq_tmp$x##1078 == ds_d2Ws}"]]],[{"spanInfo":{"startLine":162,"endLine":162,"endCol":73,"startCol":60,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["t1BoundedByX1","{lq_tmp$x##1676 : (Data.Heap.Binominal.Tree {lq_tmp$x##1675 : a^\"lq_tmp$x##1652\" | $k_##1651[VV##1650:=lq_tmp$x##1675][lq_tmp$x##1647:=lq_tmp$x##1676][lq_tmp$x##1649:=lq_anf$##7205759403792804980##d2Xy][lq_tmp$x##1653:=lq_tmp$x##1675]\n                                                                                   && Data.Heap.Binominal.root lq_anf$##7205759403792804980##d2Xy <= lq_tmp$x##1675}) | Data.Heap.Binominal.size lq_tmp$x##1676 == Data.Heap.Binominal.size lq_anf$##7205759403792804980##d2Xy\n                                                                                                                                                                        && lq_tmp$x##1676 == t1BoundedByX1##a22h}"]]],[{"spanInfo":{"startLine":287,"endLine":287,"endCol":11,"startCol":9,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["hd","{lq_tmp$x##4121 : (Data.Heap.Binominal.Tree {lq_tmp$x##4131 : a^\"lq_tmp$x##4130\" | $k_##4129[VV##4128:=lq_tmp$x##4131][lq_tmp$x##4125:=x##a233][lq_tmp$x##4126:=x'##a234][lq_tmp$x##4127:=tBounded'##a236]\n                                                                                   && x##a233 <= lq_tmp$x##4131}) | Data.Heap.Binominal.size lq_tmp$x##4121 == Data.Heap.Binominal.size tBounded'##a236}"]]],[{"spanInfo":{"startLine":337,"endLine":337,"endCol":25,"startCol":17,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805084","lq_tmp$x##6802:(Data.Heap.Binominal.Heap {lq_tmp$x##6807 : a^\"lq_tmp$x##6806\" | $k_##6805[VV##6804:=lq_tmp$x##6807][lq_tmp$x##6801:=fix$36$$36$dOrd_a2LI]}) -> {lq_tmp$x##6798 : [{lq_tmp$x##6807 : a^\"lq_tmp$x##6806\" | $k_##6805[VV##6804:=lq_tmp$x##6807][lq_tmp$x##6801:=fix$36$$36$dOrd_a2LI]}]<\\lq_tmp$x##6803 VV -> {lq_tmp$x##6807 : a^\"lq_tmp$x##6806\" | lq_tmp$x##6803 <= lq_tmp$x##6807}> | len lq_tmp$x##6798 == Data.Heap.Binominal.heapSize lq_tmp$x##6802}"]]],[{"spanInfo":{"startLine":163,"endLine":163,"endCol":39,"startCol":20,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792804987","{lq_tmp$x##1712 : [{lq_tmp$x##1727 : (Data.Heap.Binominal.Tree {lq_tmp$x##1726 : a^\"lq_tmp$x##1722\" | $k_##1721[VV##1720:=lq_tmp$x##1726][VV##1723:=lq_tmp$x##1727][lq_tmp$x##1716:=t1BoundedByX2##a22i][lq_tmp$x##1717:=ds_d2TE]})^\"lq_tmp$x##1725\" | $k_##1724[VV##1723:=lq_tmp$x##1727][lq_tmp$x##1716:=t1BoundedByX2##a22i][lq_tmp$x##1717:=ds_d2TE]}]<\\lq_tmp$x##1719 VV -> {lq_tmp$x##1727 : (Data.Heap.Binominal.Tree {lq_tmp$x##1726 : a^\"lq_tmp$x##1722\" \"lq_tmp$x##1730\" | $k_##1729[VV##1728:=lq_tmp$x##1726][VV##1731:=lq_tmp$x##1727][lq_tmp$x##1716:=t1BoundedByX2##a22i][lq_tmp$x##1717:=ds_d2TE][lq_tmp$x##1734:=lq_tmp$x##1719]})^\"lq_tmp$x##1725\" \"lq_tmp$x##1733\" | $k_##1732[VV##1731:=lq_tmp$x##1727][lq_tmp$x##1716:=t1BoundedByX2##a22i][lq_tmp$x##1717:=ds_d2TE][lq_tmp$x##1734:=lq_tmp$x##1719]}> | tail lq_tmp$x##1712 == ds_d2TE\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             && head lq_tmp$x##1712 == t1BoundedByX2##a22i\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             && listElts lq_tmp$x##1712 == Set_cup (Set_sng t1BoundedByX2##a22i) (listElts ds_d2TE)\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             && len lq_tmp$x##1712 == 1 + len ds_d2TE\nata.Heap.Binominal.mapSize lq_tmp$x##1712 == GHC.Types.: (Data.Heap.Binominal.size t1BoundedByX2##a22i) (Data.Heap.Binominal.mapSize ds_d2TE)\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             && Data.Heap.Binominal.sumPositives lq_tmp$x##1712 == t1BoundedByX2##a22i + Data.Heap.Binominal.sumPositives ds_d2TE\nata.Heap.Binominal.len lq_tmp$x##1712 == 1 + Data.Heap.Binominal.len ds_d2TE\nata.Heap.Binominal.sumSizeList lq_tmp$x##1712 == Data.Heap.Binominal.sumPositives (Data.Heap.Binominal.mapSize (GHC.Types.: t1BoundedByX2##a22i ds_d2TE))}"]]],[{"spanInfo":{"startLine":288,"endLine":288,"endCol":11,"startCol":9,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["tl","{lq_tmp$x##4150 : [(Data.Heap.Binominal.Tree {lq_tmp$x##4163 : a^\"lq_tmp$x##4162\" | $k_##4161[VV##4160:=lq_tmp$x##4163][lq_tmp$x##4155:=x##a233][lq_tmp$x##4156:=x'##a234][lq_tmp$x##4157:=ts'##a2GO]\n                                                                                    && x##a233 <= lq_tmp$x##4163})] | Data.Heap.Binominal.sumSizeList lq_tmp$x##4150 == Data.Heap.Binominal.sumSizeList ts'##a2GO}"]]],[{"spanInfo":{"startLine":280,"endLine":292,"endCol":17,"startCol":3,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805034","{lq_tmp$x##3972 : GHC.Types.Bool | (lq_tmp$x##3972 <=> x##a233 < x'##a234)\n                                   && lq_tmp$x##3972 == lq_anf$##7205759403792805033##d2Yp}"]]],[{"spanInfo":{"startLine":98,"endLine":98,"endCol":36,"startCol":34,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ds_d2Ta","{lq_tmp$x##1482 : [(Data.Heap.Binominal.Tree {lq_tmp$x##1477 : a | ds_d2T9 <= lq_tmp$x##1477})] | Data.Heap.Binominal.sumSizeList lq_tmp$x##1482 >= 0\n                                                                                                  && len lq_tmp$x##1482 >= 0\n                                                                                                  && len lq_tmp$x##1482 >= 0\n                                                                                                  && lq_tmp$x##1482 == ds_d2Ta}"]]],[{"spanInfo":{"startLine":97,"endLine":98,"endCol":46,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792804979","{lq_tmp$x##1404 : (Data.Heap.Binominal.Tree a) | lq_tmp$x##1404 == ds_d2T1}"]]],[{"spanInfo":{"startLine":247,"endLine":247,"endCol":21,"startCol":18,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[[null,"forall a b .\nlq_tmp$x##5291:(a, b) -> {lq_tmp$x##5288 : a | lq_tmp$x##5288 == fst lq_tmp$x##5291}"]]],[{"spanInfo":{"startLine":278,"endLine":292,"endCol":17,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805032","{lq_tmp$x##3580 : [(Data.Heap.Binominal.Tree a)] | Data.Heap.Binominal.sumSizeList lq_tmp$x##3580 >= 0\n                                                   && len lq_tmp$x##3580 >= 0\n                                                   && len lq_tmp$x##3580 >= 0\n                                                   && lq_tmp$x##3580 == ds_d2V9}"]]],[{"spanInfo":{"startLine":163,"endLine":163,"endCol":51,"startCol":40,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792804988","{lq_tmp$x##1758 : GHC.Types.Int^\"lq_tmp$x##1757\" | lq_tmp$x##1758 == ds_d2TB + ds_d2TF}"]]],[{"spanInfo":{"startLine":288,"endLine":288,"endCol":51,"startCol":49,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["x'","{lq_tmp$x##4165 : a^\"lq_tmp$x##3921\" | $k_##3920[VV##3919:=lq_tmp$x##4165][lq_tmp$x##3918:=t'##a2GM][lq_tmp$x##3922:=lq_tmp$x##4165]\n                                       && lq_tmp$x##4165 == Data.Heap.Binominal.root t'##a2GM\n                                       && lq_tmp$x##4165 == x'##a234}"]]],[{"spanInfo":{"startLine":194,"endLine":194,"endCol":42,"startCol":40,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["t'","{lq_tmp$x##2191 : (Data.Heap.Binominal.Tree a) | lq_tmp$x##2191 == t'##a22q}"]]],[{"spanInfo":{"startLine":57,"endLine":57,"endCol":43,"startCol":18,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.sumPositives","lq_tmp$x##1071:[{VV : GHC.Types.Int | 1 <= VV}] -> {VV : GHC.Types.Int | VV == Data.Heap.Binominal.sumPositives lq_tmp$x##1071\n                                                                         && VV >= 0\n                                                                         && len lq_tmp$x##1071 <= VV}"]]],[{"spanInfo":{"startLine":156,"endLine":156,"endCol":13,"startCol":11,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ds_d2TD","{lq_tmp$x##1635 : a | lq_tmp$x##1635 == ds_d2TD}"]]],[{"spanInfo":{"startLine":159,"endLine":159,"endCol":44,"startCol":41,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ds_d2TB","{lq_tmp$x##1921 : GHC.Types.Int | 1 <= lq_tmp$x##1921\n                                  && lq_tmp$x##1921 == 1 + Data.Heap.Binominal.sumSizeList ds_d2TA\n                                  && lq_tmp$x##1921 == ds_d2TB}"]]],[{"spanInfo":{"startLine":305,"endLine":305,"endCol":52,"startCol":31,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.Heap","forall a .\nlq_tmp$x##3345:[(Data.Heap.Binominal.Tree a)] -> {lq_tmp$x##3342 : (Data.Heap.Binominal.Heap a) | Data.Heap.Binominal.unheap lq_tmp$x##3342 == lq_tmp$x##3345\n                                                                                                  && Data.Heap.Binominal.heapSize lq_tmp$x##3342 == Data.Heap.Binominal.sumSizeList lq_tmp$x##3345}"]]],[{"spanInfo":{"startLine":284,"endLine":284,"endCol":49,"startCol":47,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["t'","{lq_tmp$x##3950 : (Data.Heap.Binominal.Tree {lq_tmp$x##3949 : a^\"lq_tmp$x##3779\" | $k_##3778[VV##3777:=lq_tmp$x##3949][VV##3780:=lq_tmp$x##3950]})^\"lq_tmp$x##3782\" | $k_##3781[VV##3780:=lq_tmp$x##3950]\n                                                                                                                                                                      && lq_tmp$x##3950 == t'##a2GM}"]]],[{"spanInfo":{"startLine":193,"endLine":193,"endCol":11,"startCol":10,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["t","{lq_tmp$x##2127 : (Data.Heap.Binominal.Tree a) | lq_tmp$x##2127 == t##a22n}"]]],[{"spanInfo":{"startLine":163,"endLine":163,"endCol":38,"startCol":35,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ds_d2TE","{lq_tmp$x##1743 : [(Data.Heap.Binominal.Tree {lq_tmp$x##1738 : a | ds_d2TD <= lq_tmp$x##1738})] | Data.Heap.Binominal.sumSizeList lq_tmp$x##1743 >= 0\n                                                                                                  && len lq_tmp$x##1743 >= 0\n                                                                                                  && len lq_tmp$x##1743 >= 0\n                                                                                                  && lq_tmp$x##1743 == ds_d2TE}"]]],[{"spanInfo":{"startLine":337,"endLine":337,"endCol":14,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.sortUsingHeap","forall a .\n(GHC.Classes.Ord<[]> a) =>\nlq_tmp$x##6787:[a] -> {VV##0 : [a]<\\lq_tmp$x##6789 VV -> {VV : a | lq_tmp$x##6789 <= VV}> | len VV##0 == len lq_tmp$x##6787}"]]],[{"spanInfo":{"startLine":162,"endLine":162,"endCol":56,"startCol":54,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ds_d2TD","{lq_tmp$x##1673 : a | lq_tmp$x##1673 == ds_d2TD}"]]],[{"spanInfo":{"startLine":258,"endLine":258,"endCol":54,"startCol":52,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["xs","{lq_tmp$x##5008 : [(Data.Heap.Binominal.Tree a)] | Data.Heap.Binominal.sumSizeList lq_tmp$x##5008 >= 0\n                                                   && len lq_tmp$x##5008 >= 0\n                                                   && len lq_tmp$x##5008 >= 0\n                                                   && lq_tmp$x##5008 == xs##a22O}"]]],[{"spanInfo":{"startLine":161,"endLine":161,"endCol":22,"startCol":9,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["t1BoundedByX1","{lq_tmp$x##1647 : (Data.Heap.Binominal.Tree {lq_tmp$x##1653 : a^\"lq_tmp$x##1652\" | $k_##1651[VV##1650:=lq_tmp$x##1653][lq_tmp$x##1649:=lq_anf$##7205759403792804980##d2Xy]\n                                                                                   && Data.Heap.Binominal.root lq_anf$##7205759403792804980##d2Xy <= lq_tmp$x##1653}) | Data.Heap.Binominal.size lq_tmp$x##1647 == Data.Heap.Binominal.size lq_anf$##7205759403792804980##d2Xy}"]]],[{"spanInfo":{"startLine":257,"endLine":258,"endCol":62,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805056","{lq_tmp$x##4864 : [(Data.Heap.Binominal.Tree a)] | Data.Heap.Binominal.sumSizeList lq_tmp$x##4864 >= 0\n                                                   && len lq_tmp$x##4864 >= 0\n                                                   && len lq_tmp$x##4864 >= 0\n                                                   && lq_tmp$x##4864 == ds_d2Sv}"]]],[{"spanInfo":{"startLine":56,"endLine":57,"endCol":43,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792804970","{lq_tmp$x##1185 : [(Data.Heap.Binominal.Tree a)] | len lq_tmp$x##1185 >= 0\n                                                   && len lq_tmp$x##1185 >= 0\n                                                   && lq_tmp$x##1185 == ds_d2WE}"]]],[{"spanInfo":{"startLine":50,"endLine":50,"endCol":13,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.sumPositives","lq_tmp$x##1071:[{VV : GHC.Types.Int | 1 <= VV}] -> {VV : GHC.Types.Int | VV == Data.Heap.Binominal.sumPositives lq_tmp$x##1071\n                                                                         && VV >= 0\n                                                                         && len lq_tmp$x##1071 <= VV}"]]],[{"spanInfo":{"startLine":287,"endLine":287,"endCol":57,"startCol":14,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[[null,"{lq_tmp$x##4121 : (Data.Heap.Binominal.Tree {lq_tmp$x##4131 : a^\"lq_tmp$x##4130\" | $k_##4129[VV##4128:=lq_tmp$x##4131][lq_tmp$x##4125:=x##a233][lq_tmp$x##4126:=x'##a234][lq_tmp$x##4127:=tBounded'##a236]\n                                                                                   && x##a233 <= lq_tmp$x##4131}) | Data.Heap.Binominal.size lq_tmp$x##4121 == Data.Heap.Binominal.size tBounded'##a236}"]]],[{"spanInfo":{"startLine":281,"endLine":281,"endCol":17,"startCol":16,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["t","{lq_tmp$x##3912 : (Data.Heap.Binominal.Tree a) | lq_tmp$x##3912 == t##a22Y}"]]],[{"spanInfo":{"startLine":305,"endLine":305,"endCol":52,"startCol":36,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805029","{lq_tmp$x##3302 : [(Data.Heap.Binominal.Tree {lq_tmp$x##3317 : a^\"lq_tmp$x##3316\" | $k_##3315[VV##3314:=lq_tmp$x##3317][lq_tmp$x##3308:=fix$36$$36$dOrd_a2Gy][lq_tmp$x##3309:=ts1##a23a][lq_tmp$x##3310:=ts2##a23b]})] | Data.Heap.Binominal.sumSizeList lq_tmp$x##3302 == Data.Heap.Binominal.sumSizeList ts1##a23a + Data.Heap.Binominal.sumSizeList ts2##a23b}"]]],[{"spanInfo":{"startLine":103,"endLine":103,"endCol":45,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["tree","{lq_tmp$x##1497 : (Data.Heap.Binominal.Tree {lq_tmp$x##1496 : a | y##a21X <= lq_tmp$x##1496}) | lq_tmp$x##1497 == tree##a21Y}"]]],[{"spanInfo":{"startLine":167,"endLine":167,"endCol":16,"startCol":14,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[[null,"forall a <p :: a a -> Bool> .\n{lq_tmp$x##4390 : [a]<\\lq_tmp$x##4391 VV -> {lq_tmp$x##4389 : a<p lq_tmp$x##4391> | true}> | Set_emp (listElts lq_tmp$x##4390)\n                                                                                             && len lq_tmp$x##4390 == 0\n                                                                                             && Data.Heap.Binominal.mapSize lq_tmp$x##4390 == GHC.Types.[]\n                                                                                             && Data.Heap.Binominal.sumPositives lq_tmp$x##4390 == 0\n                                                                                             && Data.Heap.Binominal.len lq_tmp$x##4390 == 0\n                                                                                             && Data.Heap.Binominal.sumSizeList lq_tmp$x##4390 == 0}"]]],[{"spanInfo":{"startLine":103,"endLine":103,"endCol":29,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.boundedTreeTransitivityLemma","forall a .\nlq_tmp$x##1490:a -> lq_tmp$x##1491:{VV : a | lq_tmp$x##1490 <= VV} -> lq_tmp$x##1492:(Data.Heap.Binominal.Tree {VV : a | lq_tmp$x##1491 <= VV}) -> {VV##0 : (Data.Heap.Binominal.Tree {VV : a | lq_tmp$x##1490 <= VV}) | Data.Heap.Binominal.size VV##0 == Data.Heap.Binominal.size lq_tmp$x##1492}"]]],[{"spanInfo":{"startLine":274,"endLine":274,"endCol":45,"startCol":42,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ts1","{lq_tmp$x##6365 : [(Data.Heap.Binominal.Tree {lq_tmp$x##6360 : a^\"lq_tmp$x##6216\" | $k_##6215[VV##6214:=lq_tmp$x##6360][lq_tmp$x##6190:=lq_anf$##7205759403792805077##d2Z7][lq_tmp$x##6204:=lq_anf$##7205759403792805076##d2Z6][lq_tmp$x##6208:=fix$36$$36$dOrd_a2KR][lq_tmp$x##6209:=lq_anf$##7205759403792805074##d2Z4][lq_tmp$x##6217:=lq_tmp$x##6360][lq_tmp$x##6228:=lq_tmp$x##6360][lq_tmp$x##6229:=lq_anf$##7205759403792805077##d2Z7][lq_tmp$x##6243:=lq_anf$##7205759403792805076##d2Z6][lq_tmp$x##6248:=lq_tmp$x##6360][lq_tmp$x##6249:=lq_anf$##7205759403792805077##d2Z7][lq_tmp$x##6263:=lq_anf$##7205759403792805076##d2Z6][lq_tmp$x##6292:=lq_tmp$x##6360][lq_tmp$x##6293:=lq_anf$##7205759403792805077##d2Z7][lq_tmp$x##6295:=lq_tmp$x##6360][lq_tmp$x##6296:=lq_anf$##7205759403792805077##d2Z7][lq_tmp$x##6313:=ds_d2VU][lq_tmp$x##6314:=minElt##a2KZ][lq_tmp$x##6321:=lq_tmp$x##6361][lq_tmp$x##6325:=lq_tmp$x##6365]\n                                                                                    && minElt##a2KZ <= lq_tmp$x##6360})] | Data.Heap.Binominal.sumSizeList lq_tmp$x##6365 >= 0\n                                                                                                                           && len lq_tmp$x##6365 >= 0\n                                                                                                                           && len lq_tmp$x##6365 >= 0\n                                                                                                                           && lq_tmp$x##6365 == ts1##a2L1}"]]],[{"spanInfo":{"startLine":45,"endLine":45,"endCol":37,"startCol":27,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792804966","{lq_tmp$x##1013 : [{lq_tmp$x##1010 : GHC.Types.Int | 1 <= lq_tmp$x##1010}] | lq_tmp$x##1013 == Data.Heap.Binominal.mapSize xs##a1ZT\n                                                                             && len lq_tmp$x##1013 == len xs##a1ZT}"]]],[{"spanInfo":{"startLine":193,"endLine":193,"endCol":11,"startCol":5,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792804996","{lq_tmp$x##2119 : GHC.Types.Int | lq_tmp$x##2119 >= 0\n                                  && lq_tmp$x##2119 == Data.Heap.Binominal.rank t##a22n}"]]],[{"spanInfo":{"startLine":312,"endLine":312,"endCol":22,"startCol":5,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805015","{lq_tmp$x##2788 : GHC.Types.Bool | lq_tmp$x##2788 <=> lq_anf$##7205759403792805013##d2Y5 < lq_anf$##7205759403792805014##d2Y6}"]]],[{"spanInfo":{"startLine":281,"endLine":281,"endCol":17,"startCol":11,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[[null,"{lq_tmp$x##3910 : a^\"lq_tmp$x##3909\" | $k_##3908[VV##3907:=lq_tmp$x##3910][lq_tmp$x##3906:=t##a22Y]\n                                       && lq_tmp$x##3910 == Data.Heap.Binominal.root t##a22Y}"]]],[{"spanInfo":{"startLine":161,"endLine":161,"endCol":55,"startCol":25,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[[null,"{lq_tmp$x##1647 : (Data.Heap.Binominal.Tree {lq_tmp$x##1653 : a^\"lq_tmp$x##1652\" | $k_##1651[VV##1650:=lq_tmp$x##1653][lq_tmp$x##1649:=lq_anf$##7205759403792804980##d2Xy]\n                                                                                   && Data.Heap.Binominal.root lq_anf$##7205759403792804980##d2Xy <= lq_tmp$x##1653}) | Data.Heap.Binominal.size lq_tmp$x##1647 == Data.Heap.Binominal.size lq_anf$##7205759403792804980##d2Xy}"]]],[{"spanInfo":{"startLine":107,"endLine":107,"endCol":33,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.boundedTreeListTransitivityLemma","forall a .\nlq_tmp$x##3380:a -> lq_tmp$x##3381:{VV : a | lq_tmp$x##3380 <= VV} -> lq_tmp$x##3382:[(Data.Heap.Binominal.Tree {VV : a | lq_tmp$x##3381 <= VV})] -> {v : [(Data.Heap.Binominal.Tree {VV : a | lq_tmp$x##3380 <= VV})] | Data.Heap.Binominal.sumSizeList v == Data.Heap.Binominal.sumSizeList lq_tmp$x##3382}"]]],[{"spanInfo":{"startLine":258,"endLine":258,"endCol":61,"startCol":58,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["acc","{lq_tmp$x##4969 : [(Data.Heap.Binominal.Tree a)] | Data.Heap.Binominal.sumSizeList lq_tmp$x##4969 >= 0\n                                                   && len lq_tmp$x##4969 >= 0\n                                                   && len lq_tmp$x##4969 >= 0\n                                                   && lq_tmp$x##4969 == acc##a22M}"]]],[{"spanInfo":{"startLine":278,"endLine":278,"endCol":25,"startCol":18,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805037","{lq_tmp$x##3604 : [{lq_tmp$x##3613 : (Data.Heap.Binominal.Tree {lq_tmp$x##3612 : a^\"lq_tmp$x##3608\" | $k_##3607[VV##3606:=lq_tmp$x##3612][VV##3609:=lq_tmp$x##3613]})^\"lq_tmp$x##3611\" | $k_##3610[VV##3609:=lq_tmp$x##3613]}]<\\lq_tmp$x##3605 VV -> {lq_tmp$x##3613 : (Data.Heap.Binominal.Tree {lq_tmp$x##3612 : a^\"lq_tmp$x##3608\" \"lq_tmp$x##3616\" | $k_##3615[VV##3614:=lq_tmp$x##3612][VV##3617:=lq_tmp$x##3613][lq_tmp$x##3620:=lq_tmp$x##3605]})^\"lq_tmp$x##3611\" \"lq_tmp$x##3619\" | $k_##3618[VV##3617:=lq_tmp$x##3613][lq_tmp$x##3620:=lq_tmp$x##3605]}> | Set_emp (listElts lq_tmp$x##3604)\nlen lq_tmp$x##3604 == 0\nata.Heap.Binominal.mapSize lq_tmp$x##3604 == GHC.Types.[]\nata.Heap.Binominal.sumPositives lq_tmp$x##3604 == 0\nata.Heap.Binominal.len lq_tmp$x##3604 == 0\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     && Data.Heap.Binominal.sumSizeList lq_tmp$x##3604 == 0}"]]],[{"spanInfo":{"startLine":194,"endLine":194,"endCol":47,"startCol":44,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ts'","{lq_tmp$x##2231 : [(Data.Heap.Binominal.Tree a)] | Data.Heap.Binominal.sumSizeList lq_tmp$x##2231 >= 0\n                                                   && len lq_tmp$x##2231 >= 0\n                                                   && len lq_tmp$x##2231 >= 0\n                                                   && lq_tmp$x##2231 == ts'##a22r}"]]],[{"spanInfo":{"startLine":274,"endLine":274,"endCol":50,"startCol":47,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ts2","{lq_tmp$x##6417 : [(Data.Heap.Binominal.Tree {lq_tmp$x##6412 : a^\"lq_tmp$x##6216\" | $k_##6215[VV##6214:=lq_tmp$x##6412][lq_tmp$x##6192:=lq_tmp$x##6413][lq_tmp$x##6196:=lq_tmp$x##6417][lq_tmp$x##6204:=lq_anf$##7205759403792805076##d2Z6][lq_tmp$x##6208:=fix$36$$36$dOrd_a2KR][lq_tmp$x##6209:=lq_anf$##7205759403792805074##d2Z4][lq_tmp$x##6217:=lq_tmp$x##6412][lq_tmp$x##6230:=lq_tmp$x##6412][lq_tmp$x##6231:=lq_tmp$x##6413][lq_tmp$x##6235:=lq_tmp$x##6417][lq_tmp$x##6243:=lq_anf$##7205759403792805076##d2Z6][lq_tmp$x##6250:=lq_tmp$x##6412][lq_tmp$x##6251:=lq_tmp$x##6413][lq_tmp$x##6255:=lq_tmp$x##6417][lq_tmp$x##6257:=lq_tmp$x##6412][lq_tmp$x##6258:=lq_tmp$x##6413][lq_tmp$x##6260:=lq_tmp$x##6253][lq_tmp$x##6261:=lq_tmp$x##6254][lq_tmp$x##6262:=lq_tmp$x##6417][lq_tmp$x##6263:=lq_anf$##7205759403792805076##d2Z6][lq_tmp$x##6276:=ds_d2VT]\n                                                                                    && Data.Heap.Binominal.root (fst lq_anf$##7205759403792805076##d2Z6) <= lq_tmp$x##6412})] | Data.Heap.Binominal.sumSizeList lq_tmp$x##6417 >= 0\n                                                                                                                                                                                && len lq_tmp$x##6417 >= 0\n                                                                                                                                                                                && len lq_tmp$x##6417 >= 0\n                                                                                                                                                                                && lq_tmp$x##6417 == ts2##a2L3}"]]],[{"spanInfo":{"startLine":187,"endLine":187,"endCol":55,"startCol":27,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805008","{lq_tmp$x##2441 : [(Data.Heap.Binominal.Tree {lq_tmp$x##2454 : a^\"lq_tmp$x##2453\" | $k_##2452[VV##2451:=lq_tmp$x##2454][lq_tmp$x##2446:=fix$36$$36$dOrd_a2FT][lq_tmp$x##2447:=lq_anf$##7205759403792805007##d2XZ][lq_tmp$x##2448:=ts##a22m]})] | Data.Heap.Binominal.sumSizeList lq_tmp$x##2441 == Data.Heap.Binominal.size lq_anf$##7205759403792805007##d2XZ + Data.Heap.Binominal.sumSizeList ts##a22m}"]]],[{"spanInfo":{"startLine":280,"endLine":280,"endCol":32,"startCol":19,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.deleteMin'","forall a .\n(GHC.Classes.Ord<[]> a) =>\nlq_tmp$x##3434:{xs : [(Data.Heap.Binominal.Tree a)] | 0 < len xs} -> {v : ((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | Data.Heap.Binominal.root (fst v) <= VV})]) | Data.Heap.Binominal.size (fst v) + Data.Heap.Binominal.sumSizeList (snd v) == Data.Heap.Binominal.sumSizeList lq_tmp$x##3434}"]]],[{"spanInfo":{"startLine":332,"endLine":333,"endCol":23,"startCol":3,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["GHC.Types.:","forall a <p :: a a -> Bool> .\nlq_tmp$x##6754:a -> lq_tmp$x##6755:[{lq_tmp$x##6743 : a<p lq_tmp$x##6754> | true}]<\\lq_tmp$x##6756 VV -> {lq_tmp$x##6745 : a<p lq_tmp$x##6756> | true}> -> {lq_tmp$x##6750 : [a]<\\lq_tmp$x##6757 VV -> {lq_tmp$x##6749 : a<p lq_tmp$x##6757> | true}> | tail lq_tmp$x##6750 == lq_tmp$x##6755\n                                                                                                                                                                                                                                                        && head lq_tmp$x##6750 == lq_tmp$x##6754\n                                                                                                                                                                                                                                                        && listElts lq_tmp$x##6750 == Set_cup (Set_sng lq_tmp$x##6754) (listElts lq_tmp$x##6755)\n                                                                                                                                                                                                                                                        && len lq_tmp$x##6750 == 1 + len lq_tmp$x##6755\n                                                                                                                                                                                                                                                        && Data.Heap.Binominal.mapSize lq_tmp$x##6750 == GHC.Types.: (Data.Heap.Binominal.size lq_tmp$x##6754) (Data.Heap.Binominal.mapSize lq_tmp$x##6755)\n                                                                                                                                                                                                                                                        && Data.Heap.Binominal.sumPositives lq_tmp$x##6750 == lq_tmp$x##6754 + Data.Heap.Binominal.sumPositives lq_tmp$x##6755\n                                                                                                                                                                                                                                                        && Data.Heap.Binominal.len lq_tmp$x##6750 == 1 + Data.Heap.Binominal.len lq_tmp$x##6755\n                                                                                                                                                                                                                                                        && Data.Heap.Binominal.sumSizeList lq_tmp$x##6750 == Data.Heap.Binominal.sumPositives (Data.Heap.Binominal.mapSize (GHC.Types.: lq_tmp$x##6754 lq_tmp$x##6755))}"]]],[{"spanInfo":{"startLine":98,"endLine":98,"endCol":45,"startCol":43,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ds_d2Tb","{lq_tmp$x##1484 : GHC.Types.Int | 1 <= lq_tmp$x##1484\n                                  && lq_tmp$x##1484 == 1 + Data.Heap.Binominal.sumSizeList ds_d2Ta\n                                  && lq_tmp$x##1484 == ds_d2Tb}"]]],[{"spanInfo":{"startLine":97,"endLine":97,"endCol":28,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.treeIsBoundedByItsRootLemma","forall a .\nlq_tmp$x##1401:(Data.Heap.Binominal.Tree a) -> {VV##0 : (Data.Heap.Binominal.Tree {VV : a | Data.Heap.Binominal.root lq_tmp$x##1401 <= VV}) | Data.Heap.Binominal.size VV##0 == Data.Heap.Binominal.size lq_tmp$x##1401}"]]],[{"spanInfo":{"startLine":171,"endLine":171,"endCol":25,"startCol":24,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792804978","{lq_tmp$x##1373 : GHC.Types.Int | lq_tmp$x##1373 == lq_anf$##7205759403792804977##d2Xv}"]]],[{"spanInfo":{"startLine":171,"endLine":171,"endCol":7,"startCol":6,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["h","(Data.Heap.Binominal.Heap a)"]]],[{"spanInfo":{"startLine":283,"endLine":283,"endCol":47,"startCol":46,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["t","{lq_tmp$x##3937 : (Data.Heap.Binominal.Tree a) | lq_tmp$x##3937 == t##a22Y}"]]],[{"spanInfo":{"startLine":193,"endLine":193,"endCol":21,"startCol":14,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792804997","{lq_tmp$x##2131 : GHC.Types.Int | lq_tmp$x##2131 >= 0\n                                  && lq_tmp$x##2131 == Data.Heap.Binominal.rank t'##a22q}"]]],[{"spanInfo":{"startLine":330,"endLine":333,"endCol":23,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805082","{lq_tmp$x##6541 : [(Data.Heap.Binominal.Tree a)] | Data.Heap.Binominal.sumSizeList lq_tmp$x##6541 >= 0\n                                                   && len lq_tmp$x##6541 >= 0\n                                                   && len lq_tmp$x##6541 >= 0\n                                                   && lq_tmp$x##6541 == ds_d2Wn}"]]],[{"spanInfo":{"startLine":187,"endLine":187,"endCol":9,"startCol":8,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["x","a"]]],[{"spanInfo":{"startLine":187,"endLine":187,"endCol":55,"startCol":22,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.Heap","forall a .\nlq_tmp$x##2477:[(Data.Heap.Binominal.Tree a)] -> {lq_tmp$x##2474 : (Data.Heap.Binominal.Heap a) | Data.Heap.Binominal.unheap lq_tmp$x##2474 == lq_tmp$x##2477\n                                                                                                  && Data.Heap.Binominal.heapSize lq_tmp$x##2474 == Data.Heap.Binominal.sumSizeList lq_tmp$x##2477}"]]],[{"spanInfo":{"startLine":312,"endLine":312,"endCol":22,"startCol":20,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["t2","{lq_tmp$x##2782 : (Data.Heap.Binominal.Tree a) | lq_tmp$x##2782 == t2##a23i}"]]],[{"spanInfo":{"startLine":312,"endLine":312,"endCol":12,"startCol":10,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["t1","{lq_tmp$x##2770 : (Data.Heap.Binominal.Tree a) | lq_tmp$x##2770 == t1##a23f}"]]],[{"spanInfo":{"startLine":68,"endLine":68,"endCol":36,"startCol":22,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.sumSizeList","forall a .\nlq_tmp$x##1339:[(Data.Heap.Binominal.Tree a)] -> {lq_tmp$x##1336 : GHC.Types.Int | lq_tmp$x##1336 == Data.Heap.Binominal.sumSizeList lq_tmp$x##1339\n                                                                                   && lq_tmp$x##1336 >= 0\n                                                                                   && len lq_tmp$x##1339 <= lq_tmp$x##1336}"]]],[{"spanInfo":{"startLine":200,"endLine":200,"endCol":24,"startCol":14,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["GHC.Num.$fNumInt","{lq_tmp$x##4842 : (GHC.Num.Num GHC.Types.Int) | lq_tmp$x##4842 == GHC.Num.$fNumInt}"]]],[{"spanInfo":{"startLine":257,"endLine":257,"endCol":32,"startCol":29,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["acc","{lq_tmp$x##4890 : [(Data.Heap.Binominal.Tree a)] | Data.Heap.Binominal.sumSizeList lq_tmp$x##4890 >= 0\n                                                   && len lq_tmp$x##4890 >= 0\n                                                   && len lq_tmp$x##4890 >= 0\n                                                   && lq_tmp$x##4890 == acc##a22M}"]]],[{"spanInfo":{"startLine":313,"endLine":313,"endCol":45,"startCol":30,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805023","{lq_tmp$x##3003 : [(Data.Heap.Binominal.Tree {lq_tmp$x##3018 : a^\"lq_tmp$x##3017\" | $k_##3016[VV##3015:=lq_tmp$x##3018][lq_tmp$x##3009:=fix$36$$36$dOrd_a2Ga][lq_tmp$x##3010:=ts1##a23c][lq_tmp$x##3011:=ts2'##a23j]})] | Data.Heap.Binominal.sumSizeList lq_tmp$x##3003 == Data.Heap.Binominal.sumSizeList ts1##a23c + Data.Heap.Binominal.sumSizeList ts2'##a23j}"]]],[{"spanInfo":{"startLine":309,"endLine":314,"endCol":64,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805020","{lq_tmp$x##2855 : GHC.Types.Bool | (lq_tmp$x##2855 <=> lq_anf$##7205759403792805017##d2Y9 < lq_anf$##7205759403792805018##d2Ya)\n                                   && lq_tmp$x##2855 == lq_anf$##7205759403792805019##d2Yb}"]]],[{"spanInfo":{"startLine":187,"endLine":187,"endCol":50,"startCol":49,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805006","{lq_tmp$x##2385 : GHC.Types.Int | lq_tmp$x##2385 == lq_anf$##7205759403792805005##d2XX}"]]],[{"spanInfo":{"startLine":305,"endLine":305,"endCol":47,"startCol":44,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ts1","{lq_tmp$x##3325 : [(Data.Heap.Binominal.Tree a)] | Data.Heap.Binominal.sumSizeList lq_tmp$x##3325 >= 0\n                                                   && len lq_tmp$x##3325 >= 0\n                                                   && len lq_tmp$x##3325 >= 0\n                                                   && lq_tmp$x##3325 == ts1##a23a}"]]],[{"spanInfo":{"startLine":312,"endLine":312,"endCol":22,"startCol":15,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792805014","{lq_tmp$x##2774 : GHC.Types.Int | lq_tmp$x##2774 >= 0\n                                  && lq_tmp$x##2774 == Data.Heap.Binominal.rank t2##a23i}"]]],[{"spanInfo":{"startLine":68,"endLine":68,"endCol":36,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792804975","{lq_tmp$x##1302 : (Data.Heap.Binominal.Heap a) | lq_tmp$x##1302 == ds_d2WM}"]]],[{"spanInfo":{"startLine":258,"endLine":258,"endCol":57,"startCol":56,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["x","{lq_tmp$x##4963 : (Data.Heap.Binominal.Tree a) | lq_tmp$x##4963 == x##a22N}"]]],[{"spanInfo":{"startLine":258,"endLine":258,"endCol":62,"startCol":33,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.reverseHeapListAux","forall a .\nlq_tmp$x##4851:[(Data.Heap.Binominal.Tree a)] -> lq_tmp$x##4852:[(Data.Heap.Binominal.Tree a)] -> {v : [(Data.Heap.Binominal.Tree a)] | Data.Heap.Binominal.sumSizeList v == Data.Heap.Binominal.sumSizeList lq_tmp$x##4851 + Data.Heap.Binominal.sumSizeList lq_tmp$x##4852}"]]],[{"spanInfo":{"startLine":162,"endLine":162,"endCol":22,"startCol":9,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["t1BoundedByX2","{lq_tmp$x##1662 : (Data.Heap.Binominal.Tree {lq_tmp$x##1672 : a^\"lq_tmp$x##1671\" | $k_##1670[VV##1669:=lq_tmp$x##1672][lq_tmp$x##1666:=ds_d2TD][lq_tmp$x##1667:=ds_d2Tz][lq_tmp$x##1668:=t1BoundedByX1##a22h]\n                                                                                   && ds_d2TD <= lq_tmp$x##1672}) | Data.Heap.Binominal.size lq_tmp$x##1662 == Data.Heap.Binominal.size t1BoundedByX1##a22h}"]]],[{"spanInfo":{"startLine":155,"endLine":163,"endCol":51,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792804983","{lq_tmp$x##1637 : GHC.Types.Bool | (lq_tmp$x##1637 <=> ds_d2Tz <= ds_d2TD)\n                                   && lq_tmp$x##1637 == lq_anf$##7205759403792804982##d2XA}"]]],[{"spanInfo":{"startLine":143,"endLine":143,"endCol":7,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["Data.Heap.Binominal.assert","forall a .\nlq_tmp$x##4323:{v : GHC.Types.Bool | v} -> lq_tmp$x##4324:a -> a"]]],[{"spanInfo":{"startLine":57,"endLine":57,"endCol":42,"startCol":40,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ds_d2WE","{lq_tmp$x##1275 : [(Data.Heap.Binominal.Tree a)] | len lq_tmp$x##1275 >= 0\n                                                   && len lq_tmp$x##1275 >= 0\n                                                   && lq_tmp$x##1275 == ds_d2WE}"]]],[{"spanInfo":{"startLine":193,"endLine":193,"endCol":30,"startCol":28,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ds_d2TI","{lq_tmp$x##2277 : [(Data.Heap.Binominal.Tree a)] | Data.Heap.Binominal.sumSizeList lq_tmp$x##2277 >= 0\n                                                   && len lq_tmp$x##2277 >= 0\n                                                   && len lq_tmp$x##2277 >= 0\n                                                   && lq_tmp$x##2277 == ds_d2TI}"]]],[{"spanInfo":{"startLine":312,"endLine":312,"endCol":45,"startCol":42,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ds_d2U4","{lq_tmp$x##3131 : [(Data.Heap.Binominal.Tree a)] | Data.Heap.Binominal.sumSizeList lq_tmp$x##3131 >= 0\n                                                   && len lq_tmp$x##3131 >= 0\n                                                   && len lq_tmp$x##3131 >= 0\n                                                   && lq_tmp$x##3131 == ds_d2U4}"]]],[{"spanInfo":{"startLine":291,"endLine":291,"endCol":56,"startCol":48,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["tBounded","{lq_tmp$x##3998 : (Data.Heap.Binominal.Tree {lq_tmp$x##3997 : a^\"lq_tmp$x##3934\" | $k_##3933[VV##3932:=lq_tmp$x##3997][lq_tmp$x##3929:=lq_tmp$x##3998][lq_tmp$x##3931:=t##a22Y][lq_tmp$x##3935:=lq_tmp$x##3997]\n                                                                                   && Data.Heap.Binominal.root t##a22Y <= lq_tmp$x##3997}) | Data.Heap.Binominal.size lq_tmp$x##3998 == Data.Heap.Binominal.size t##a22Y\n                                                                                                                                             && lq_tmp$x##3998 == tBounded##a235}"]]],[{"spanInfo":{"startLine":103,"endLine":103,"endCol":38,"startCol":34,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["tree","(Data.Heap.Binominal.Tree {VV : a | y##a21X <= VV})"]]],[{"spanInfo":{"startLine":280,"endLine":280,"endCol":15,"startCol":12,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ts'","{VV##3846 : [{VV##3836 : (Data.Heap.Binominal.Tree {VV##3833 : a^\"lq_tmp$x##3835\" | $k_##3834})^\"lq_tmp$x##3838\" | $k_##3837}]<\\lq_tmp$x##3839 VV -> {VV##3843 : (Data.Heap.Binominal.Tree {VV##3840 : a^\"lq_tmp$x##3842\" | $k_##3841})^\"lq_tmp$x##3845\" | $k_##3844}>^\"lq_tmp$x##3848\" | $k_##3847}"]]],[{"spanInfo":{"startLine":313,"endLine":313,"endCol":45,"startCol":25,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["GHC.Types.:","forall a <p :: a a -> Bool> .\nlq_tmp$x##3048:a -> lq_tmp$x##3049:[{lq_tmp$x##3037 : a<p lq_tmp$x##3048> | true}]<\\lq_tmp$x##3050 VV -> {lq_tmp$x##3039 : a<p lq_tmp$x##3050> | true}> -> {lq_tmp$x##3044 : [a]<\\lq_tmp$x##3051 VV -> {lq_tmp$x##3043 : a<p lq_tmp$x##3051> | true}> | tail lq_tmp$x##3044 == lq_tmp$x##3049\n                                                                                                                                                                                                                                                        && head lq_tmp$x##3044 == lq_tmp$x##3048\n                                                                                                                                                                                                                                                        && listElts lq_tmp$x##3044 == Set_cup (Set_sng lq_tmp$x##3048) (listElts lq_tmp$x##3049)\n                                                                                                                                                                                                                                                        && len lq_tmp$x##3044 == 1 + len lq_tmp$x##3049\n                                                                                                                                                                                                                                                        && Data.Heap.Binominal.mapSize lq_tmp$x##3044 == GHC.Types.: (Data.Heap.Binominal.size lq_tmp$x##3048) (Data.Heap.Binominal.mapSize lq_tmp$x##3049)\n                                                                                                                                                                                                                                                        && Data.Heap.Binominal.sumPositives lq_tmp$x##3044 == lq_tmp$x##3048 + Data.Heap.Binominal.sumPositives lq_tmp$x##3049\n                                                                                                                                                                                                                                                        && Data.Heap.Binominal.len lq_tmp$x##3044 == 1 + Data.Heap.Binominal.len lq_tmp$x##3049\n                                                                                                                                                                                                                                                        && Data.Heap.Binominal.sumSizeList lq_tmp$x##3044 == Data.Heap.Binominal.sumPositives (Data.Heap.Binominal.mapSize (GHC.Types.: lq_tmp$x##3048 lq_tmp$x##3049))}"]]],[{"spanInfo":{"startLine":292,"endLine":292,"endCol":16,"startCol":13,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ts'","{lq_tmp$x##4039 : [{lq_tmp$x##4035 : (Data.Heap.Binominal.Tree {lq_tmp$x##4034 : a^\"lq_tmp$x##3835\" | $k_##3834[VV##3833:=lq_tmp$x##4034][VV##3836:=lq_tmp$x##4035][VV##3846:=lq_tmp$x##4039]})^\"lq_tmp$x##3838\" | $k_##3837[VV##3836:=lq_tmp$x##4035][VV##3846:=lq_tmp$x##4039]}]<\\lq_tmp$x##4040 VV -> {lq_tmp$x##4038 : (Data.Heap.Binominal.Tree {lq_tmp$x##4037 : a^\"lq_tmp$x##3842\" | $k_##3841[VV##3840:=lq_tmp$x##4037][VV##3843:=lq_tmp$x##4038][VV##3846:=lq_tmp$x##4039][lq_tmp$x##3839:=lq_tmp$x##4040][lq_tmp$x##4036:=lq_tmp$x##4040]})^\"lq_tmp$x##3845\" | $k_##3844[VV##3843:=lq_tmp$x##4038][VV##3846:=lq_tmp$x##4039][lq_tmp$x##3839:=lq_tmp$x##4040][lq_tmp$x##4036:=lq_tmp$x##4040]}>^\"lq_tmp$x##3848\" | $k_##3847[VV##3846:=lq_tmp$x##4039]\nata.Heap.Binominal.sumSizeList lq_tmp$x##4039 >= 0\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            && len lq_tmp$x##4039 >= 0\nlen lq_tmp$x##4039 >= 0\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            && lq_tmp$x##4039 == ts'##a2GO}"]]],[{"spanInfo":{"startLine":50,"endLine":50,"endCol":20,"startCol":19,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["lq_anf$##7205759403792804968","{lq_tmp$x##1097 : GHC.Prim.Int# | lq_tmp$x##1097 == 0}"]]],[{"spanInfo":{"startLine":163,"endLine":163,"endCol":13,"startCol":11,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ds_d2TC","{lq_tmp$x##1701 : GHC.Types.Int | lq_tmp$x##1701 >= 0\n                                  && lq_tmp$x##1701 == ds_d2TC}"]]],[{"spanInfo":{"startLine":289,"endLine":289,"endCol":14,"startCol":12,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["tl","{lq_tmp$x##4213 : [(Data.Heap.Binominal.Tree {lq_tmp$x##4208 : a^\"lq_tmp$x##4162\" | $k_##4161[VV##4160:=lq_tmp$x##4208][lq_tmp$x##4146:=lq_tmp$x##4209][lq_tmp$x##4150:=lq_tmp$x##4213][lq_tmp$x##4155:=x##a233][lq_tmp$x##4156:=x'##a234][lq_tmp$x##4157:=ts'##a2GO][lq_tmp$x##4163:=lq_tmp$x##4208]\n                                                                                    && x##a233 <= lq_tmp$x##4208})] | Data.Heap.Binominal.sumSizeList lq_tmp$x##4213 == Data.Heap.Binominal.sumSizeList ts'##a2GO\n                                                                                                                      && Data.Heap.Binominal.sumSizeList lq_tmp$x##4213 >= 0\n                                                                                                                      && len lq_tmp$x##4213 >= 0\n                                                                                                                      && len lq_tmp$x##4213 >= 0\n                                                                                                                      && lq_tmp$x##4213 == tl##a238}"]]],[{"spanInfo":{"startLine":291,"endLine":291,"endCol":45,"startCol":43,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["x'","{lq_tmp$x##3995 : a^\"lq_tmp$x##3921\" | $k_##3920[VV##3919:=lq_tmp$x##3995][lq_tmp$x##3918:=t'##a2GM][lq_tmp$x##3922:=lq_tmp$x##3995]\n                                       && lq_tmp$x##3995 == Data.Heap.Binominal.root t'##a2GM\n                                       && lq_tmp$x##3995 == x'##a234}"]]],[{"spanInfo":{"startLine":247,"endLine":247,"endCol":51,"startCol":37,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[[null,"forall a .\nlq_tmp$x##5373:{lq_tmp$x##5365 : (Data.Heap.Binominal.Heap a) | 0 < len (Data.Heap.Binominal.unheap lq_tmp$x##5365)} -> {lq_tmp$x##5371 : [(Data.Heap.Binominal.Tree a)] | 0 < len lq_tmp$x##5371\n                                                                                                                                                                           && Data.Heap.Binominal.sumSizeList lq_tmp$x##5371 == Data.Heap.Binominal.heapSize lq_tmp$x##5373}"]]],[{"spanInfo":{"startLine":313,"endLine":313,"endCol":45,"startCol":41,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true},[["ts2'","{lq_tmp$x##3033 : [(Data.Heap.Binominal.Tree a)] | Data.Heap.Binominal.sumSizeList lq_tmp$x##3033 >= 0\n                                                   && len lq_tmp$x##3033 >= 0\n                                                   && len lq_tmp$x##3033 >= 0\n                                                   && lq_tmp$x##3033 == ts2'##a23j}"]]]],"o_bots":[],"o_result":{"tag":"Unsafe","contents":[{"msg":"Liquid Type Mismatch\n  Inferred type\n    VV : {v : [(Data.Heap.Binominal.Tree a)] | Data.Heap.Binominal.sumSizeList v == Data.Heap.Binominal.size ?c + Data.Heap.Binominal.sumSizeList ?a\n                                               && Data.Heap.Binominal.sumSizeList v >= 0\n                                               && len v >= 0}\n \n  not a subtype of Required type\n    VV : {VV : [(Data.Heap.Binominal.Tree a)] | Data.Heap.Binominal.sumSizeList VV == Data.Heap.Binominal.sumSizeList ts1 + Data.Heap.Binominal.sumSizeList ?b}\n \n  In Context\n    ts1 : {ts1 : [(Data.Heap.Binominal.Tree a)] | Data.Heap.Binominal.sumSizeList ts1 >= 0\n                                                  && len ts1 >= 0}\n     \n    ?c : {?c : (Data.Heap.Binominal.Tree a) | Data.Heap.Binominal.size ?c == Data.Heap.Binominal.size t1 + Data.Heap.Binominal.size t2}\n     \n    ts2' : {ts2' : [(Data.Heap.Binominal.Tree a)] | Data.Heap.Binominal.sumSizeList ts2' >= 0\n                                                    && len ts2' >= 0}\n     \n    ?b : {?b : [(Data.Heap.Binominal.Tree a)] | Data.Heap.Binominal.sumSizeList ?b >= 0\n                                                && len ?b >= 0}\n     \n    t1 : (Data.Heap.Binominal.Tree a)\n     \n    t2 : (Data.Heap.Binominal.Tree a)\n     \n    ?a : {?a : [(Data.Heap.Binominal.Tree a)] | Data.Heap.Binominal.sumSizeList ?a == Data.Heap.Binominal.sumSizeList ts1' + Data.Heap.Binominal.sumSizeList ts2'\n                                                && Data.Heap.Binominal.sumSizeList ?a >= 0\n                                                && len ?a >= 0}\n     \n    ts1' : {ts1' : [(Data.Heap.Binominal.Tree a)] | Data.Heap.Binominal.sumSizeList ts1' >= 0\n                                                    && len ts1' >= 0}","pos":{"spanInfo":{"startLine":314,"endLine":314,"endCol":64,"startCol":25,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true}},{"msg":"Liquid Type Mismatch\n  Inferred type\n    VV : {v : ((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree a)]) | x_Tuple22 v == ?a\n                                                                               && x_Tuple21 v == t\n                                                                               && snd v == ?a\n                                                                               && fst v == t}\n \n  not a subtype of Required type\n    VV : {VV : ((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | Data.Heap.Binominal.root (fst VV) <= VV})]) | Data.Heap.Binominal.size (fst VV) + Data.Heap.Binominal.sumSizeList (snd VV) == Data.Heap.Binominal.sumSizeList ?b}\n \n  In Context\n    t : (Data.Heap.Binominal.Tree a)\n     \n    ?b : {?b : [(Data.Heap.Binominal.Tree a)] | 0 < len ?b\n                                                && Data.Heap.Binominal.sumSizeList ?b >= 0\n                                                && len ?b >= 0}\n     \n    ?a : {?a : [(Data.Heap.Binominal.Tree a)] | Set_emp (listElts ?a)\n                                                && len ?a == 0\n                                                && Data.Heap.Binominal.mapSize ?a == GHC.Types.[]\n                                                && Data.Heap.Binominal.sumPositives ?a == 0\n                                                && Data.Heap.Binominal.len ?a == 0\n                                                && Data.Heap.Binominal.sumSizeList ?a == 0\n                                                && Data.Heap.Binominal.sumSizeList ?a >= 0\n                                                && len ?a >= 0}","pos":{"spanInfo":{"startLine":278,"endLine":278,"endCol":25,"startCol":18,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true}},{"msg":"Liquid Type Mismatch\n  Inferred type\n    VV : {v : (Data.Heap.Binominal.Heap a) | Data.Heap.Binominal.unheap v == ?e\n                                             && Data.Heap.Binominal.heapSize v == Data.Heap.Binominal.sumSizeList ?e\n                                             && Data.Heap.Binominal.heapSize v >= 0}\n \n  not a subtype of Required type\n    VV : {VV : (Data.Heap.Binominal.Heap a) | Data.Heap.Binominal.heapSize VV == 1}\n \n  In Context\n    ?h : {?h : [(Data.Heap.Binominal.Tree a)] | Set_emp (listElts ?h)\n                                                && len ?h == 0\n                                                && Data.Heap.Binominal.mapSize ?h == GHC.Types.[]\n                                                && Data.Heap.Binominal.sumPositives ?h == 0\n                                                && Data.Heap.Binominal.len ?h == 0\n                                                && Data.Heap.Binominal.sumSizeList ?h == 0\n                                                && Data.Heap.Binominal.sumSizeList ?h >= 0\n                                                && len ?h >= 0}\n     \n    ?e : {?e : [(Data.Heap.Binominal.Tree a)] | tail ?e == ?b\n                                                && head ?e == ?a\n                                                && listElts ?e == Set_cup (Set_sng ?a) (listElts ?b)\n                                                && len ?e == 1 + len ?b\n                                                && Data.Heap.Binominal.mapSize ?e == GHC.Types.: (Data.Heap.Binominal.size ?a) (Data.Heap.Binominal.mapSize ?b)\n                                                && Data.Heap.Binominal.sumPositives ?e == ?a + Data.Heap.Binominal.sumPositives ?b\n                                                && Data.Heap.Binominal.len ?e == 1 + Data.Heap.Binominal.len ?b\n                                                && Data.Heap.Binominal.sumSizeList ?e == Data.Heap.Binominal.sumPositives (Data.Heap.Binominal.mapSize (GHC.Types.: ?a ?b))\n                                                && Data.Heap.Binominal.sumSizeList ?e >= 0\n                                                && len ?e >= 0}\n     \n    ?b : {?b : [(Data.Heap.Binominal.Tree a)] | Set_emp (listElts ?b)\n                                                && len ?b == 0\n                                                && Data.Heap.Binominal.mapSize ?b == GHC.Types.[]\n                                                && Data.Heap.Binominal.sumPositives ?b == 0\n                                                && Data.Heap.Binominal.len ?b == 0\n                                                && Data.Heap.Binominal.sumSizeList ?b == 0\n                                                && Data.Heap.Binominal.sumSizeList ?b >= 0\n                                                && len ?b >= 0}\n     \n    x : a\n     \n    ?a : {?a : (Data.Heap.Binominal.Tree a) | Data.Heap.Binominal.size ?a == 1\n                                              && Data.Heap.Binominal.subtrees ?a == ?h\n                                              && Data.Heap.Binominal.root ?a == x\n                                              && Data.Heap.Binominal.rank ?a == 0}","pos":{"spanInfo":{"startLine":175,"endLine":175,"endCol":35,"startCol":1,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true}},{"msg":"Liquid Type Mismatch\n  Inferred type\n    VV : {v : [(Data.Heap.Binominal.Tree a)] | Data.Heap.Binominal.sumSizeList v == Data.Heap.Binominal.sumSizeList xs + Data.Heap.Binominal.sumSizeList ?b\n                                               && Data.Heap.Binominal.sumSizeList v >= 0\n                                               && len v >= 0}\n \n  not a subtype of Required type\n    VV : {VV : [(Data.Heap.Binominal.Tree a)] | Data.Heap.Binominal.sumSizeList VV == Data.Heap.Binominal.sumSizeList ?a + Data.Heap.Binominal.sumSizeList acc}\n \n  In Context\n    xs : {v : [(Data.Heap.Binominal.Tree a)] | Data.Heap.Binominal.sumSizeList v >= 0\n                                               && len v >= 0}\n     \n    ?b : {?b : [(Data.Heap.Binominal.Tree a)] | tail ?b == acc\n                                                && head ?b == x\n                                                && listElts ?b == Set_cup (Set_sng x) (listElts acc)\n                                                && len ?b == 1 + len acc\n                                                && Data.Heap.Binominal.mapSize ?b == GHC.Types.: (Data.Heap.Binominal.size x) (Data.Heap.Binominal.mapSize acc)\n                                                && Data.Heap.Binominal.sumPositives ?b == x + Data.Heap.Binominal.sumPositives acc\n                                                && Data.Heap.Binominal.len ?b == 1 + Data.Heap.Binominal.len acc\n                                                && Data.Heap.Binominal.sumSizeList ?b == Data.Heap.Binominal.sumPositives (Data.Heap.Binominal.mapSize (GHC.Types.: x acc))\n                                                && Data.Heap.Binominal.sumSizeList ?b >= 0\n                                                && len ?b >= 0}\n     \n    x : (Data.Heap.Binominal.Tree a)\n     \n    ?a : {?a : [(Data.Heap.Binominal.Tree a)] | Data.Heap.Binominal.sumSizeList ?a >= 0\n                                                && len ?a >= 0}\n     \n    acc : {acc : [(Data.Heap.Binominal.Tree a)] | Data.Heap.Binominal.sumSizeList acc >= 0\n                                                  && len acc >= 0}","pos":{"spanInfo":{"startLine":258,"endLine":258,"endCol":62,"startCol":33,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true}},{"msg":"Liquid Type Mismatch\n  Inferred type\n    VV : {v : [(Data.Heap.Binominal.Tree a)] | tail v == ?b\n                                               && head v == t2\n                                               && listElts v == Set_cup (Set_sng t2) (listElts ?b)\n                                               && len v == 1 + len ?b\n                                               && Data.Heap.Binominal.mapSize v == GHC.Types.: (Data.Heap.Binominal.size t2) (Data.Heap.Binominal.mapSize ?b)\n                                               && Data.Heap.Binominal.sumPositives v == t2 + Data.Heap.Binominal.sumPositives ?b\n                                               && Data.Heap.Binominal.len v == 1 + Data.Heap.Binominal.len ?b\n                                               && Data.Heap.Binominal.sumSizeList v == Data.Heap.Binominal.sumPositives (Data.Heap.Binominal.mapSize (GHC.Types.: t2 ?b))\n                                               && Data.Heap.Binominal.sumSizeList v >= 0\n                                               && len v >= 0}\n \n  not a subtype of Required type\n    VV : {VV : [(Data.Heap.Binominal.Tree a)] | Data.Heap.Binominal.sumSizeList VV == Data.Heap.Binominal.sumSizeList ts1 + Data.Heap.Binominal.sumSizeList ?a}\n \n  In Context\n    ts1 : {ts1 : [(Data.Heap.Binominal.Tree a)] | Data.Heap.Binominal.sumSizeList ts1 >= 0\n                                                  && len ts1 >= 0}\n     \n    ts2' : {ts2' : [(Data.Heap.Binominal.Tree a)] | Data.Heap.Binominal.sumSizeList ts2' >= 0\n                                                    && len ts2' >= 0}\n     \n    ?b : {?b : [(Data.Heap.Binominal.Tree a)] | Data.Heap.Binominal.sumSizeList ?b == Data.Heap.Binominal.sumSizeList ts1 + Data.Heap.Binominal.sumSizeList ts2'\n                                                && Data.Heap.Binominal.sumSizeList ?b >= 0\n                                                && len ?b >= 0}\n     \n    t2 : (Data.Heap.Binominal.Tree a)\n     \n    ?a : {?a : [(Data.Heap.Binominal.Tree a)] | Data.Heap.Binominal.sumSizeList ?a >= 0\n                                                && len ?a >= 0}","pos":{"spanInfo":{"startLine":313,"endLine":313,"endCol":45,"startCol":25,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true}},{"msg":"Liquid Type Mismatch\n  Inferred type\n    VV : {v : [(Data.Heap.Binominal.Tree a)] | Data.Heap.Binominal.sumSizeList v == Data.Heap.Binominal.size ?b + Data.Heap.Binominal.sumSizeList ts'\n                                               && Data.Heap.Binominal.sumSizeList v >= 0\n                                               && len v >= 0}\n \n  not a subtype of Required type\n    VV : {VV : [(Data.Heap.Binominal.Tree a)] | Data.Heap.Binominal.sumSizeList VV == Data.Heap.Binominal.size t + Data.Heap.Binominal.sumSizeList ?a}\n \n  In Context\n    t : (Data.Heap.Binominal.Tree a)\n     \n    ?b : {?b : (Data.Heap.Binominal.Tree a) | Data.Heap.Binominal.size ?b == Data.Heap.Binominal.size t + Data.Heap.Binominal.size t'}\n     \n    ts' : {ts' : [(Data.Heap.Binominal.Tree a)] | Data.Heap.Binominal.sumSizeList ts' >= 0\n                                                  && len ts' >= 0}\n     \n    t' : (Data.Heap.Binominal.Tree a)\n     \n    ?a : {?a : [(Data.Heap.Binominal.Tree a)] | Data.Heap.Binominal.sumSizeList ?a >= 0\n                                                && len ?a >= 0}","pos":{"spanInfo":{"startLine":194,"endLine":194,"endCol":47,"startCol":24,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true}},{"msg":"Liquid Type Mismatch\n  Inferred type\n    VV : {v : GHC.Types.Int | v == (1 + Data.Heap.Binominal.sumSizeList ?h) + (1 + Data.Heap.Binominal.sumSizeList ?a)}\n \n  not a subtype of Required type\n    VV : {VV : GHC.Types.Int | 1 <= VV\n                               && VV == 1 + Data.Heap.Binominal.sumSizeList ?e}\n \n  In Context\n    t2BoundedByX1 : {t2BoundedByX1 : (Data.Heap.Binominal.Tree a) | Data.Heap.Binominal.size t2BoundedByX1 == Data.Heap.Binominal.size t2BoundedByX2}\n     \n    ?i : a\n     \n    ?c : {?c : GHC.Types.Int | ?c >= 0}\n     \n    t2BoundedByX2 : {t2BoundedByX2 : (Data.Heap.Binominal.Tree a) | Data.Heap.Binominal.size t2BoundedByX2 == Data.Heap.Binominal.size t2}\n     \n    ?h : {?h : [(Data.Heap.Binominal.Tree a)] | Data.Heap.Binominal.sumSizeList ?h >= 0\n                                                && len ?h >= 0}\n     \n    ?e : {?e : [(Data.Heap.Binominal.Tree a)] | tail ?e == ?h\n                                                && head ?e == t2BoundedByX1\n                                                && listElts ?e == Set_cup (Set_sng t2BoundedByX1) (listElts ?h)\n                                                && len ?e == 1 + len ?h\n                                                && Data.Heap.Binominal.mapSize ?e == GHC.Types.: (Data.Heap.Binominal.size t2BoundedByX1) (Data.Heap.Binominal.mapSize ?h)\n                                                && Data.Heap.Binominal.sumPositives ?e == t2BoundedByX1 + Data.Heap.Binominal.sumPositives ?h\n                                                && Data.Heap.Binominal.len ?e == 1 + Data.Heap.Binominal.len ?h\n                                                && Data.Heap.Binominal.sumSizeList ?e == Data.Heap.Binominal.sumPositives (Data.Heap.Binominal.mapSize (GHC.Types.: t2BoundedByX1 ?h))\n                                                && Data.Heap.Binominal.sumSizeList ?e >= 0\n                                                && len ?e >= 0}\n     \n    t2 : (Data.Heap.Binominal.Tree a)\n     \n    ?a : {?a : [(Data.Heap.Binominal.Tree a)] | Data.Heap.Binominal.sumSizeList ?a >= 0\n                                                && len ?a >= 0}","pos":{"spanInfo":{"startLine":159,"endLine":159,"endCol":51,"startCol":40,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true}},{"msg":"Liquid Type Mismatch\n  Inferred type\n    VV : {v : ((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree a)]) | x_Tuple22 v == ?c\n                                                                               && x_Tuple21 v == fst ?a\n                                                                               && snd v == ?c\n                                                                               && fst v == fst ?a}\n \n  not a subtype of Required type\n    VV : {VV : ((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | Data.Heap.Binominal.root (fst VV) <= VV})]) | Data.Heap.Binominal.size (fst VV) + Data.Heap.Binominal.sumSizeList (snd VV) == Data.Heap.Binominal.sumSizeList ?b}\n \n  In Context\n    hd : {hd : (Data.Heap.Binominal.Tree a) | Data.Heap.Binominal.size hd == Data.Heap.Binominal.size tBounded}\n     \n    tBounded : {tBounded : (Data.Heap.Binominal.Tree a) | Data.Heap.Binominal.size tBounded == Data.Heap.Binominal.size t}\n     \n    ?c : {?c : [(Data.Heap.Binominal.Tree a)] | tail ?c == snd ?a\n                                                && head ?c == hd\n                                                && listElts ?c == Set_cup (Set_sng hd) (listElts (snd ?a))\n                                                && len ?c == 1 + len (snd ?a)\n                                                && Data.Heap.Binominal.mapSize ?c == GHC.Types.: (Data.Heap.Binominal.size hd) (Data.Heap.Binominal.mapSize (snd ?a))\n                                                && Data.Heap.Binominal.sumPositives ?c == hd + Data.Heap.Binominal.sumPositives (snd ?a)\n                                                && Data.Heap.Binominal.len ?c == 1 + Data.Heap.Binominal.len (snd ?a)\n                                                && Data.Heap.Binominal.sumSizeList ?c == Data.Heap.Binominal.sumPositives (Data.Heap.Binominal.mapSize (GHC.Types.: hd (snd ?a)))\n                                                && Data.Heap.Binominal.sumSizeList ?c >= 0\n                                                && len ?c >= 0}\n     \n    t : (Data.Heap.Binominal.Tree a)\n     \n    ?b : {?b : [(Data.Heap.Binominal.Tree a)] | 0 < len ?b\n                                                && Data.Heap.Binominal.sumSizeList ?b >= 0\n                                                && len ?b >= 0}\n     \n    ?d : {?d : [(Data.Heap.Binominal.Tree a)] | Data.Heap.Binominal.sumSizeList ?d >= 0\n                                                && len ?d >= 0}\n     \n    ?a : {?a : ((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree a)]) | Data.Heap.Binominal.size (fst ?a) + Data.Heap.Binominal.sumSizeList (snd ?a) == Data.Heap.Binominal.sumSizeList ?d}","pos":{"spanInfo":{"startLine":291,"endLine":292,"endCol":17,"startCol":5,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true}},{"msg":"Liquid Type Mismatch\n  Inferred type\n    VV : {v : ((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree a)]) | x_Tuple22 v == ?a\n                                                                               && x_Tuple21 v == t\n                                                                               && snd v == ?a\n                                                                               && fst v == t}\n \n  not a subtype of Required type\n    VV : {VV : ((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree {VV : a | Data.Heap.Binominal.root (fst VV) <= VV})]) | Data.Heap.Binominal.size (fst VV) + Data.Heap.Binominal.sumSizeList (snd VV) == Data.Heap.Binominal.sumSizeList ?c}\n \n  In Context\n    hd : {hd : (Data.Heap.Binominal.Tree a) | Data.Heap.Binominal.size hd == Data.Heap.Binominal.size tBounded'}\n     \n    ?c : {?c : [(Data.Heap.Binominal.Tree a)] | 0 < len ?c\n                                                && Data.Heap.Binominal.sumSizeList ?c >= 0\n                                                && len ?c >= 0}\n     \n    t : (Data.Heap.Binominal.Tree a)\n     \n    ?b : {?b : ((Data.Heap.Binominal.Tree a), [(Data.Heap.Binominal.Tree a)]) | Data.Heap.Binominal.size (fst ?b) + Data.Heap.Binominal.sumSizeList (snd ?b) == Data.Heap.Binominal.sumSizeList ?d}\n     \n    tBounded' : {tBounded' : (Data.Heap.Binominal.Tree a) | Data.Heap.Binominal.size tBounded' == Data.Heap.Binominal.size (fst ?b)}\n     \n    tl : {tl : [(Data.Heap.Binominal.Tree a)] | Data.Heap.Binominal.sumSizeList tl == Data.Heap.Binominal.sumSizeList (snd ?b)\n                                                && Data.Heap.Binominal.sumSizeList tl >= 0\n                                                && len tl >= 0}\n     \n    ?d : {?d : [(Data.Heap.Binominal.Tree a)] | Data.Heap.Binominal.sumSizeList ?d >= 0\n                                                && len ?d >= 0}\n     \n    ?a : {?a : [(Data.Heap.Binominal.Tree a)] | tail ?a == tl\n                                                && head ?a == hd\n                                                && listElts ?a == Set_cup (Set_sng hd) (listElts tl)\n                                                && len ?a == 1 + len tl\n                                                && Data.Heap.Binominal.mapSize ?a == GHC.Types.: (Data.Heap.Binominal.size hd) (Data.Heap.Binominal.mapSize tl)\n                                                && Data.Heap.Binominal.sumPositives ?a == hd + Data.Heap.Binominal.sumPositives tl\n                                                && Data.Heap.Binominal.len ?a == 1 + Data.Heap.Binominal.len tl\n                                                && Data.Heap.Binominal.sumSizeList ?a == Data.Heap.Binominal.sumPositives (Data.Heap.Binominal.mapSize (GHC.Types.: hd tl))\n                                                && Data.Heap.Binominal.sumSizeList ?a >= 0\n                                                && len ?a >= 0}","pos":{"spanInfo":{"startLine":287,"endLine":289,"endCol":15,"startCol":5,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true}},{"msg":"Liquid Type Mismatch\n  Inferred type\n    VV : {v : [(Data.Heap.Binominal.Tree a)] | tail v == ?a\n                                               && head v == t1\n                                               && listElts v == Set_cup (Set_sng t1) (listElts ?a)\n                                               && len v == 1 + len ?a\n                                               && Data.Heap.Binominal.mapSize v == GHC.Types.: (Data.Heap.Binominal.size t1) (Data.Heap.Binominal.mapSize ?a)\n                                               && Data.Heap.Binominal.sumPositives v == t1 + Data.Heap.Binominal.sumPositives ?a\n                                               && Data.Heap.Binominal.len v == 1 + Data.Heap.Binominal.len ?a\n                                               && Data.Heap.Binominal.sumSizeList v == Data.Heap.Binominal.sumPositives (Data.Heap.Binominal.mapSize (GHC.Types.: t1 ?a))\n                                               && Data.Heap.Binominal.sumSizeList v >= 0\n                                               && len v >= 0}\n \n  not a subtype of Required type\n    VV : {VV : [(Data.Heap.Binominal.Tree a)] | Data.Heap.Binominal.sumSizeList VV == Data.Heap.Binominal.sumSizeList ts1 + Data.Heap.Binominal.sumSizeList ?b}\n \n  In Context\n    ts1 : {ts1 : [(Data.Heap.Binominal.Tree a)] | Data.Heap.Binominal.sumSizeList ts1 >= 0\n                                                  && len ts1 >= 0}\n     \n    ?b : {?b : [(Data.Heap.Binominal.Tree a)] | Data.Heap.Binominal.sumSizeList ?b >= 0\n                                                && len ?b >= 0}\n     \n    t1 : (Data.Heap.Binominal.Tree a)\n     \n    ?a : {?a : [(Data.Heap.Binominal.Tree a)] | Data.Heap.Binominal.sumSizeList ?a == Data.Heap.Binominal.sumSizeList ts1' + Data.Heap.Binominal.sumSizeList ?b\n                                                && Data.Heap.Binominal.sumSizeList ?a >= 0\n                                                && len ?a >= 0}\n     \n    ts1' : {ts1' : [(Data.Heap.Binominal.Tree a)] | Data.Heap.Binominal.sumSizeList ts1' >= 0\n                                                    && len ts1' >= 0}","pos":{"spanInfo":{"startLine":312,"endLine":312,"endCol":45,"startCol":25,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true}},{"msg":"Liquid Type Mismatch\n  Inferred type\n    VV : {v : [(Data.Heap.Binominal.Tree a)] | tail v == ?a\n                                               && head v == t\n                                               && listElts v == Set_cup (Set_sng t) (listElts ?a)\n                                               && len v == 1 + len ?a\n                                               && Data.Heap.Binominal.mapSize v == GHC.Types.: (Data.Heap.Binominal.size t) (Data.Heap.Binominal.mapSize ?a)\n                                               && Data.Heap.Binominal.sumPositives v == t + Data.Heap.Binominal.sumPositives ?a\n                                               && Data.Heap.Binominal.len v == 1 + Data.Heap.Binominal.len ?a\n                                               && Data.Heap.Binominal.sumSizeList v == Data.Heap.Binominal.sumPositives (Data.Heap.Binominal.mapSize (GHC.Types.: t ?a))\n                                               && Data.Heap.Binominal.sumSizeList v >= 0\n                                               && len v >= 0}\n \n  not a subtype of Required type\n    VV : {VV : [(Data.Heap.Binominal.Tree a)] | Data.Heap.Binominal.sumSizeList VV == Data.Heap.Binominal.size t + Data.Heap.Binominal.sumSizeList ?a}\n \n  In Context\n    t : (Data.Heap.Binominal.Tree a)\n     \n    ?a : {?a : [(Data.Heap.Binominal.Tree a)] | Data.Heap.Binominal.sumSizeList ?a >= 0\n                                                && len ?a >= 0}","pos":{"spanInfo":{"startLine":193,"endLine":193,"endCol":30,"startCol":24,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true}},{"msg":"Liquid Type Mismatch\n  Inferred type\n    VV : {v : GHC.Types.Int | v == (1 + Data.Heap.Binominal.sumSizeList ?i) + (1 + Data.Heap.Binominal.sumSizeList ?a)}\n \n  not a subtype of Required type\n    VV : {VV : GHC.Types.Int | 1 <= VV\n                               && VV == 1 + Data.Heap.Binominal.sumSizeList ?g}\n \n  In Context\n    t1BoundedByX1 : {t1BoundedByX1 : (Data.Heap.Binominal.Tree a) | Data.Heap.Binominal.size t1BoundedByX1 == Data.Heap.Binominal.size t1}\n     \n    ?g : {?g : [(Data.Heap.Binominal.Tree a)] | tail ?g == ?a\n                                                && head ?g == t1BoundedByX2\n                                                && listElts ?g == Set_cup (Set_sng t1BoundedByX2) (listElts ?a)\n                                                && len ?g == 1 + len ?a\n                                                && Data.Heap.Binominal.mapSize ?g == GHC.Types.: (Data.Heap.Binominal.size t1BoundedByX2) (Data.Heap.Binominal.mapSize ?a)\n                                                && Data.Heap.Binominal.sumPositives ?g == t1BoundedByX2 + Data.Heap.Binominal.sumPositives ?a\n                                                && Data.Heap.Binominal.len ?g == 1 + Data.Heap.Binominal.len ?a\n                                                && Data.Heap.Binominal.sumSizeList ?g == Data.Heap.Binominal.sumPositives (Data.Heap.Binominal.mapSize (GHC.Types.: t1BoundedByX2 ?a))\n                                                && Data.Heap.Binominal.sumSizeList ?g >= 0\n                                                && len ?g >= 0}\n     \n    ?i : {?i : [(Data.Heap.Binominal.Tree a)] | Data.Heap.Binominal.sumSizeList ?i >= 0\n                                                && len ?i >= 0}\n     \n    t1BoundedByX2 : {t1BoundedByX2 : (Data.Heap.Binominal.Tree a) | Data.Heap.Binominal.size t1BoundedByX2 == Data.Heap.Binominal.size t1BoundedByX1}\n     \n    ?h : a\n     \n    ?e : {?e : GHC.Types.Int | ?e >= 0}\n     \n    t1 : (Data.Heap.Binominal.Tree a)\n     \n    ?a : {?a : [(Data.Heap.Binominal.Tree a)] | Data.Heap.Binominal.sumSizeList ?a >= 0\n                                                && len ?a >= 0}","pos":{"spanInfo":{"startLine":163,"endLine":163,"endCol":51,"startCol":40,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true}},{"msg":"Liquid Type Mismatch\n  Inferred type\n    VV : {v : [(Data.Heap.Binominal.Tree a)] | tail v == ?b\n                                               && head v == t\n                                               && listElts v == Set_cup (Set_sng t) (listElts ?b)\n                                               && len v == 1 + len ?b\n                                               && Data.Heap.Binominal.mapSize v == GHC.Types.: (Data.Heap.Binominal.size t) (Data.Heap.Binominal.mapSize ?b)\n                                               && Data.Heap.Binominal.sumPositives v == t + Data.Heap.Binominal.sumPositives ?b\n                                               && Data.Heap.Binominal.len v == 1 + Data.Heap.Binominal.len ?b\n                                               && Data.Heap.Binominal.sumSizeList v == Data.Heap.Binominal.sumPositives (Data.Heap.Binominal.mapSize (GHC.Types.: t ?b))\n                                               && Data.Heap.Binominal.sumSizeList v >= 0\n                                               && len v >= 0}\n \n  not a subtype of Required type\n    VV : {VV : [(Data.Heap.Binominal.Tree a)] | Data.Heap.Binominal.sumSizeList VV == Data.Heap.Binominal.size t + Data.Heap.Binominal.sumSizeList ?a}\n \n  In Context\n    t : (Data.Heap.Binominal.Tree a)\n     \n    ?b : {?b : [(Data.Heap.Binominal.Tree a)] | Set_emp (listElts ?b)\n                                                && len ?b == 0\n                                                && Data.Heap.Binominal.mapSize ?b == GHC.Types.[]\n                                                && Data.Heap.Binominal.sumPositives ?b == 0\n                                                && Data.Heap.Binominal.len ?b == 0\n                                                && Data.Heap.Binominal.sumSizeList ?b == 0\n                                                && Data.Heap.Binominal.sumSizeList ?b >= 0\n                                                && len ?b >= 0}\n     \n    ?a : {?a : [(Data.Heap.Binominal.Tree a)] | Data.Heap.Binominal.sumSizeList ?a >= 0\n                                                && len ?a >= 0}","pos":{"spanInfo":{"startLine":191,"endLine":191,"endCol":19,"startCol":16,"filename":"/Users/palmerpa/cis673-proj/BinomialHeap.hs"},"realSpan":true}}]}}